// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute.generated.generated;

import com.azure.core.management.SubResource;
import com.azure.resourcemanager.compute.generated.models.HyperVGenerationTypes;
import com.azure.resourcemanager.compute.generated.models.Image;
import java.util.HashMap;
import java.util.Map;

/**
 * Samples for Images Update.
 */
public final class ImagesUpdateSamples {
    /*
     * x-ms-original-file: specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2024-03-01/examples/imageExamples/Image_Update.json
     */
    /**
     * Sample code: Updates tags of an Image.
     * 
     * @param manager Entry point to ComputeManager.
     */
    public static void updatesTagsOfAnImage(com.azure.resourcemanager.compute.generated.ComputeManager manager) {
        Image resource = manager.images()
            .getByResourceGroupWithResponse("myResourceGroup", "myImage", null, com.azure.core.util.Context.NONE)
            .getValue();
        resource.update()
            .withTags(mapOf("department", "HR"))
            .withSourceVirtualMachine(new SubResource().withId(
                "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM"))
            .withHyperVGeneration(HyperVGenerationTypes.V1)
            .apply();
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
