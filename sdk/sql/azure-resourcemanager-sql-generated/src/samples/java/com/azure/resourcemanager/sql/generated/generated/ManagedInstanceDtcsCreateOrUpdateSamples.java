// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.generated;

import com.azure.resourcemanager.sql.generated.models.DtcName;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceDtc;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceDtcSecuritySettings;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceDtcTransactionManagerCommunicationSettings;
import java.util.Arrays;

/**
 * Samples for ManagedInstanceDtcs CreateOrUpdate.
 */
public final class ManagedInstanceDtcsCreateOrUpdateSamples {
    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2022-05-01-preview/examples/
     * ManagedInstanceDtcUpdateEnableDtc.json
     */
    /**
     * Sample code: Updates managed instance DTC settings by enabling DTC.
     * 
     * @param manager Entry point to SqlManager.
     */
    public static void
        updatesManagedInstanceDTCSettingsByEnablingDTC(com.azure.resourcemanager.sql.generated.SqlManager manager) {
        ManagedInstanceDtc resource = manager.managedInstanceDtcs()
            .getWithResponse("testrg", "testinstance", DtcName.CURRENT, com.azure.core.util.Context.NONE).getValue();
        resource.update().withDtcEnabled(true).apply();
    }

    /*
     * x-ms-original-file:
     * specification/sql/resource-manager/Microsoft.Sql/preview/2022-05-01-preview/examples/ManagedInstanceDtcUpdateMax.
     * json
     */
    /**
     * Sample code: Updates managed instance DTC settings with all optional parameters specified.
     * 
     * @param manager Entry point to SqlManager.
     */
    public static void updatesManagedInstanceDTCSettingsWithAllOptionalParametersSpecified(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        ManagedInstanceDtc resource = manager.managedInstanceDtcs()
            .getWithResponse("testrg", "testinstance", DtcName.CURRENT, com.azure.core.util.Context.NONE).getValue();
        resource.update().withDtcEnabled(true).withSecuritySettings(new ManagedInstanceDtcSecuritySettings()
            .withTransactionManagerCommunicationSettings(new ManagedInstanceDtcTransactionManagerCommunicationSettings()
                .withAllowInboundEnabled(false).withAllowOutboundEnabled(true).withAuthentication("NoAuth"))
            .withXaTransactionsEnabled(false).withSnaLu6Point2TransactionsEnabled(false)
            .withXaTransactionsDefaultTimeout(1000).withXaTransactionsMaximumTimeout(3000))
            .withExternalDnsSuffixSearchList(Arrays.asList("dns.example1.com", "dns.example2.com")).apply();
    }
}
