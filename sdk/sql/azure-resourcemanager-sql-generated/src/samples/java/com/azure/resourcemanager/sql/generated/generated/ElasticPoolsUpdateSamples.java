// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.generated;

import com.azure.resourcemanager.sql.generated.models.AlwaysEncryptedEnclaveType;
import com.azure.resourcemanager.sql.generated.models.ElasticPool;
import com.azure.resourcemanager.sql.generated.models.ElasticPoolLicenseType;
import com.azure.resourcemanager.sql.generated.models.ElasticPoolPerDatabaseSettings;
import com.azure.resourcemanager.sql.generated.models.Sku;

/**
 * Samples for ElasticPools Update.
 */
public final class ElasticPoolsUpdateSamples {
    /*
     * x-ms-original-file:
     * specification/sql/resource-manager/Microsoft.Sql/preview/2022-08-01-preview/examples/ElasticPoolUpdateMax.json
     */
    /**
     * Sample code: Update an elastic pool with all parameter.
     * 
     * @param manager Entry point to SqlManager.
     */
    public static void updateAnElasticPoolWithAllParameter(com.azure.resourcemanager.sql.generated.SqlManager manager) {
        ElasticPool resource = manager.elasticPools().getWithResponse("sqlcrudtest-2369", "sqlcrudtest-8069",
            "sqlcrudtest-8102", com.azure.core.util.Context.NONE).getValue();
        resource.update().withSku(new Sku().withName("BC_Gen4").withTier("BusinessCritical").withCapacity(2))
            .withPerDatabaseSettings(new ElasticPoolPerDatabaseSettings().withMinCapacity(0.25D).withMaxCapacity(1.0D))
            .withZoneRedundant(true).withLicenseType(ElasticPoolLicenseType.LICENSE_INCLUDED).apply();
    }

    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2022-08-01-preview/examples/
     * HyperscaleElasticPoolUpdateSetHighAvailabilityReplicaCount.json
     */
    /**
     * Sample code: Update high availability replica count of a Hyperscale elastic pool.
     * 
     * @param manager Entry point to SqlManager.
     */
    public static void updateHighAvailabilityReplicaCountOfAHyperscaleElasticPool(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        ElasticPool resource = manager.elasticPools().getWithResponse("sqlcrudtest-2369", "sqlcrudtest-8069",
            "sqlcrudtest-8102", com.azure.core.util.Context.NONE).getValue();
        resource.update().withHighAvailabilityReplicaCount(2).apply();
    }

    /*
     * x-ms-original-file:
     * specification/sql/resource-manager/Microsoft.Sql/preview/2022-08-01-preview/examples/ElasticPoolUpdateMin.json
     */
    /**
     * Sample code: Update an elastic pool with minimum parameters.
     * 
     * @param manager Entry point to SqlManager.
     */
    public static void
        updateAnElasticPoolWithMinimumParameters(com.azure.resourcemanager.sql.generated.SqlManager manager) {
        ElasticPool resource = manager.elasticPools().getWithResponse("sqlcrudtest-2369", "sqlcrudtest-8069",
            "sqlcrudtest-8102", com.azure.core.util.Context.NONE).getValue();
        resource.update().apply();
    }

    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2022-08-01-preview/examples/
     * ElasticPoolUpdateAssignMaintenanceConfiguration.json
     */
    /**
     * Sample code: Assigns maintenance configuration to an elastic pool.
     * 
     * @param manager Entry point to SqlManager.
     */
    public static void
        assignsMaintenanceConfigurationToAnElasticPool(com.azure.resourcemanager.sql.generated.SqlManager manager) {
        ElasticPool resource = manager.elasticPools().getWithResponse("sqlcrudtest-2369", "sqlcrudtest-8069",
            "sqlcrudtest-8102", com.azure.core.util.Context.NONE).getValue();
        resource.update().withMaintenanceConfigurationId(
            "/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_JapanEast_1")
            .apply();
    }

    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2022-08-01-preview/examples/
     * ElasticPoolUpdateWithDefaultPreferredEnclaveType.json
     */
    /**
     * Sample code: Create or update elastic pool with preferred enclave type parameter as Default.
     * 
     * @param manager Entry point to SqlManager.
     */
    public static void createOrUpdateElasticPoolWithPreferredEnclaveTypeParameterAsDefault(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        ElasticPool resource = manager.elasticPools().getWithResponse("sqlcrudtest-2369", "sqlcrudtest-8069",
            "sqlcrudtest-8102", com.azure.core.util.Context.NONE).getValue();
        resource.update().withSku(new Sku().withName("GP_Gen5_4"))
            .withPreferredEnclaveType(AlwaysEncryptedEnclaveType.DEFAULT).apply();
    }

    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2022-08-01-preview/examples/
     * ElasticPoolUpdateWithVBSPreferredEnclaveType.json
     */
    /**
     * Sample code: Create or update elastic pool with preferred enclave type parameter as VBS.
     * 
     * @param manager Entry point to SqlManager.
     */
    public static void createOrUpdateElasticPoolWithPreferredEnclaveTypeParameterAsVBS(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        ElasticPool resource = manager.elasticPools().getWithResponse("sqlcrudtest-2369", "sqlcrudtest-8069",
            "sqlcrudtest-8102", com.azure.core.util.Context.NONE).getValue();
        resource.update().withSku(new Sku().withName("GP_Gen5_4"))
            .withPreferredEnclaveType(AlwaysEncryptedEnclaveType.VBS).apply();
    }

    /*
     * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2022-08-01-preview/examples/
     * ElasticPoolUpdateResetMaintenanceConfiguration.json
     */
    /**
     * Sample code: Resets maintenance configuration of an elastic pool to default.
     * 
     * @param manager Entry point to SqlManager.
     */
    public static void resetsMaintenanceConfigurationOfAnElasticPoolToDefault(
        com.azure.resourcemanager.sql.generated.SqlManager manager) {
        ElasticPool resource = manager.elasticPools().getWithResponse("sqlcrudtest-2369", "sqlcrudtest-8069",
            "sqlcrudtest-8102", com.azure.core.util.Context.NONE).getValue();
        resource.update().withMaintenanceConfigurationId(
            "/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default")
            .apply();
    }
}
