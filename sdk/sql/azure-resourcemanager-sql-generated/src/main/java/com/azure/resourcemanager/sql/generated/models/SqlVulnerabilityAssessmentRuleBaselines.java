// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of SqlVulnerabilityAssessmentRuleBaselines.
 */
public interface SqlVulnerabilityAssessmentRuleBaselines {
    /**
     * Gets a system database's sql vulnerability assessment rule baseline.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param baselineName The baselineName parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a system database's sql vulnerability assessment rule baseline as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<DatabaseSqlVulnerabilityAssessmentRuleBaseline> listByBaseline(String resourceGroupName,
        String serverName, VulnerabilityAssessmentName vulnerabilityAssessmentName, BaselineName baselineName);

    /**
     * Gets a system database's sql vulnerability assessment rule baseline.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param baselineName The baselineName parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a system database's sql vulnerability assessment rule baseline as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<DatabaseSqlVulnerabilityAssessmentRuleBaseline> listByBaseline(String resourceGroupName,
        String serverName, VulnerabilityAssessmentName vulnerabilityAssessmentName, BaselineName baselineName,
        Context context);

    /**
     * Gets a system database's sql vulnerability assessment rule baseline.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param baselineName The baselineName parameter.
     * @param ruleId The vulnerability assessment rule ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a system database's sql vulnerability assessment rule baseline along with {@link Response}.
     */
    Response<DatabaseSqlVulnerabilityAssessmentRuleBaseline> getWithResponse(String resourceGroupName,
        String serverName, VulnerabilityAssessmentName vulnerabilityAssessmentName, BaselineName baselineName,
        String ruleId, Context context);

    /**
     * Gets a system database's sql vulnerability assessment rule baseline.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param baselineName The baselineName parameter.
     * @param ruleId The vulnerability assessment rule ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a system database's sql vulnerability assessment rule baseline.
     */
    DatabaseSqlVulnerabilityAssessmentRuleBaseline get(String resourceGroupName, String serverName,
        VulnerabilityAssessmentName vulnerabilityAssessmentName, BaselineName baselineName, String ruleId);

    /**
     * Gets a system database's sql vulnerability assessment rule baseline.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a system database's sql vulnerability assessment rule baseline along with {@link Response}.
     */
    DatabaseSqlVulnerabilityAssessmentRuleBaseline getById(String id);

    /**
     * Gets a system database's sql vulnerability assessment rule baseline.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a system database's sql vulnerability assessment rule baseline along with {@link Response}.
     */
    Response<DatabaseSqlVulnerabilityAssessmentRuleBaseline> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new DatabaseSqlVulnerabilityAssessmentRuleBaseline resource.
     * 
     * @param name resource name.
     * @return the first stage of the new DatabaseSqlVulnerabilityAssessmentRuleBaseline definition.
     */
    DatabaseSqlVulnerabilityAssessmentRuleBaseline.DefinitionStages.Blank define(String name);
}
