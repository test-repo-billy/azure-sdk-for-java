// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.ManagedInstanceDtcInner;
import com.azure.resourcemanager.sql.generated.models.DtcName;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceDtc;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceDtcSecuritySettings;
import com.azure.resourcemanager.sql.generated.models.ProvisioningState;
import java.util.Collections;
import java.util.List;

public final class ManagedInstanceDtcImpl
    implements ManagedInstanceDtc, ManagedInstanceDtc.Definition, ManagedInstanceDtc.Update {
    private ManagedInstanceDtcInner innerObject;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public Boolean dtcEnabled() {
        return this.innerModel().dtcEnabled();
    }

    public ManagedInstanceDtcSecuritySettings securitySettings() {
        return this.innerModel().securitySettings();
    }

    public List<String> externalDnsSuffixSearchList() {
        List<String> inner = this.innerModel().externalDnsSuffixSearchList();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String dtcHostnameDnsSuffix() {
        return this.innerModel().dtcHostnameDnsSuffix();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ManagedInstanceDtcInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String managedInstanceName;

    private DtcName dtcName;

    public ManagedInstanceDtcImpl withExistingManagedInstance(String resourceGroupName, String managedInstanceName) {
        this.resourceGroupName = resourceGroupName;
        this.managedInstanceName = managedInstanceName;
        return this;
    }

    public ManagedInstanceDtc create() {
        this.innerObject = serviceManager.serviceClient().getManagedInstanceDtcs().createOrUpdate(resourceGroupName,
            managedInstanceName, dtcName, this.innerModel(), Context.NONE);
        return this;
    }

    public ManagedInstanceDtc create(Context context) {
        this.innerObject = serviceManager.serviceClient().getManagedInstanceDtcs().createOrUpdate(resourceGroupName,
            managedInstanceName, dtcName, this.innerModel(), context);
        return this;
    }

    ManagedInstanceDtcImpl(DtcName name, com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = new ManagedInstanceDtcInner();
        this.serviceManager = serviceManager;
        this.dtcName = name;
    }

    public ManagedInstanceDtcImpl update() {
        return this;
    }

    public ManagedInstanceDtc apply() {
        this.innerObject = serviceManager.serviceClient().getManagedInstanceDtcs().createOrUpdate(resourceGroupName,
            managedInstanceName, dtcName, this.innerModel(), Context.NONE);
        return this;
    }

    public ManagedInstanceDtc apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getManagedInstanceDtcs().createOrUpdate(resourceGroupName,
            managedInstanceName, dtcName, this.innerModel(), context);
        return this;
    }

    ManagedInstanceDtcImpl(ManagedInstanceDtcInner innerObject,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.managedInstanceName = Utils.getValueFromIdByName(innerObject.id(), "managedInstances");
        this.dtcName = DtcName.fromString(Utils.getValueFromIdByName(innerObject.id(), "dtc"));
    }

    public ManagedInstanceDtc refresh() {
        this.innerObject = serviceManager.serviceClient().getManagedInstanceDtcs()
            .getWithResponse(resourceGroupName, managedInstanceName, dtcName, Context.NONE).getValue();
        return this;
    }

    public ManagedInstanceDtc refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getManagedInstanceDtcs()
            .getWithResponse(resourceGroupName, managedInstanceName, dtcName, context).getValue();
        return this;
    }

    public ManagedInstanceDtcImpl withDtcEnabled(Boolean dtcEnabled) {
        this.innerModel().withDtcEnabled(dtcEnabled);
        return this;
    }

    public ManagedInstanceDtcImpl withSecuritySettings(ManagedInstanceDtcSecuritySettings securitySettings) {
        this.innerModel().withSecuritySettings(securitySettings);
        return this;
    }

    public ManagedInstanceDtcImpl withExternalDnsSuffixSearchList(List<String> externalDnsSuffixSearchList) {
        this.innerModel().withExternalDnsSuffixSearchList(externalDnsSuffixSearchList);
        return this;
    }
}
