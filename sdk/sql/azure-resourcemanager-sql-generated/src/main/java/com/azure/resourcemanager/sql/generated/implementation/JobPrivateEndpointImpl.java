// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.JobPrivateEndpointInner;
import com.azure.resourcemanager.sql.generated.models.JobPrivateEndpoint;

public final class JobPrivateEndpointImpl
    implements JobPrivateEndpoint, JobPrivateEndpoint.Definition, JobPrivateEndpoint.Update {
    private JobPrivateEndpointInner innerObject;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String targetServerAzureResourceId() {
        return this.innerModel().targetServerAzureResourceId();
    }

    public String privateEndpointId() {
        return this.innerModel().privateEndpointId();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public JobPrivateEndpointInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serverName;

    private String jobAgentName;

    private String privateEndpointName;

    public JobPrivateEndpointImpl withExistingJobAgent(String resourceGroupName, String serverName,
        String jobAgentName) {
        this.resourceGroupName = resourceGroupName;
        this.serverName = serverName;
        this.jobAgentName = jobAgentName;
        return this;
    }

    public JobPrivateEndpoint create() {
        this.innerObject = serviceManager.serviceClient().getJobPrivateEndpoints().createOrUpdate(resourceGroupName,
            serverName, jobAgentName, privateEndpointName, this.innerModel(), Context.NONE);
        return this;
    }

    public JobPrivateEndpoint create(Context context) {
        this.innerObject = serviceManager.serviceClient().getJobPrivateEndpoints().createOrUpdate(resourceGroupName,
            serverName, jobAgentName, privateEndpointName, this.innerModel(), context);
        return this;
    }

    JobPrivateEndpointImpl(String name, com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = new JobPrivateEndpointInner();
        this.serviceManager = serviceManager;
        this.privateEndpointName = name;
    }

    public JobPrivateEndpointImpl update() {
        return this;
    }

    public JobPrivateEndpoint apply() {
        this.innerObject = serviceManager.serviceClient().getJobPrivateEndpoints().createOrUpdate(resourceGroupName,
            serverName, jobAgentName, privateEndpointName, this.innerModel(), Context.NONE);
        return this;
    }

    public JobPrivateEndpoint apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getJobPrivateEndpoints().createOrUpdate(resourceGroupName,
            serverName, jobAgentName, privateEndpointName, this.innerModel(), context);
        return this;
    }

    JobPrivateEndpointImpl(JobPrivateEndpointInner innerObject,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serverName = Utils.getValueFromIdByName(innerObject.id(), "servers");
        this.jobAgentName = Utils.getValueFromIdByName(innerObject.id(), "jobAgents");
        this.privateEndpointName = Utils.getValueFromIdByName(innerObject.id(), "privateEndpoints");
    }

    public JobPrivateEndpoint refresh() {
        this.innerObject = serviceManager.serviceClient().getJobPrivateEndpoints()
            .getWithResponse(resourceGroupName, serverName, jobAgentName, privateEndpointName, Context.NONE).getValue();
        return this;
    }

    public JobPrivateEndpoint refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getJobPrivateEndpoints()
            .getWithResponse(resourceGroupName, serverName, jobAgentName, privateEndpointName, context).getValue();
        return this;
    }

    public JobPrivateEndpointImpl withTargetServerAzureResourceId(String targetServerAzureResourceId) {
        this.innerModel().withTargetServerAzureResourceId(targetServerAzureResourceId);
        return this;
    }
}
