// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of SqlVulnerabilityAssessmentScans.
 */
public interface SqlVulnerabilityAssessmentScans {
    /**
     * Lists the vulnerability assessment scans of a database.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of vulnerability assessment scan records as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SqlVulnerabilityAssessmentScanRecord> listBySqlVulnerabilityAssessments(String resourceGroupName,
        String serverName, VulnerabilityAssessmentName vulnerabilityAssessmentName);

    /**
     * Lists the vulnerability assessment scans of a database.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a list of vulnerability assessment scan records as paginated response with {@link PagedIterable}.
     */
    PagedIterable<SqlVulnerabilityAssessmentScanRecord> listBySqlVulnerabilityAssessments(String resourceGroupName,
        String serverName, VulnerabilityAssessmentName vulnerabilityAssessmentName, Context context);

    /**
     * Get a system database vulnerability assessment scan record.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param scanId The scanId parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a system database vulnerability assessment scan record along with {@link Response}.
     */
    Response<SqlVulnerabilityAssessmentScanRecord> getWithResponse(String resourceGroupName, String serverName,
        VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId, Context context);

    /**
     * Get a system database vulnerability assessment scan record.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param scanId The scanId parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a system database vulnerability assessment scan record.
     */
    SqlVulnerabilityAssessmentScanRecord get(String resourceGroupName, String serverName,
        VulnerabilityAssessmentName vulnerabilityAssessmentName, String scanId);
}
