// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.fluent.DatabaseSqlVulnerabilityAssessmentRuleBaselinesClient;
import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseSqlVulnerabilityAssessmentRuleBaselineInner;
import com.azure.resourcemanager.sql.generated.models.BaselineName;
import com.azure.resourcemanager.sql.generated.models.DatabaseSqlVulnerabilityAssessmentRuleBaseline;
import com.azure.resourcemanager.sql.generated.models.DatabaseSqlVulnerabilityAssessmentRuleBaselineInput;
import com.azure.resourcemanager.sql.generated.models.DatabaseSqlVulnerabilityAssessmentRuleBaselines;
import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentName;

public final class DatabaseSqlVulnerabilityAssessmentRuleBaselinesImpl
    implements DatabaseSqlVulnerabilityAssessmentRuleBaselines {
    private static final ClientLogger LOGGER
        = new ClientLogger(DatabaseSqlVulnerabilityAssessmentRuleBaselinesImpl.class);

    private final DatabaseSqlVulnerabilityAssessmentRuleBaselinesClient innerClient;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public DatabaseSqlVulnerabilityAssessmentRuleBaselinesImpl(
        DatabaseSqlVulnerabilityAssessmentRuleBaselinesClient innerClient,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<DatabaseSqlVulnerabilityAssessmentRuleBaseline> listByBaseline(String resourceGroupName,
        String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName,
        BaselineName baselineName) {
        PagedIterable<DatabaseSqlVulnerabilityAssessmentRuleBaselineInner> inner = this.serviceClient()
            .listByBaseline(resourceGroupName, serverName, databaseName, vulnerabilityAssessmentName, baselineName);
        return Utils.mapPage(inner,
            inner1 -> new DatabaseSqlVulnerabilityAssessmentRuleBaselineImpl(inner1, this.manager()));
    }

    public PagedIterable<DatabaseSqlVulnerabilityAssessmentRuleBaseline> listByBaseline(String resourceGroupName,
        String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName,
        BaselineName baselineName, Context context) {
        PagedIterable<DatabaseSqlVulnerabilityAssessmentRuleBaselineInner> inner = this.serviceClient().listByBaseline(
            resourceGroupName, serverName, databaseName, vulnerabilityAssessmentName, baselineName, context);
        return Utils.mapPage(inner,
            inner1 -> new DatabaseSqlVulnerabilityAssessmentRuleBaselineImpl(inner1, this.manager()));
    }

    public Response<DatabaseSqlVulnerabilityAssessmentRuleBaseline> getWithResponse(String resourceGroupName,
        String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName,
        BaselineName baselineName, String ruleId, Context context) {
        Response<DatabaseSqlVulnerabilityAssessmentRuleBaselineInner> inner = this.serviceClient().getWithResponse(
            resourceGroupName, serverName, databaseName, vulnerabilityAssessmentName, baselineName, ruleId, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new DatabaseSqlVulnerabilityAssessmentRuleBaselineImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public DatabaseSqlVulnerabilityAssessmentRuleBaseline get(String resourceGroupName, String serverName,
        String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, BaselineName baselineName,
        String ruleId) {
        DatabaseSqlVulnerabilityAssessmentRuleBaselineInner inner = this.serviceClient().get(resourceGroupName,
            serverName, databaseName, vulnerabilityAssessmentName, baselineName, ruleId);
        if (inner != null) {
            return new DatabaseSqlVulnerabilityAssessmentRuleBaselineImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<DatabaseSqlVulnerabilityAssessmentRuleBaseline> createOrUpdateWithResponse(String resourceGroupName,
        String serverName, String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName,
        BaselineName baselineName, String ruleId, DatabaseSqlVulnerabilityAssessmentRuleBaselineInput parameters,
        Context context) {
        Response<DatabaseSqlVulnerabilityAssessmentRuleBaselineInner> inner
            = this.serviceClient().createOrUpdateWithResponse(resourceGroupName, serverName, databaseName,
                vulnerabilityAssessmentName, baselineName, ruleId, parameters, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new DatabaseSqlVulnerabilityAssessmentRuleBaselineImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public DatabaseSqlVulnerabilityAssessmentRuleBaseline createOrUpdate(String resourceGroupName, String serverName,
        String databaseName, VulnerabilityAssessmentName vulnerabilityAssessmentName, BaselineName baselineName,
        String ruleId, DatabaseSqlVulnerabilityAssessmentRuleBaselineInput parameters) {
        DatabaseSqlVulnerabilityAssessmentRuleBaselineInner inner = this.serviceClient().createOrUpdate(
            resourceGroupName, serverName, databaseName, vulnerabilityAssessmentName, baselineName, ruleId, parameters);
        if (inner != null) {
            return new DatabaseSqlVulnerabilityAssessmentRuleBaselineImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<Void> deleteWithResponse(String resourceGroupName, String serverName, String databaseName,
        VulnerabilityAssessmentName vulnerabilityAssessmentName, BaselineName baselineName, String ruleId,
        Context context) {
        return this.serviceClient().deleteWithResponse(resourceGroupName, serverName, databaseName,
            vulnerabilityAssessmentName, baselineName, ruleId, context);
    }

    public void delete(String resourceGroupName, String serverName, String databaseName,
        VulnerabilityAssessmentName vulnerabilityAssessmentName, BaselineName baselineName, String ruleId) {
        this.serviceClient().delete(resourceGroupName, serverName, databaseName, vulnerabilityAssessmentName,
            baselineName, ruleId);
    }

    private DatabaseSqlVulnerabilityAssessmentRuleBaselinesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }
}
