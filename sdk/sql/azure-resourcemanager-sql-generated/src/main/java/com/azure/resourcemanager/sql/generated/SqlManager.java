// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated;

import com.azure.core.credential.TokenCredential;
import com.azure.core.http.HttpClient;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.HttpPipelinePosition;
import com.azure.core.http.policy.AddDatePolicy;
import com.azure.core.http.policy.AddHeadersFromContextPolicy;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.http.policy.HttpLoggingPolicy;
import com.azure.core.http.policy.HttpPipelinePolicy;
import com.azure.core.http.policy.HttpPolicyProviders;
import com.azure.core.http.policy.RequestIdPolicy;
import com.azure.core.http.policy.RetryOptions;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.util.Configuration;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.fluent.SqlManagementClient;
import com.azure.resourcemanager.sql.generated.implementation.BackupShortTermRetentionPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.CapabilitiesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DataMaskingPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DataMaskingRulesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DataWarehouseUserActivitiesOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseAdvancedThreatProtectionSettingsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseAdvisorsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseAutomaticTuningsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseBlobAuditingPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseColumnsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseEncryptionProtectorsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseExtensionsOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseRecommendedActionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseSchemasImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseSecurityAlertPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseSqlVulnerabilityAssessmentBaselinesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseSqlVulnerabilityAssessmentExecuteScansImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseSqlVulnerabilityAssessmentRuleBaselinesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseSqlVulnerabilityAssessmentScanResultsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseSqlVulnerabilityAssessmentScansImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseSqlVulnerabilityAssessmentsSettingsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseTablesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseUsagesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseVulnerabilityAssessmentRuleBaselinesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseVulnerabilityAssessmentScansImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabaseVulnerabilityAssessmentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.DatabasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.DeletedServersImpl;
import com.azure.resourcemanager.sql.generated.implementation.DistributedAvailabilityGroupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ElasticPoolActivitiesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ElasticPoolDatabaseActivitiesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ElasticPoolOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ElasticPoolsImpl;
import com.azure.resourcemanager.sql.generated.implementation.EncryptionProtectorsImpl;
import com.azure.resourcemanager.sql.generated.implementation.EndpointCertificatesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ExtendedDatabaseBlobAuditingPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ExtendedServerBlobAuditingPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.FailoverGroupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.FirewallRulesImpl;
import com.azure.resourcemanager.sql.generated.implementation.GeoBackupPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.IPv6FirewallRulesImpl;
import com.azure.resourcemanager.sql.generated.implementation.InstanceFailoverGroupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.InstancePoolsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobAgentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobCredentialsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobExecutionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobPrivateEndpointsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobStepExecutionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobStepsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobTargetExecutionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobTargetGroupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobVersionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.JobsImpl;
import com.azure.resourcemanager.sql.generated.implementation.LedgerDigestUploadsOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.LongTermRetentionBackupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.LongTermRetentionManagedInstanceBackupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.LongTermRetentionPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.MaintenanceWindowOptionsOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.MaintenanceWindowsOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedBackupShortTermRetentionPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseAdvancedThreatProtectionSettingsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseColumnsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseMoveOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseQueriesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseRecommendedSensitivityLabelsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseRestoreDetailsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseSchemasImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseSecurityAlertPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseSecurityEventsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseSensitivityLabelsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseTablesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseTransparentDataEncryptionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseVulnerabilityAssessmentRuleBaselinesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseVulnerabilityAssessmentScansImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabaseVulnerabilityAssessmentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedDatabasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceAdministratorsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceAdvancedThreatProtectionSettingsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceAzureADOnlyAuthenticationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceDtcsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceEncryptionProtectorsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceKeysImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceLongTermRetentionPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstancePrivateEndpointConnectionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstancePrivateLinkResourcesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceTdeCertificatesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstanceVulnerabilityAssessmentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedInstancesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedLedgerDigestUploadsOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedServerDnsAliasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ManagedServerSecurityAlertPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.OperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.OutboundFirewallRulesImpl;
import com.azure.resourcemanager.sql.generated.implementation.PrivateEndpointConnectionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.PrivateLinkResourcesImpl;
import com.azure.resourcemanager.sql.generated.implementation.RecommendedSensitivityLabelsImpl;
import com.azure.resourcemanager.sql.generated.implementation.RecoverableDatabasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.RecoverableManagedDatabasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ReplicationLinksImpl;
import com.azure.resourcemanager.sql.generated.implementation.RestorableDroppedDatabasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.RestorableDroppedManagedDatabasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.RestorePointsImpl;
import com.azure.resourcemanager.sql.generated.implementation.SensitivityLabelsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerAdvancedThreatProtectionSettingsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerAdvisorsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerAutomaticTuningsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerAzureADAdministratorsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerAzureADOnlyAuthenticationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerBlobAuditingPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerCommunicationLinksImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerConfigurationOptionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerConnectionPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerDevOpsAuditSettingsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerDnsAliasesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerKeysImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerSecurityAlertPoliciesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerTrustCertificatesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerTrustGroupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerUsagesImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServerVulnerabilityAssessmentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServersImpl;
import com.azure.resourcemanager.sql.generated.implementation.ServiceObjectivesImpl;
import com.azure.resourcemanager.sql.generated.implementation.SqlAgentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.SqlManagementClientBuilder;
import com.azure.resourcemanager.sql.generated.implementation.SqlVulnerabilityAssessmentBaselinesImpl;
import com.azure.resourcemanager.sql.generated.implementation.SqlVulnerabilityAssessmentBaselinesOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.SqlVulnerabilityAssessmentExecuteScansImpl;
import com.azure.resourcemanager.sql.generated.implementation.SqlVulnerabilityAssessmentRuleBaselinesImpl;
import com.azure.resourcemanager.sql.generated.implementation.SqlVulnerabilityAssessmentRuleBaselinesOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.SqlVulnerabilityAssessmentScanResultOperationsImpl;
import com.azure.resourcemanager.sql.generated.implementation.SqlVulnerabilityAssessmentScansImpl;
import com.azure.resourcemanager.sql.generated.implementation.SqlVulnerabilityAssessmentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.SqlVulnerabilityAssessmentsSettingsImpl;
import com.azure.resourcemanager.sql.generated.implementation.StartStopManagedInstanceSchedulesImpl;
import com.azure.resourcemanager.sql.generated.implementation.SubscriptionUsagesImpl;
import com.azure.resourcemanager.sql.generated.implementation.SynapseLinkWorkspacesImpl;
import com.azure.resourcemanager.sql.generated.implementation.SyncAgentsImpl;
import com.azure.resourcemanager.sql.generated.implementation.SyncGroupsImpl;
import com.azure.resourcemanager.sql.generated.implementation.SyncMembersImpl;
import com.azure.resourcemanager.sql.generated.implementation.TdeCertificatesImpl;
import com.azure.resourcemanager.sql.generated.implementation.TimeZonesImpl;
import com.azure.resourcemanager.sql.generated.implementation.TransparentDataEncryptionsImpl;
import com.azure.resourcemanager.sql.generated.implementation.UsagesImpl;
import com.azure.resourcemanager.sql.generated.implementation.VirtualClustersImpl;
import com.azure.resourcemanager.sql.generated.implementation.VirtualNetworkRulesImpl;
import com.azure.resourcemanager.sql.generated.implementation.WorkloadClassifiersImpl;
import com.azure.resourcemanager.sql.generated.implementation.WorkloadGroupsImpl;
import com.azure.resourcemanager.sql.generated.models.BackupShortTermRetentionPolicies;
import com.azure.resourcemanager.sql.generated.models.Capabilities;
import com.azure.resourcemanager.sql.generated.models.DataMaskingPolicies;
import com.azure.resourcemanager.sql.generated.models.DataMaskingRules;
import com.azure.resourcemanager.sql.generated.models.DataWarehouseUserActivitiesOperations;
import com.azure.resourcemanager.sql.generated.models.DatabaseAdvancedThreatProtectionSettings;
import com.azure.resourcemanager.sql.generated.models.DatabaseAdvisors;
import com.azure.resourcemanager.sql.generated.models.DatabaseAutomaticTunings;
import com.azure.resourcemanager.sql.generated.models.DatabaseBlobAuditingPolicies;
import com.azure.resourcemanager.sql.generated.models.DatabaseColumns;
import com.azure.resourcemanager.sql.generated.models.DatabaseEncryptionProtectors;
import com.azure.resourcemanager.sql.generated.models.DatabaseExtensionsOperations;
import com.azure.resourcemanager.sql.generated.models.DatabaseOperations;
import com.azure.resourcemanager.sql.generated.models.DatabaseRecommendedActions;
import com.azure.resourcemanager.sql.generated.models.DatabaseSchemas;
import com.azure.resourcemanager.sql.generated.models.DatabaseSecurityAlertPolicies;
import com.azure.resourcemanager.sql.generated.models.DatabaseSqlVulnerabilityAssessmentBaselines;
import com.azure.resourcemanager.sql.generated.models.DatabaseSqlVulnerabilityAssessmentExecuteScans;
import com.azure.resourcemanager.sql.generated.models.DatabaseSqlVulnerabilityAssessmentRuleBaselines;
import com.azure.resourcemanager.sql.generated.models.DatabaseSqlVulnerabilityAssessmentScanResults;
import com.azure.resourcemanager.sql.generated.models.DatabaseSqlVulnerabilityAssessmentScans;
import com.azure.resourcemanager.sql.generated.models.DatabaseSqlVulnerabilityAssessmentsSettings;
import com.azure.resourcemanager.sql.generated.models.DatabaseTables;
import com.azure.resourcemanager.sql.generated.models.DatabaseUsages;
import com.azure.resourcemanager.sql.generated.models.DatabaseVulnerabilityAssessmentRuleBaselines;
import com.azure.resourcemanager.sql.generated.models.DatabaseVulnerabilityAssessmentScans;
import com.azure.resourcemanager.sql.generated.models.DatabaseVulnerabilityAssessments;
import com.azure.resourcemanager.sql.generated.models.Databases;
import com.azure.resourcemanager.sql.generated.models.DeletedServers;
import com.azure.resourcemanager.sql.generated.models.DistributedAvailabilityGroups;
import com.azure.resourcemanager.sql.generated.models.ElasticPoolActivities;
import com.azure.resourcemanager.sql.generated.models.ElasticPoolDatabaseActivities;
import com.azure.resourcemanager.sql.generated.models.ElasticPoolOperations;
import com.azure.resourcemanager.sql.generated.models.ElasticPools;
import com.azure.resourcemanager.sql.generated.models.EncryptionProtectors;
import com.azure.resourcemanager.sql.generated.models.EndpointCertificates;
import com.azure.resourcemanager.sql.generated.models.ExtendedDatabaseBlobAuditingPolicies;
import com.azure.resourcemanager.sql.generated.models.ExtendedServerBlobAuditingPolicies;
import com.azure.resourcemanager.sql.generated.models.FailoverGroups;
import com.azure.resourcemanager.sql.generated.models.FirewallRules;
import com.azure.resourcemanager.sql.generated.models.GeoBackupPolicies;
import com.azure.resourcemanager.sql.generated.models.IPv6FirewallRules;
import com.azure.resourcemanager.sql.generated.models.InstanceFailoverGroups;
import com.azure.resourcemanager.sql.generated.models.InstancePools;
import com.azure.resourcemanager.sql.generated.models.JobAgents;
import com.azure.resourcemanager.sql.generated.models.JobCredentials;
import com.azure.resourcemanager.sql.generated.models.JobExecutions;
import com.azure.resourcemanager.sql.generated.models.JobPrivateEndpoints;
import com.azure.resourcemanager.sql.generated.models.JobStepExecutions;
import com.azure.resourcemanager.sql.generated.models.JobSteps;
import com.azure.resourcemanager.sql.generated.models.JobTargetExecutions;
import com.azure.resourcemanager.sql.generated.models.JobTargetGroups;
import com.azure.resourcemanager.sql.generated.models.JobVersions;
import com.azure.resourcemanager.sql.generated.models.Jobs;
import com.azure.resourcemanager.sql.generated.models.LedgerDigestUploadsOperations;
import com.azure.resourcemanager.sql.generated.models.LongTermRetentionBackups;
import com.azure.resourcemanager.sql.generated.models.LongTermRetentionManagedInstanceBackups;
import com.azure.resourcemanager.sql.generated.models.LongTermRetentionPolicies;
import com.azure.resourcemanager.sql.generated.models.MaintenanceWindowOptionsOperations;
import com.azure.resourcemanager.sql.generated.models.MaintenanceWindowsOperations;
import com.azure.resourcemanager.sql.generated.models.ManagedBackupShortTermRetentionPolicies;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseAdvancedThreatProtectionSettings;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseColumns;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseMoveOperations;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseQueries;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseRecommendedSensitivityLabels;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseRestoreDetails;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseSchemas;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseSecurityAlertPolicies;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseSecurityEvents;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseSensitivityLabels;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseTables;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseTransparentDataEncryptions;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseVulnerabilityAssessmentRuleBaselines;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseVulnerabilityAssessmentScans;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseVulnerabilityAssessments;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabases;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceAdministrators;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceAdvancedThreatProtectionSettings;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceAzureADOnlyAuthentications;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceDtcs;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceEncryptionProtectors;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceKeys;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceLongTermRetentionPolicies;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceOperations;
import com.azure.resourcemanager.sql.generated.models.ManagedInstancePrivateEndpointConnections;
import com.azure.resourcemanager.sql.generated.models.ManagedInstancePrivateLinkResources;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceTdeCertificates;
import com.azure.resourcemanager.sql.generated.models.ManagedInstanceVulnerabilityAssessments;
import com.azure.resourcemanager.sql.generated.models.ManagedInstances;
import com.azure.resourcemanager.sql.generated.models.ManagedLedgerDigestUploadsOperations;
import com.azure.resourcemanager.sql.generated.models.ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies;
import com.azure.resourcemanager.sql.generated.models.ManagedServerDnsAliases;
import com.azure.resourcemanager.sql.generated.models.ManagedServerSecurityAlertPolicies;
import com.azure.resourcemanager.sql.generated.models.Operations;
import com.azure.resourcemanager.sql.generated.models.OutboundFirewallRules;
import com.azure.resourcemanager.sql.generated.models.PrivateEndpointConnections;
import com.azure.resourcemanager.sql.generated.models.PrivateLinkResources;
import com.azure.resourcemanager.sql.generated.models.RecommendedSensitivityLabels;
import com.azure.resourcemanager.sql.generated.models.RecoverableDatabases;
import com.azure.resourcemanager.sql.generated.models.RecoverableManagedDatabases;
import com.azure.resourcemanager.sql.generated.models.ReplicationLinks;
import com.azure.resourcemanager.sql.generated.models.RestorableDroppedDatabases;
import com.azure.resourcemanager.sql.generated.models.RestorableDroppedManagedDatabases;
import com.azure.resourcemanager.sql.generated.models.RestorePoints;
import com.azure.resourcemanager.sql.generated.models.SensitivityLabels;
import com.azure.resourcemanager.sql.generated.models.ServerAdvancedThreatProtectionSettings;
import com.azure.resourcemanager.sql.generated.models.ServerAdvisors;
import com.azure.resourcemanager.sql.generated.models.ServerAutomaticTunings;
import com.azure.resourcemanager.sql.generated.models.ServerAzureADAdministrators;
import com.azure.resourcemanager.sql.generated.models.ServerAzureADOnlyAuthentications;
import com.azure.resourcemanager.sql.generated.models.ServerBlobAuditingPolicies;
import com.azure.resourcemanager.sql.generated.models.ServerCommunicationLinks;
import com.azure.resourcemanager.sql.generated.models.ServerConfigurationOptions;
import com.azure.resourcemanager.sql.generated.models.ServerConnectionPolicies;
import com.azure.resourcemanager.sql.generated.models.ServerDevOpsAuditSettings;
import com.azure.resourcemanager.sql.generated.models.ServerDnsAliases;
import com.azure.resourcemanager.sql.generated.models.ServerKeys;
import com.azure.resourcemanager.sql.generated.models.ServerOperations;
import com.azure.resourcemanager.sql.generated.models.ServerSecurityAlertPolicies;
import com.azure.resourcemanager.sql.generated.models.ServerTrustCertificates;
import com.azure.resourcemanager.sql.generated.models.ServerTrustGroups;
import com.azure.resourcemanager.sql.generated.models.ServerUsages;
import com.azure.resourcemanager.sql.generated.models.ServerVulnerabilityAssessments;
import com.azure.resourcemanager.sql.generated.models.Servers;
import com.azure.resourcemanager.sql.generated.models.ServiceObjectives;
import com.azure.resourcemanager.sql.generated.models.SqlAgents;
import com.azure.resourcemanager.sql.generated.models.SqlVulnerabilityAssessmentBaselines;
import com.azure.resourcemanager.sql.generated.models.SqlVulnerabilityAssessmentBaselinesOperations;
import com.azure.resourcemanager.sql.generated.models.SqlVulnerabilityAssessmentExecuteScans;
import com.azure.resourcemanager.sql.generated.models.SqlVulnerabilityAssessmentRuleBaselines;
import com.azure.resourcemanager.sql.generated.models.SqlVulnerabilityAssessmentRuleBaselinesOperations;
import com.azure.resourcemanager.sql.generated.models.SqlVulnerabilityAssessmentScanResultOperations;
import com.azure.resourcemanager.sql.generated.models.SqlVulnerabilityAssessmentScans;
import com.azure.resourcemanager.sql.generated.models.SqlVulnerabilityAssessments;
import com.azure.resourcemanager.sql.generated.models.SqlVulnerabilityAssessmentsSettings;
import com.azure.resourcemanager.sql.generated.models.StartStopManagedInstanceSchedules;
import com.azure.resourcemanager.sql.generated.models.SubscriptionUsages;
import com.azure.resourcemanager.sql.generated.models.SynapseLinkWorkspaces;
import com.azure.resourcemanager.sql.generated.models.SyncAgents;
import com.azure.resourcemanager.sql.generated.models.SyncGroups;
import com.azure.resourcemanager.sql.generated.models.SyncMembers;
import com.azure.resourcemanager.sql.generated.models.TdeCertificates;
import com.azure.resourcemanager.sql.generated.models.TimeZones;
import com.azure.resourcemanager.sql.generated.models.TransparentDataEncryptions;
import com.azure.resourcemanager.sql.generated.models.Usages;
import com.azure.resourcemanager.sql.generated.models.VirtualClusters;
import com.azure.resourcemanager.sql.generated.models.VirtualNetworkRules;
import com.azure.resourcemanager.sql.generated.models.WorkloadClassifiers;
import com.azure.resourcemanager.sql.generated.models.WorkloadGroups;
import java.time.Duration;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

/**
 * Entry point to SqlManager.
 * The Azure SQL Database management API provides a RESTful set of web services that interact with Azure SQL Database
 * services to manage your databases. The API enables you to create, retrieve, update, and delete databases.
 */
public final class SqlManager {
    private DataMaskingPolicies dataMaskingPolicies;

    private DataMaskingRules dataMaskingRules;

    private GeoBackupPolicies geoBackupPolicies;

    private Databases databases;

    private ElasticPools elasticPools;

    private ServerCommunicationLinks serverCommunicationLinks;

    private ServiceObjectives serviceObjectives;

    private ElasticPoolActivities elasticPoolActivities;

    private ElasticPoolDatabaseActivities elasticPoolDatabaseActivities;

    private ServerUsages serverUsages;

    private DatabaseAdvisors databaseAdvisors;

    private DatabaseAutomaticTunings databaseAutomaticTunings;

    private DatabaseColumns databaseColumns;

    private DatabaseRecommendedActions databaseRecommendedActions;

    private DatabaseSchemas databaseSchemas;

    private DatabaseSecurityAlertPolicies databaseSecurityAlertPolicies;

    private DatabaseTables databaseTables;

    private DatabaseVulnerabilityAssessmentRuleBaselines databaseVulnerabilityAssessmentRuleBaselines;

    private DatabaseVulnerabilityAssessments databaseVulnerabilityAssessments;

    private DatabaseVulnerabilityAssessmentScans databaseVulnerabilityAssessmentScans;

    private DataWarehouseUserActivitiesOperations dataWarehouseUserActivitiesOperations;

    private DeletedServers deletedServers;

    private ElasticPoolOperations elasticPoolOperations;

    private EncryptionProtectors encryptionProtectors;

    private FirewallRules firewallRules;

    private JobAgents jobAgents;

    private JobCredentials jobCredentials;

    private JobExecutions jobExecutions;

    private JobPrivateEndpoints jobPrivateEndpoints;

    private Jobs jobs;

    private JobStepExecutions jobStepExecutions;

    private JobSteps jobSteps;

    private JobTargetExecutions jobTargetExecutions;

    private JobTargetGroups jobTargetGroups;

    private JobVersions jobVersions;

    private Capabilities capabilities;

    private MaintenanceWindowOptionsOperations maintenanceWindowOptionsOperations;

    private MaintenanceWindowsOperations maintenanceWindowsOperations;

    private ManagedBackupShortTermRetentionPolicies managedBackupShortTermRetentionPolicies;

    private ManagedDatabaseColumns managedDatabaseColumns;

    private ManagedDatabaseQueries managedDatabaseQueries;

    private ManagedDatabaseSchemas managedDatabaseSchemas;

    private ManagedDatabaseSecurityAlertPolicies managedDatabaseSecurityAlertPolicies;

    private ManagedDatabaseSecurityEvents managedDatabaseSecurityEvents;

    private ManagedDatabaseTables managedDatabaseTables;

    private ManagedDatabaseTransparentDataEncryptions managedDatabaseTransparentDataEncryptions;

    private ManagedDatabaseVulnerabilityAssessmentRuleBaselines managedDatabaseVulnerabilityAssessmentRuleBaselines;

    private ManagedDatabaseVulnerabilityAssessments managedDatabaseVulnerabilityAssessments;

    private ManagedDatabaseVulnerabilityAssessmentScans managedDatabaseVulnerabilityAssessmentScans;

    private ManagedInstanceAdministrators managedInstanceAdministrators;

    private ManagedInstanceAzureADOnlyAuthentications managedInstanceAzureADOnlyAuthentications;

    private ManagedInstanceEncryptionProtectors managedInstanceEncryptionProtectors;

    private ManagedInstanceKeys managedInstanceKeys;

    private ManagedInstanceLongTermRetentionPolicies managedInstanceLongTermRetentionPolicies;

    private ManagedInstanceOperations managedInstanceOperations;

    private ManagedInstancePrivateEndpointConnections managedInstancePrivateEndpointConnections;

    private ManagedInstancePrivateLinkResources managedInstancePrivateLinkResources;

    private ManagedInstanceTdeCertificates managedInstanceTdeCertificates;

    private ManagedInstanceVulnerabilityAssessments managedInstanceVulnerabilityAssessments;

    private ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies;

    private ManagedServerSecurityAlertPolicies managedServerSecurityAlertPolicies;

    private Operations operations;

    private PrivateEndpointConnections privateEndpointConnections;

    private PrivateLinkResources privateLinkResources;

    private RecoverableManagedDatabases recoverableManagedDatabases;

    private RestorePoints restorePoints;

    private ServerAdvisors serverAdvisors;

    private ServerAutomaticTunings serverAutomaticTunings;

    private ServerAzureADAdministrators serverAzureADAdministrators;

    private ServerAzureADOnlyAuthentications serverAzureADOnlyAuthentications;

    private ServerDevOpsAuditSettings serverDevOpsAuditSettings;

    private ServerDnsAliases serverDnsAliases;

    private ServerKeys serverKeys;

    private ServerOperations serverOperations;

    private ServerSecurityAlertPolicies serverSecurityAlertPolicies;

    private ServerTrustGroups serverTrustGroups;

    private ServerVulnerabilityAssessments serverVulnerabilityAssessments;

    private SqlAgents sqlAgents;

    private SubscriptionUsages subscriptionUsages;

    private SyncAgents syncAgents;

    private SyncGroups syncGroups;

    private SyncMembers syncMembers;

    private TdeCertificates tdeCertificates;

    private TimeZones timeZones;

    private VirtualNetworkRules virtualNetworkRules;

    private WorkloadClassifiers workloadClassifiers;

    private WorkloadGroups workloadGroups;

    private BackupShortTermRetentionPolicies backupShortTermRetentionPolicies;

    private DatabaseExtensionsOperations databaseExtensionsOperations;

    private DatabaseOperations databaseOperations;

    private DatabaseUsages databaseUsages;

    private LedgerDigestUploadsOperations ledgerDigestUploadsOperations;

    private OutboundFirewallRules outboundFirewallRules;

    private Usages usages;

    private LongTermRetentionManagedInstanceBackups longTermRetentionManagedInstanceBackups;

    private RestorableDroppedManagedDatabases restorableDroppedManagedDatabases;

    private ServerConnectionPolicies serverConnectionPolicies;

    private DistributedAvailabilityGroups distributedAvailabilityGroups;

    private ServerTrustCertificates serverTrustCertificates;

    private EndpointCertificates endpointCertificates;

    private ManagedDatabaseSensitivityLabels managedDatabaseSensitivityLabels;

    private ManagedDatabaseRecommendedSensitivityLabels managedDatabaseRecommendedSensitivityLabels;

    private SensitivityLabels sensitivityLabels;

    private RecommendedSensitivityLabels recommendedSensitivityLabels;

    private ServerBlobAuditingPolicies serverBlobAuditingPolicies;

    private DatabaseBlobAuditingPolicies databaseBlobAuditingPolicies;

    private ExtendedDatabaseBlobAuditingPolicies extendedDatabaseBlobAuditingPolicies;

    private ExtendedServerBlobAuditingPolicies extendedServerBlobAuditingPolicies;

    private DatabaseAdvancedThreatProtectionSettings databaseAdvancedThreatProtectionSettings;

    private ServerAdvancedThreatProtectionSettings serverAdvancedThreatProtectionSettings;

    private ManagedServerDnsAliases managedServerDnsAliases;

    private ManagedDatabaseAdvancedThreatProtectionSettings managedDatabaseAdvancedThreatProtectionSettings;

    private ManagedInstanceAdvancedThreatProtectionSettings managedInstanceAdvancedThreatProtectionSettings;

    private ReplicationLinks replicationLinks;

    private ManagedDatabaseMoveOperations managedDatabaseMoveOperations;

    private ManagedInstanceDtcs managedInstanceDtcs;

    private SynapseLinkWorkspaces synapseLinkWorkspaces;

    private VirtualClusters virtualClusters;

    private InstanceFailoverGroups instanceFailoverGroups;

    private ManagedDatabaseRestoreDetails managedDatabaseRestoreDetails;

    private DatabaseEncryptionProtectors databaseEncryptionProtectors;

    private ManagedDatabases managedDatabases;

    private ManagedInstances managedInstances;

    private ManagedLedgerDigestUploadsOperations managedLedgerDigestUploadsOperations;

    private RecoverableDatabases recoverableDatabases;

    private RestorableDroppedDatabases restorableDroppedDatabases;

    private ServerConfigurationOptions serverConfigurationOptions;

    private StartStopManagedInstanceSchedules startStopManagedInstanceSchedules;

    private TransparentDataEncryptions transparentDataEncryptions;

    private IPv6FirewallRules iPv6FirewallRules;

    private SqlVulnerabilityAssessmentBaselines sqlVulnerabilityAssessmentBaselines;

    private SqlVulnerabilityAssessmentBaselinesOperations sqlVulnerabilityAssessmentBaselinesOperations;

    private SqlVulnerabilityAssessmentExecuteScans sqlVulnerabilityAssessmentExecuteScans;

    private SqlVulnerabilityAssessmentRuleBaselines sqlVulnerabilityAssessmentRuleBaselines;

    private SqlVulnerabilityAssessmentRuleBaselinesOperations sqlVulnerabilityAssessmentRuleBaselinesOperations;

    private SqlVulnerabilityAssessmentScanResultOperations sqlVulnerabilityAssessmentScanResultOperations;

    private SqlVulnerabilityAssessmentScans sqlVulnerabilityAssessmentScans;

    private SqlVulnerabilityAssessmentsSettings sqlVulnerabilityAssessmentsSettings;

    private SqlVulnerabilityAssessments sqlVulnerabilityAssessments;

    private DatabaseSqlVulnerabilityAssessmentBaselines databaseSqlVulnerabilityAssessmentBaselines;

    private DatabaseSqlVulnerabilityAssessmentExecuteScans databaseSqlVulnerabilityAssessmentExecuteScans;

    private DatabaseSqlVulnerabilityAssessmentRuleBaselines databaseSqlVulnerabilityAssessmentRuleBaselines;

    private DatabaseSqlVulnerabilityAssessmentScanResults databaseSqlVulnerabilityAssessmentScanResults;

    private DatabaseSqlVulnerabilityAssessmentScans databaseSqlVulnerabilityAssessmentScans;

    private DatabaseSqlVulnerabilityAssessmentsSettings databaseSqlVulnerabilityAssessmentsSettings;

    private Servers servers;

    private FailoverGroups failoverGroups;

    private InstancePools instancePools;

    private LongTermRetentionBackups longTermRetentionBackups;

    private LongTermRetentionPolicies longTermRetentionPolicies;

    private final SqlManagementClient clientObject;

    private SqlManager(HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        this.clientObject = new SqlManagementClientBuilder().pipeline(httpPipeline)
            .endpoint(profile.getEnvironment().getResourceManagerEndpoint()).subscriptionId(profile.getSubscriptionId())
            .defaultPollInterval(defaultPollInterval).buildClient();
    }

    /**
     * Creates an instance of Sql service API entry point.
     * 
     * @param credential the credential to use.
     * @param profile the Azure profile for client.
     * @return the Sql service API instance.
     */
    public static SqlManager authenticate(TokenCredential credential, AzureProfile profile) {
        Objects.requireNonNull(credential, "'credential' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return configure().authenticate(credential, profile);
    }

    /**
     * Creates an instance of Sql service API entry point.
     * 
     * @param httpPipeline the {@link HttpPipeline} configured with Azure authentication credential.
     * @param profile the Azure profile for client.
     * @return the Sql service API instance.
     */
    public static SqlManager authenticate(HttpPipeline httpPipeline, AzureProfile profile) {
        Objects.requireNonNull(httpPipeline, "'httpPipeline' cannot be null.");
        Objects.requireNonNull(profile, "'profile' cannot be null.");
        return new SqlManager(httpPipeline, profile, null);
    }

    /**
     * Gets a Configurable instance that can be used to create SqlManager with optional configuration.
     * 
     * @return the Configurable instance allowing configurations.
     */
    public static Configurable configure() {
        return new SqlManager.Configurable();
    }

    /**
     * The Configurable allowing configurations to be set.
     */
    public static final class Configurable {
        private static final ClientLogger LOGGER = new ClientLogger(Configurable.class);

        private HttpClient httpClient;
        private HttpLogOptions httpLogOptions;
        private final List<HttpPipelinePolicy> policies = new ArrayList<>();
        private final List<String> scopes = new ArrayList<>();
        private RetryPolicy retryPolicy;
        private RetryOptions retryOptions;
        private Duration defaultPollInterval;

        private Configurable() {
        }

        /**
         * Sets the http client.
         *
         * @param httpClient the HTTP client.
         * @return the configurable object itself.
         */
        public Configurable withHttpClient(HttpClient httpClient) {
            this.httpClient = Objects.requireNonNull(httpClient, "'httpClient' cannot be null.");
            return this;
        }

        /**
         * Sets the logging options to the HTTP pipeline.
         *
         * @param httpLogOptions the HTTP log options.
         * @return the configurable object itself.
         */
        public Configurable withLogOptions(HttpLogOptions httpLogOptions) {
            this.httpLogOptions = Objects.requireNonNull(httpLogOptions, "'httpLogOptions' cannot be null.");
            return this;
        }

        /**
         * Adds the pipeline policy to the HTTP pipeline.
         *
         * @param policy the HTTP pipeline policy.
         * @return the configurable object itself.
         */
        public Configurable withPolicy(HttpPipelinePolicy policy) {
            this.policies.add(Objects.requireNonNull(policy, "'policy' cannot be null."));
            return this;
        }

        /**
         * Adds the scope to permission sets.
         *
         * @param scope the scope.
         * @return the configurable object itself.
         */
        public Configurable withScope(String scope) {
            this.scopes.add(Objects.requireNonNull(scope, "'scope' cannot be null."));
            return this;
        }

        /**
         * Sets the retry policy to the HTTP pipeline.
         *
         * @param retryPolicy the HTTP pipeline retry policy.
         * @return the configurable object itself.
         */
        public Configurable withRetryPolicy(RetryPolicy retryPolicy) {
            this.retryPolicy = Objects.requireNonNull(retryPolicy, "'retryPolicy' cannot be null.");
            return this;
        }

        /**
         * Sets the retry options for the HTTP pipeline retry policy.
         * <p>
         * This setting has no effect, if retry policy is set via {@link #withRetryPolicy(RetryPolicy)}.
         *
         * @param retryOptions the retry options for the HTTP pipeline retry policy.
         * @return the configurable object itself.
         */
        public Configurable withRetryOptions(RetryOptions retryOptions) {
            this.retryOptions = Objects.requireNonNull(retryOptions, "'retryOptions' cannot be null.");
            return this;
        }

        /**
         * Sets the default poll interval, used when service does not provide "Retry-After" header.
         *
         * @param defaultPollInterval the default poll interval.
         * @return the configurable object itself.
         */
        public Configurable withDefaultPollInterval(Duration defaultPollInterval) {
            this.defaultPollInterval
                = Objects.requireNonNull(defaultPollInterval, "'defaultPollInterval' cannot be null.");
            if (this.defaultPollInterval.isNegative()) {
                throw LOGGER
                    .logExceptionAsError(new IllegalArgumentException("'defaultPollInterval' cannot be negative"));
            }
            return this;
        }

        /**
         * Creates an instance of Sql service API entry point.
         *
         * @param credential the credential to use.
         * @param profile the Azure profile for client.
         * @return the Sql service API instance.
         */
        public SqlManager authenticate(TokenCredential credential, AzureProfile profile) {
            Objects.requireNonNull(credential, "'credential' cannot be null.");
            Objects.requireNonNull(profile, "'profile' cannot be null.");

            StringBuilder userAgentBuilder = new StringBuilder();
            userAgentBuilder.append("azsdk-java").append("-").append("com.azure.resourcemanager.sql.generated")
                .append("/").append("1.0.0-beta.1");
            if (!Configuration.getGlobalConfiguration().get("AZURE_TELEMETRY_DISABLED", false)) {
                userAgentBuilder.append(" (").append(Configuration.getGlobalConfiguration().get("java.version"))
                    .append("; ").append(Configuration.getGlobalConfiguration().get("os.name")).append("; ")
                    .append(Configuration.getGlobalConfiguration().get("os.version")).append("; auto-generated)");
            } else {
                userAgentBuilder.append(" (auto-generated)");
            }

            if (scopes.isEmpty()) {
                scopes.add(profile.getEnvironment().getManagementEndpoint() + "/.default");
            }
            if (retryPolicy == null) {
                if (retryOptions != null) {
                    retryPolicy = new RetryPolicy(retryOptions);
                } else {
                    retryPolicy = new RetryPolicy("Retry-After", ChronoUnit.SECONDS);
                }
            }
            List<HttpPipelinePolicy> policies = new ArrayList<>();
            policies.add(new UserAgentPolicy(userAgentBuilder.toString()));
            policies.add(new AddHeadersFromContextPolicy());
            policies.add(new RequestIdPolicy());
            policies.addAll(this.policies.stream().filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_CALL)
                .collect(Collectors.toList()));
            HttpPolicyProviders.addBeforeRetryPolicies(policies);
            policies.add(retryPolicy);
            policies.add(new AddDatePolicy());
            policies.add(new ArmChallengeAuthenticationPolicy(credential, scopes.toArray(new String[0])));
            policies.addAll(this.policies.stream()
                .filter(p -> p.getPipelinePosition() == HttpPipelinePosition.PER_RETRY).collect(Collectors.toList()));
            HttpPolicyProviders.addAfterRetryPolicies(policies);
            policies.add(new HttpLoggingPolicy(httpLogOptions));
            HttpPipeline httpPipeline = new HttpPipelineBuilder().httpClient(httpClient)
                .policies(policies.toArray(new HttpPipelinePolicy[0])).build();
            return new SqlManager(httpPipeline, profile, defaultPollInterval);
        }
    }

    /**
     * Gets the resource collection API of DataMaskingPolicies. It manages DataMaskingPolicy.
     * 
     * @return Resource collection API of DataMaskingPolicies.
     */
    public DataMaskingPolicies dataMaskingPolicies() {
        if (this.dataMaskingPolicies == null) {
            this.dataMaskingPolicies = new DataMaskingPoliciesImpl(clientObject.getDataMaskingPolicies(), this);
        }
        return dataMaskingPolicies;
    }

    /**
     * Gets the resource collection API of DataMaskingRules. It manages DataMaskingRule.
     * 
     * @return Resource collection API of DataMaskingRules.
     */
    public DataMaskingRules dataMaskingRules() {
        if (this.dataMaskingRules == null) {
            this.dataMaskingRules = new DataMaskingRulesImpl(clientObject.getDataMaskingRules(), this);
        }
        return dataMaskingRules;
    }

    /**
     * Gets the resource collection API of GeoBackupPolicies. It manages GeoBackupPolicy.
     * 
     * @return Resource collection API of GeoBackupPolicies.
     */
    public GeoBackupPolicies geoBackupPolicies() {
        if (this.geoBackupPolicies == null) {
            this.geoBackupPolicies = new GeoBackupPoliciesImpl(clientObject.getGeoBackupPolicies(), this);
        }
        return geoBackupPolicies;
    }

    /**
     * Gets the resource collection API of Databases. It manages Database.
     * 
     * @return Resource collection API of Databases.
     */
    public Databases databases() {
        if (this.databases == null) {
            this.databases = new DatabasesImpl(clientObject.getDatabases(), this);
        }
        return databases;
    }

    /**
     * Gets the resource collection API of ElasticPools. It manages ElasticPool.
     * 
     * @return Resource collection API of ElasticPools.
     */
    public ElasticPools elasticPools() {
        if (this.elasticPools == null) {
            this.elasticPools = new ElasticPoolsImpl(clientObject.getElasticPools(), this);
        }
        return elasticPools;
    }

    /**
     * Gets the resource collection API of ServerCommunicationLinks. It manages ServerCommunicationLink.
     * 
     * @return Resource collection API of ServerCommunicationLinks.
     */
    public ServerCommunicationLinks serverCommunicationLinks() {
        if (this.serverCommunicationLinks == null) {
            this.serverCommunicationLinks
                = new ServerCommunicationLinksImpl(clientObject.getServerCommunicationLinks(), this);
        }
        return serverCommunicationLinks;
    }

    /**
     * Gets the resource collection API of ServiceObjectives.
     * 
     * @return Resource collection API of ServiceObjectives.
     */
    public ServiceObjectives serviceObjectives() {
        if (this.serviceObjectives == null) {
            this.serviceObjectives = new ServiceObjectivesImpl(clientObject.getServiceObjectives(), this);
        }
        return serviceObjectives;
    }

    /**
     * Gets the resource collection API of ElasticPoolActivities.
     * 
     * @return Resource collection API of ElasticPoolActivities.
     */
    public ElasticPoolActivities elasticPoolActivities() {
        if (this.elasticPoolActivities == null) {
            this.elasticPoolActivities = new ElasticPoolActivitiesImpl(clientObject.getElasticPoolActivities(), this);
        }
        return elasticPoolActivities;
    }

    /**
     * Gets the resource collection API of ElasticPoolDatabaseActivities.
     * 
     * @return Resource collection API of ElasticPoolDatabaseActivities.
     */
    public ElasticPoolDatabaseActivities elasticPoolDatabaseActivities() {
        if (this.elasticPoolDatabaseActivities == null) {
            this.elasticPoolDatabaseActivities
                = new ElasticPoolDatabaseActivitiesImpl(clientObject.getElasticPoolDatabaseActivities(), this);
        }
        return elasticPoolDatabaseActivities;
    }

    /**
     * Gets the resource collection API of ServerUsages.
     * 
     * @return Resource collection API of ServerUsages.
     */
    public ServerUsages serverUsages() {
        if (this.serverUsages == null) {
            this.serverUsages = new ServerUsagesImpl(clientObject.getServerUsages(), this);
        }
        return serverUsages;
    }

    /**
     * Gets the resource collection API of DatabaseAdvisors.
     * 
     * @return Resource collection API of DatabaseAdvisors.
     */
    public DatabaseAdvisors databaseAdvisors() {
        if (this.databaseAdvisors == null) {
            this.databaseAdvisors = new DatabaseAdvisorsImpl(clientObject.getDatabaseAdvisors(), this);
        }
        return databaseAdvisors;
    }

    /**
     * Gets the resource collection API of DatabaseAutomaticTunings.
     * 
     * @return Resource collection API of DatabaseAutomaticTunings.
     */
    public DatabaseAutomaticTunings databaseAutomaticTunings() {
        if (this.databaseAutomaticTunings == null) {
            this.databaseAutomaticTunings
                = new DatabaseAutomaticTuningsImpl(clientObject.getDatabaseAutomaticTunings(), this);
        }
        return databaseAutomaticTunings;
    }

    /**
     * Gets the resource collection API of DatabaseColumns.
     * 
     * @return Resource collection API of DatabaseColumns.
     */
    public DatabaseColumns databaseColumns() {
        if (this.databaseColumns == null) {
            this.databaseColumns = new DatabaseColumnsImpl(clientObject.getDatabaseColumns(), this);
        }
        return databaseColumns;
    }

    /**
     * Gets the resource collection API of DatabaseRecommendedActions.
     * 
     * @return Resource collection API of DatabaseRecommendedActions.
     */
    public DatabaseRecommendedActions databaseRecommendedActions() {
        if (this.databaseRecommendedActions == null) {
            this.databaseRecommendedActions
                = new DatabaseRecommendedActionsImpl(clientObject.getDatabaseRecommendedActions(), this);
        }
        return databaseRecommendedActions;
    }

    /**
     * Gets the resource collection API of DatabaseSchemas.
     * 
     * @return Resource collection API of DatabaseSchemas.
     */
    public DatabaseSchemas databaseSchemas() {
        if (this.databaseSchemas == null) {
            this.databaseSchemas = new DatabaseSchemasImpl(clientObject.getDatabaseSchemas(), this);
        }
        return databaseSchemas;
    }

    /**
     * Gets the resource collection API of DatabaseSecurityAlertPolicies. It manages DatabaseSecurityAlertPolicy.
     * 
     * @return Resource collection API of DatabaseSecurityAlertPolicies.
     */
    public DatabaseSecurityAlertPolicies databaseSecurityAlertPolicies() {
        if (this.databaseSecurityAlertPolicies == null) {
            this.databaseSecurityAlertPolicies
                = new DatabaseSecurityAlertPoliciesImpl(clientObject.getDatabaseSecurityAlertPolicies(), this);
        }
        return databaseSecurityAlertPolicies;
    }

    /**
     * Gets the resource collection API of DatabaseTables.
     * 
     * @return Resource collection API of DatabaseTables.
     */
    public DatabaseTables databaseTables() {
        if (this.databaseTables == null) {
            this.databaseTables = new DatabaseTablesImpl(clientObject.getDatabaseTables(), this);
        }
        return databaseTables;
    }

    /**
     * Gets the resource collection API of DatabaseVulnerabilityAssessmentRuleBaselines. It manages
     * DatabaseVulnerabilityAssessmentRuleBaseline.
     * 
     * @return Resource collection API of DatabaseVulnerabilityAssessmentRuleBaselines.
     */
    public DatabaseVulnerabilityAssessmentRuleBaselines databaseVulnerabilityAssessmentRuleBaselines() {
        if (this.databaseVulnerabilityAssessmentRuleBaselines == null) {
            this.databaseVulnerabilityAssessmentRuleBaselines = new DatabaseVulnerabilityAssessmentRuleBaselinesImpl(
                clientObject.getDatabaseVulnerabilityAssessmentRuleBaselines(), this);
        }
        return databaseVulnerabilityAssessmentRuleBaselines;
    }

    /**
     * Gets the resource collection API of DatabaseVulnerabilityAssessments. It manages DatabaseVulnerabilityAssessment.
     * 
     * @return Resource collection API of DatabaseVulnerabilityAssessments.
     */
    public DatabaseVulnerabilityAssessments databaseVulnerabilityAssessments() {
        if (this.databaseVulnerabilityAssessments == null) {
            this.databaseVulnerabilityAssessments
                = new DatabaseVulnerabilityAssessmentsImpl(clientObject.getDatabaseVulnerabilityAssessments(), this);
        }
        return databaseVulnerabilityAssessments;
    }

    /**
     * Gets the resource collection API of DatabaseVulnerabilityAssessmentScans.
     * 
     * @return Resource collection API of DatabaseVulnerabilityAssessmentScans.
     */
    public DatabaseVulnerabilityAssessmentScans databaseVulnerabilityAssessmentScans() {
        if (this.databaseVulnerabilityAssessmentScans == null) {
            this.databaseVulnerabilityAssessmentScans = new DatabaseVulnerabilityAssessmentScansImpl(
                clientObject.getDatabaseVulnerabilityAssessmentScans(), this);
        }
        return databaseVulnerabilityAssessmentScans;
    }

    /**
     * Gets the resource collection API of DataWarehouseUserActivitiesOperations.
     * 
     * @return Resource collection API of DataWarehouseUserActivitiesOperations.
     */
    public DataWarehouseUserActivitiesOperations dataWarehouseUserActivitiesOperations() {
        if (this.dataWarehouseUserActivitiesOperations == null) {
            this.dataWarehouseUserActivitiesOperations = new DataWarehouseUserActivitiesOperationsImpl(
                clientObject.getDataWarehouseUserActivitiesOperations(), this);
        }
        return dataWarehouseUserActivitiesOperations;
    }

    /**
     * Gets the resource collection API of DeletedServers.
     * 
     * @return Resource collection API of DeletedServers.
     */
    public DeletedServers deletedServers() {
        if (this.deletedServers == null) {
            this.deletedServers = new DeletedServersImpl(clientObject.getDeletedServers(), this);
        }
        return deletedServers;
    }

    /**
     * Gets the resource collection API of ElasticPoolOperations.
     * 
     * @return Resource collection API of ElasticPoolOperations.
     */
    public ElasticPoolOperations elasticPoolOperations() {
        if (this.elasticPoolOperations == null) {
            this.elasticPoolOperations = new ElasticPoolOperationsImpl(clientObject.getElasticPoolOperations(), this);
        }
        return elasticPoolOperations;
    }

    /**
     * Gets the resource collection API of EncryptionProtectors. It manages EncryptionProtector.
     * 
     * @return Resource collection API of EncryptionProtectors.
     */
    public EncryptionProtectors encryptionProtectors() {
        if (this.encryptionProtectors == null) {
            this.encryptionProtectors = new EncryptionProtectorsImpl(clientObject.getEncryptionProtectors(), this);
        }
        return encryptionProtectors;
    }

    /**
     * Gets the resource collection API of FirewallRules. It manages FirewallRule.
     * 
     * @return Resource collection API of FirewallRules.
     */
    public FirewallRules firewallRules() {
        if (this.firewallRules == null) {
            this.firewallRules = new FirewallRulesImpl(clientObject.getFirewallRules(), this);
        }
        return firewallRules;
    }

    /**
     * Gets the resource collection API of JobAgents. It manages JobAgent.
     * 
     * @return Resource collection API of JobAgents.
     */
    public JobAgents jobAgents() {
        if (this.jobAgents == null) {
            this.jobAgents = new JobAgentsImpl(clientObject.getJobAgents(), this);
        }
        return jobAgents;
    }

    /**
     * Gets the resource collection API of JobCredentials. It manages JobCredential.
     * 
     * @return Resource collection API of JobCredentials.
     */
    public JobCredentials jobCredentials() {
        if (this.jobCredentials == null) {
            this.jobCredentials = new JobCredentialsImpl(clientObject.getJobCredentials(), this);
        }
        return jobCredentials;
    }

    /**
     * Gets the resource collection API of JobExecutions.
     * 
     * @return Resource collection API of JobExecutions.
     */
    public JobExecutions jobExecutions() {
        if (this.jobExecutions == null) {
            this.jobExecutions = new JobExecutionsImpl(clientObject.getJobExecutions(), this);
        }
        return jobExecutions;
    }

    /**
     * Gets the resource collection API of JobPrivateEndpoints. It manages JobPrivateEndpoint.
     * 
     * @return Resource collection API of JobPrivateEndpoints.
     */
    public JobPrivateEndpoints jobPrivateEndpoints() {
        if (this.jobPrivateEndpoints == null) {
            this.jobPrivateEndpoints = new JobPrivateEndpointsImpl(clientObject.getJobPrivateEndpoints(), this);
        }
        return jobPrivateEndpoints;
    }

    /**
     * Gets the resource collection API of Jobs. It manages Job.
     * 
     * @return Resource collection API of Jobs.
     */
    public Jobs jobs() {
        if (this.jobs == null) {
            this.jobs = new JobsImpl(clientObject.getJobs(), this);
        }
        return jobs;
    }

    /**
     * Gets the resource collection API of JobStepExecutions.
     * 
     * @return Resource collection API of JobStepExecutions.
     */
    public JobStepExecutions jobStepExecutions() {
        if (this.jobStepExecutions == null) {
            this.jobStepExecutions = new JobStepExecutionsImpl(clientObject.getJobStepExecutions(), this);
        }
        return jobStepExecutions;
    }

    /**
     * Gets the resource collection API of JobSteps. It manages JobStep.
     * 
     * @return Resource collection API of JobSteps.
     */
    public JobSteps jobSteps() {
        if (this.jobSteps == null) {
            this.jobSteps = new JobStepsImpl(clientObject.getJobSteps(), this);
        }
        return jobSteps;
    }

    /**
     * Gets the resource collection API of JobTargetExecutions.
     * 
     * @return Resource collection API of JobTargetExecutions.
     */
    public JobTargetExecutions jobTargetExecutions() {
        if (this.jobTargetExecutions == null) {
            this.jobTargetExecutions = new JobTargetExecutionsImpl(clientObject.getJobTargetExecutions(), this);
        }
        return jobTargetExecutions;
    }

    /**
     * Gets the resource collection API of JobTargetGroups. It manages JobTargetGroup.
     * 
     * @return Resource collection API of JobTargetGroups.
     */
    public JobTargetGroups jobTargetGroups() {
        if (this.jobTargetGroups == null) {
            this.jobTargetGroups = new JobTargetGroupsImpl(clientObject.getJobTargetGroups(), this);
        }
        return jobTargetGroups;
    }

    /**
     * Gets the resource collection API of JobVersions.
     * 
     * @return Resource collection API of JobVersions.
     */
    public JobVersions jobVersions() {
        if (this.jobVersions == null) {
            this.jobVersions = new JobVersionsImpl(clientObject.getJobVersions(), this);
        }
        return jobVersions;
    }

    /**
     * Gets the resource collection API of Capabilities.
     * 
     * @return Resource collection API of Capabilities.
     */
    public Capabilities capabilities() {
        if (this.capabilities == null) {
            this.capabilities = new CapabilitiesImpl(clientObject.getCapabilities(), this);
        }
        return capabilities;
    }

    /**
     * Gets the resource collection API of MaintenanceWindowOptionsOperations.
     * 
     * @return Resource collection API of MaintenanceWindowOptionsOperations.
     */
    public MaintenanceWindowOptionsOperations maintenanceWindowOptionsOperations() {
        if (this.maintenanceWindowOptionsOperations == null) {
            this.maintenanceWindowOptionsOperations = new MaintenanceWindowOptionsOperationsImpl(
                clientObject.getMaintenanceWindowOptionsOperations(), this);
        }
        return maintenanceWindowOptionsOperations;
    }

    /**
     * Gets the resource collection API of MaintenanceWindowsOperations.
     * 
     * @return Resource collection API of MaintenanceWindowsOperations.
     */
    public MaintenanceWindowsOperations maintenanceWindowsOperations() {
        if (this.maintenanceWindowsOperations == null) {
            this.maintenanceWindowsOperations
                = new MaintenanceWindowsOperationsImpl(clientObject.getMaintenanceWindowsOperations(), this);
        }
        return maintenanceWindowsOperations;
    }

    /**
     * Gets the resource collection API of ManagedBackupShortTermRetentionPolicies. It manages
     * ManagedBackupShortTermRetentionPolicy.
     * 
     * @return Resource collection API of ManagedBackupShortTermRetentionPolicies.
     */
    public ManagedBackupShortTermRetentionPolicies managedBackupShortTermRetentionPolicies() {
        if (this.managedBackupShortTermRetentionPolicies == null) {
            this.managedBackupShortTermRetentionPolicies = new ManagedBackupShortTermRetentionPoliciesImpl(
                clientObject.getManagedBackupShortTermRetentionPolicies(), this);
        }
        return managedBackupShortTermRetentionPolicies;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseColumns.
     * 
     * @return Resource collection API of ManagedDatabaseColumns.
     */
    public ManagedDatabaseColumns managedDatabaseColumns() {
        if (this.managedDatabaseColumns == null) {
            this.managedDatabaseColumns
                = new ManagedDatabaseColumnsImpl(clientObject.getManagedDatabaseColumns(), this);
        }
        return managedDatabaseColumns;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseQueries.
     * 
     * @return Resource collection API of ManagedDatabaseQueries.
     */
    public ManagedDatabaseQueries managedDatabaseQueries() {
        if (this.managedDatabaseQueries == null) {
            this.managedDatabaseQueries
                = new ManagedDatabaseQueriesImpl(clientObject.getManagedDatabaseQueries(), this);
        }
        return managedDatabaseQueries;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseSchemas.
     * 
     * @return Resource collection API of ManagedDatabaseSchemas.
     */
    public ManagedDatabaseSchemas managedDatabaseSchemas() {
        if (this.managedDatabaseSchemas == null) {
            this.managedDatabaseSchemas
                = new ManagedDatabaseSchemasImpl(clientObject.getManagedDatabaseSchemas(), this);
        }
        return managedDatabaseSchemas;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseSecurityAlertPolicies. It manages
     * ManagedDatabaseSecurityAlertPolicy.
     * 
     * @return Resource collection API of ManagedDatabaseSecurityAlertPolicies.
     */
    public ManagedDatabaseSecurityAlertPolicies managedDatabaseSecurityAlertPolicies() {
        if (this.managedDatabaseSecurityAlertPolicies == null) {
            this.managedDatabaseSecurityAlertPolicies = new ManagedDatabaseSecurityAlertPoliciesImpl(
                clientObject.getManagedDatabaseSecurityAlertPolicies(), this);
        }
        return managedDatabaseSecurityAlertPolicies;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseSecurityEvents.
     * 
     * @return Resource collection API of ManagedDatabaseSecurityEvents.
     */
    public ManagedDatabaseSecurityEvents managedDatabaseSecurityEvents() {
        if (this.managedDatabaseSecurityEvents == null) {
            this.managedDatabaseSecurityEvents
                = new ManagedDatabaseSecurityEventsImpl(clientObject.getManagedDatabaseSecurityEvents(), this);
        }
        return managedDatabaseSecurityEvents;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseTables.
     * 
     * @return Resource collection API of ManagedDatabaseTables.
     */
    public ManagedDatabaseTables managedDatabaseTables() {
        if (this.managedDatabaseTables == null) {
            this.managedDatabaseTables = new ManagedDatabaseTablesImpl(clientObject.getManagedDatabaseTables(), this);
        }
        return managedDatabaseTables;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseTransparentDataEncryptions. It manages
     * ManagedTransparentDataEncryption.
     * 
     * @return Resource collection API of ManagedDatabaseTransparentDataEncryptions.
     */
    public ManagedDatabaseTransparentDataEncryptions managedDatabaseTransparentDataEncryptions() {
        if (this.managedDatabaseTransparentDataEncryptions == null) {
            this.managedDatabaseTransparentDataEncryptions = new ManagedDatabaseTransparentDataEncryptionsImpl(
                clientObject.getManagedDatabaseTransparentDataEncryptions(), this);
        }
        return managedDatabaseTransparentDataEncryptions;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseVulnerabilityAssessmentRuleBaselines.
     * 
     * @return Resource collection API of ManagedDatabaseVulnerabilityAssessmentRuleBaselines.
     */
    public ManagedDatabaseVulnerabilityAssessmentRuleBaselines managedDatabaseVulnerabilityAssessmentRuleBaselines() {
        if (this.managedDatabaseVulnerabilityAssessmentRuleBaselines == null) {
            this.managedDatabaseVulnerabilityAssessmentRuleBaselines
                = new ManagedDatabaseVulnerabilityAssessmentRuleBaselinesImpl(
                    clientObject.getManagedDatabaseVulnerabilityAssessmentRuleBaselines(), this);
        }
        return managedDatabaseVulnerabilityAssessmentRuleBaselines;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseVulnerabilityAssessments.
     * 
     * @return Resource collection API of ManagedDatabaseVulnerabilityAssessments.
     */
    public ManagedDatabaseVulnerabilityAssessments managedDatabaseVulnerabilityAssessments() {
        if (this.managedDatabaseVulnerabilityAssessments == null) {
            this.managedDatabaseVulnerabilityAssessments = new ManagedDatabaseVulnerabilityAssessmentsImpl(
                clientObject.getManagedDatabaseVulnerabilityAssessments(), this);
        }
        return managedDatabaseVulnerabilityAssessments;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseVulnerabilityAssessmentScans.
     * 
     * @return Resource collection API of ManagedDatabaseVulnerabilityAssessmentScans.
     */
    public ManagedDatabaseVulnerabilityAssessmentScans managedDatabaseVulnerabilityAssessmentScans() {
        if (this.managedDatabaseVulnerabilityAssessmentScans == null) {
            this.managedDatabaseVulnerabilityAssessmentScans = new ManagedDatabaseVulnerabilityAssessmentScansImpl(
                clientObject.getManagedDatabaseVulnerabilityAssessmentScans(), this);
        }
        return managedDatabaseVulnerabilityAssessmentScans;
    }

    /**
     * Gets the resource collection API of ManagedInstanceAdministrators. It manages ManagedInstanceAdministrator.
     * 
     * @return Resource collection API of ManagedInstanceAdministrators.
     */
    public ManagedInstanceAdministrators managedInstanceAdministrators() {
        if (this.managedInstanceAdministrators == null) {
            this.managedInstanceAdministrators
                = new ManagedInstanceAdministratorsImpl(clientObject.getManagedInstanceAdministrators(), this);
        }
        return managedInstanceAdministrators;
    }

    /**
     * Gets the resource collection API of ManagedInstanceAzureADOnlyAuthentications. It manages
     * ManagedInstanceAzureADOnlyAuthentication.
     * 
     * @return Resource collection API of ManagedInstanceAzureADOnlyAuthentications.
     */
    public ManagedInstanceAzureADOnlyAuthentications managedInstanceAzureADOnlyAuthentications() {
        if (this.managedInstanceAzureADOnlyAuthentications == null) {
            this.managedInstanceAzureADOnlyAuthentications = new ManagedInstanceAzureADOnlyAuthenticationsImpl(
                clientObject.getManagedInstanceAzureADOnlyAuthentications(), this);
        }
        return managedInstanceAzureADOnlyAuthentications;
    }

    /**
     * Gets the resource collection API of ManagedInstanceEncryptionProtectors. It manages
     * ManagedInstanceEncryptionProtector.
     * 
     * @return Resource collection API of ManagedInstanceEncryptionProtectors.
     */
    public ManagedInstanceEncryptionProtectors managedInstanceEncryptionProtectors() {
        if (this.managedInstanceEncryptionProtectors == null) {
            this.managedInstanceEncryptionProtectors = new ManagedInstanceEncryptionProtectorsImpl(
                clientObject.getManagedInstanceEncryptionProtectors(), this);
        }
        return managedInstanceEncryptionProtectors;
    }

    /**
     * Gets the resource collection API of ManagedInstanceKeys. It manages ManagedInstanceKey.
     * 
     * @return Resource collection API of ManagedInstanceKeys.
     */
    public ManagedInstanceKeys managedInstanceKeys() {
        if (this.managedInstanceKeys == null) {
            this.managedInstanceKeys = new ManagedInstanceKeysImpl(clientObject.getManagedInstanceKeys(), this);
        }
        return managedInstanceKeys;
    }

    /**
     * Gets the resource collection API of ManagedInstanceLongTermRetentionPolicies. It manages
     * ManagedInstanceLongTermRetentionPolicy.
     * 
     * @return Resource collection API of ManagedInstanceLongTermRetentionPolicies.
     */
    public ManagedInstanceLongTermRetentionPolicies managedInstanceLongTermRetentionPolicies() {
        if (this.managedInstanceLongTermRetentionPolicies == null) {
            this.managedInstanceLongTermRetentionPolicies = new ManagedInstanceLongTermRetentionPoliciesImpl(
                clientObject.getManagedInstanceLongTermRetentionPolicies(), this);
        }
        return managedInstanceLongTermRetentionPolicies;
    }

    /**
     * Gets the resource collection API of ManagedInstanceOperations.
     * 
     * @return Resource collection API of ManagedInstanceOperations.
     */
    public ManagedInstanceOperations managedInstanceOperations() {
        if (this.managedInstanceOperations == null) {
            this.managedInstanceOperations
                = new ManagedInstanceOperationsImpl(clientObject.getManagedInstanceOperations(), this);
        }
        return managedInstanceOperations;
    }

    /**
     * Gets the resource collection API of ManagedInstancePrivateEndpointConnections. It manages
     * ManagedInstancePrivateEndpointConnection.
     * 
     * @return Resource collection API of ManagedInstancePrivateEndpointConnections.
     */
    public ManagedInstancePrivateEndpointConnections managedInstancePrivateEndpointConnections() {
        if (this.managedInstancePrivateEndpointConnections == null) {
            this.managedInstancePrivateEndpointConnections = new ManagedInstancePrivateEndpointConnectionsImpl(
                clientObject.getManagedInstancePrivateEndpointConnections(), this);
        }
        return managedInstancePrivateEndpointConnections;
    }

    /**
     * Gets the resource collection API of ManagedInstancePrivateLinkResources.
     * 
     * @return Resource collection API of ManagedInstancePrivateLinkResources.
     */
    public ManagedInstancePrivateLinkResources managedInstancePrivateLinkResources() {
        if (this.managedInstancePrivateLinkResources == null) {
            this.managedInstancePrivateLinkResources = new ManagedInstancePrivateLinkResourcesImpl(
                clientObject.getManagedInstancePrivateLinkResources(), this);
        }
        return managedInstancePrivateLinkResources;
    }

    /**
     * Gets the resource collection API of ManagedInstanceTdeCertificates.
     * 
     * @return Resource collection API of ManagedInstanceTdeCertificates.
     */
    public ManagedInstanceTdeCertificates managedInstanceTdeCertificates() {
        if (this.managedInstanceTdeCertificates == null) {
            this.managedInstanceTdeCertificates
                = new ManagedInstanceTdeCertificatesImpl(clientObject.getManagedInstanceTdeCertificates(), this);
        }
        return managedInstanceTdeCertificates;
    }

    /**
     * Gets the resource collection API of ManagedInstanceVulnerabilityAssessments. It manages
     * ManagedInstanceVulnerabilityAssessment.
     * 
     * @return Resource collection API of ManagedInstanceVulnerabilityAssessments.
     */
    public ManagedInstanceVulnerabilityAssessments managedInstanceVulnerabilityAssessments() {
        if (this.managedInstanceVulnerabilityAssessments == null) {
            this.managedInstanceVulnerabilityAssessments = new ManagedInstanceVulnerabilityAssessmentsImpl(
                clientObject.getManagedInstanceVulnerabilityAssessments(), this);
        }
        return managedInstanceVulnerabilityAssessments;
    }

    /**
     * Gets the resource collection API of ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies.
     * 
     * @return Resource collection API of ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies.
     */
    public ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies
        managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies() {
        if (this.managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies == null) {
            this.managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies
                = new ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesImpl(
                    clientObject.getManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies(), this);
        }
        return managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies;
    }

    /**
     * Gets the resource collection API of ManagedServerSecurityAlertPolicies. It manages
     * ManagedServerSecurityAlertPolicy.
     * 
     * @return Resource collection API of ManagedServerSecurityAlertPolicies.
     */
    public ManagedServerSecurityAlertPolicies managedServerSecurityAlertPolicies() {
        if (this.managedServerSecurityAlertPolicies == null) {
            this.managedServerSecurityAlertPolicies = new ManagedServerSecurityAlertPoliciesImpl(
                clientObject.getManagedServerSecurityAlertPolicies(), this);
        }
        return managedServerSecurityAlertPolicies;
    }

    /**
     * Gets the resource collection API of Operations.
     * 
     * @return Resource collection API of Operations.
     */
    public Operations operations() {
        if (this.operations == null) {
            this.operations = new OperationsImpl(clientObject.getOperations(), this);
        }
        return operations;
    }

    /**
     * Gets the resource collection API of PrivateEndpointConnections. It manages PrivateEndpointConnection.
     * 
     * @return Resource collection API of PrivateEndpointConnections.
     */
    public PrivateEndpointConnections privateEndpointConnections() {
        if (this.privateEndpointConnections == null) {
            this.privateEndpointConnections
                = new PrivateEndpointConnectionsImpl(clientObject.getPrivateEndpointConnections(), this);
        }
        return privateEndpointConnections;
    }

    /**
     * Gets the resource collection API of PrivateLinkResources.
     * 
     * @return Resource collection API of PrivateLinkResources.
     */
    public PrivateLinkResources privateLinkResources() {
        if (this.privateLinkResources == null) {
            this.privateLinkResources = new PrivateLinkResourcesImpl(clientObject.getPrivateLinkResources(), this);
        }
        return privateLinkResources;
    }

    /**
     * Gets the resource collection API of RecoverableManagedDatabases.
     * 
     * @return Resource collection API of RecoverableManagedDatabases.
     */
    public RecoverableManagedDatabases recoverableManagedDatabases() {
        if (this.recoverableManagedDatabases == null) {
            this.recoverableManagedDatabases
                = new RecoverableManagedDatabasesImpl(clientObject.getRecoverableManagedDatabases(), this);
        }
        return recoverableManagedDatabases;
    }

    /**
     * Gets the resource collection API of RestorePoints.
     * 
     * @return Resource collection API of RestorePoints.
     */
    public RestorePoints restorePoints() {
        if (this.restorePoints == null) {
            this.restorePoints = new RestorePointsImpl(clientObject.getRestorePoints(), this);
        }
        return restorePoints;
    }

    /**
     * Gets the resource collection API of ServerAdvisors.
     * 
     * @return Resource collection API of ServerAdvisors.
     */
    public ServerAdvisors serverAdvisors() {
        if (this.serverAdvisors == null) {
            this.serverAdvisors = new ServerAdvisorsImpl(clientObject.getServerAdvisors(), this);
        }
        return serverAdvisors;
    }

    /**
     * Gets the resource collection API of ServerAutomaticTunings.
     * 
     * @return Resource collection API of ServerAutomaticTunings.
     */
    public ServerAutomaticTunings serverAutomaticTunings() {
        if (this.serverAutomaticTunings == null) {
            this.serverAutomaticTunings
                = new ServerAutomaticTuningsImpl(clientObject.getServerAutomaticTunings(), this);
        }
        return serverAutomaticTunings;
    }

    /**
     * Gets the resource collection API of ServerAzureADAdministrators. It manages ServerAzureADAdministrator.
     * 
     * @return Resource collection API of ServerAzureADAdministrators.
     */
    public ServerAzureADAdministrators serverAzureADAdministrators() {
        if (this.serverAzureADAdministrators == null) {
            this.serverAzureADAdministrators
                = new ServerAzureADAdministratorsImpl(clientObject.getServerAzureADAdministrators(), this);
        }
        return serverAzureADAdministrators;
    }

    /**
     * Gets the resource collection API of ServerAzureADOnlyAuthentications. It manages ServerAzureADOnlyAuthentication.
     * 
     * @return Resource collection API of ServerAzureADOnlyAuthentications.
     */
    public ServerAzureADOnlyAuthentications serverAzureADOnlyAuthentications() {
        if (this.serverAzureADOnlyAuthentications == null) {
            this.serverAzureADOnlyAuthentications
                = new ServerAzureADOnlyAuthenticationsImpl(clientObject.getServerAzureADOnlyAuthentications(), this);
        }
        return serverAzureADOnlyAuthentications;
    }

    /**
     * Gets the resource collection API of ServerDevOpsAuditSettings. It manages ServerDevOpsAuditingSettings.
     * 
     * @return Resource collection API of ServerDevOpsAuditSettings.
     */
    public ServerDevOpsAuditSettings serverDevOpsAuditSettings() {
        if (this.serverDevOpsAuditSettings == null) {
            this.serverDevOpsAuditSettings
                = new ServerDevOpsAuditSettingsImpl(clientObject.getServerDevOpsAuditSettings(), this);
        }
        return serverDevOpsAuditSettings;
    }

    /**
     * Gets the resource collection API of ServerDnsAliases.
     * 
     * @return Resource collection API of ServerDnsAliases.
     */
    public ServerDnsAliases serverDnsAliases() {
        if (this.serverDnsAliases == null) {
            this.serverDnsAliases = new ServerDnsAliasesImpl(clientObject.getServerDnsAliases(), this);
        }
        return serverDnsAliases;
    }

    /**
     * Gets the resource collection API of ServerKeys. It manages ServerKey.
     * 
     * @return Resource collection API of ServerKeys.
     */
    public ServerKeys serverKeys() {
        if (this.serverKeys == null) {
            this.serverKeys = new ServerKeysImpl(clientObject.getServerKeys(), this);
        }
        return serverKeys;
    }

    /**
     * Gets the resource collection API of ServerOperations.
     * 
     * @return Resource collection API of ServerOperations.
     */
    public ServerOperations serverOperations() {
        if (this.serverOperations == null) {
            this.serverOperations = new ServerOperationsImpl(clientObject.getServerOperations(), this);
        }
        return serverOperations;
    }

    /**
     * Gets the resource collection API of ServerSecurityAlertPolicies. It manages ServerSecurityAlertPolicy.
     * 
     * @return Resource collection API of ServerSecurityAlertPolicies.
     */
    public ServerSecurityAlertPolicies serverSecurityAlertPolicies() {
        if (this.serverSecurityAlertPolicies == null) {
            this.serverSecurityAlertPolicies
                = new ServerSecurityAlertPoliciesImpl(clientObject.getServerSecurityAlertPolicies(), this);
        }
        return serverSecurityAlertPolicies;
    }

    /**
     * Gets the resource collection API of ServerTrustGroups. It manages ServerTrustGroup.
     * 
     * @return Resource collection API of ServerTrustGroups.
     */
    public ServerTrustGroups serverTrustGroups() {
        if (this.serverTrustGroups == null) {
            this.serverTrustGroups = new ServerTrustGroupsImpl(clientObject.getServerTrustGroups(), this);
        }
        return serverTrustGroups;
    }

    /**
     * Gets the resource collection API of ServerVulnerabilityAssessments. It manages ServerVulnerabilityAssessment.
     * 
     * @return Resource collection API of ServerVulnerabilityAssessments.
     */
    public ServerVulnerabilityAssessments serverVulnerabilityAssessments() {
        if (this.serverVulnerabilityAssessments == null) {
            this.serverVulnerabilityAssessments
                = new ServerVulnerabilityAssessmentsImpl(clientObject.getServerVulnerabilityAssessments(), this);
        }
        return serverVulnerabilityAssessments;
    }

    /**
     * Gets the resource collection API of SqlAgents.
     * 
     * @return Resource collection API of SqlAgents.
     */
    public SqlAgents sqlAgents() {
        if (this.sqlAgents == null) {
            this.sqlAgents = new SqlAgentsImpl(clientObject.getSqlAgents(), this);
        }
        return sqlAgents;
    }

    /**
     * Gets the resource collection API of SubscriptionUsages.
     * 
     * @return Resource collection API of SubscriptionUsages.
     */
    public SubscriptionUsages subscriptionUsages() {
        if (this.subscriptionUsages == null) {
            this.subscriptionUsages = new SubscriptionUsagesImpl(clientObject.getSubscriptionUsages(), this);
        }
        return subscriptionUsages;
    }

    /**
     * Gets the resource collection API of SyncAgents. It manages SyncAgent.
     * 
     * @return Resource collection API of SyncAgents.
     */
    public SyncAgents syncAgents() {
        if (this.syncAgents == null) {
            this.syncAgents = new SyncAgentsImpl(clientObject.getSyncAgents(), this);
        }
        return syncAgents;
    }

    /**
     * Gets the resource collection API of SyncGroups. It manages SyncGroup.
     * 
     * @return Resource collection API of SyncGroups.
     */
    public SyncGroups syncGroups() {
        if (this.syncGroups == null) {
            this.syncGroups = new SyncGroupsImpl(clientObject.getSyncGroups(), this);
        }
        return syncGroups;
    }

    /**
     * Gets the resource collection API of SyncMembers. It manages SyncMember.
     * 
     * @return Resource collection API of SyncMembers.
     */
    public SyncMembers syncMembers() {
        if (this.syncMembers == null) {
            this.syncMembers = new SyncMembersImpl(clientObject.getSyncMembers(), this);
        }
        return syncMembers;
    }

    /**
     * Gets the resource collection API of TdeCertificates.
     * 
     * @return Resource collection API of TdeCertificates.
     */
    public TdeCertificates tdeCertificates() {
        if (this.tdeCertificates == null) {
            this.tdeCertificates = new TdeCertificatesImpl(clientObject.getTdeCertificates(), this);
        }
        return tdeCertificates;
    }

    /**
     * Gets the resource collection API of TimeZones.
     * 
     * @return Resource collection API of TimeZones.
     */
    public TimeZones timeZones() {
        if (this.timeZones == null) {
            this.timeZones = new TimeZonesImpl(clientObject.getTimeZones(), this);
        }
        return timeZones;
    }

    /**
     * Gets the resource collection API of VirtualNetworkRules. It manages VirtualNetworkRule.
     * 
     * @return Resource collection API of VirtualNetworkRules.
     */
    public VirtualNetworkRules virtualNetworkRules() {
        if (this.virtualNetworkRules == null) {
            this.virtualNetworkRules = new VirtualNetworkRulesImpl(clientObject.getVirtualNetworkRules(), this);
        }
        return virtualNetworkRules;
    }

    /**
     * Gets the resource collection API of WorkloadClassifiers. It manages WorkloadClassifier.
     * 
     * @return Resource collection API of WorkloadClassifiers.
     */
    public WorkloadClassifiers workloadClassifiers() {
        if (this.workloadClassifiers == null) {
            this.workloadClassifiers = new WorkloadClassifiersImpl(clientObject.getWorkloadClassifiers(), this);
        }
        return workloadClassifiers;
    }

    /**
     * Gets the resource collection API of WorkloadGroups. It manages WorkloadGroup.
     * 
     * @return Resource collection API of WorkloadGroups.
     */
    public WorkloadGroups workloadGroups() {
        if (this.workloadGroups == null) {
            this.workloadGroups = new WorkloadGroupsImpl(clientObject.getWorkloadGroups(), this);
        }
        return workloadGroups;
    }

    /**
     * Gets the resource collection API of BackupShortTermRetentionPolicies. It manages BackupShortTermRetentionPolicy.
     * 
     * @return Resource collection API of BackupShortTermRetentionPolicies.
     */
    public BackupShortTermRetentionPolicies backupShortTermRetentionPolicies() {
        if (this.backupShortTermRetentionPolicies == null) {
            this.backupShortTermRetentionPolicies
                = new BackupShortTermRetentionPoliciesImpl(clientObject.getBackupShortTermRetentionPolicies(), this);
        }
        return backupShortTermRetentionPolicies;
    }

    /**
     * Gets the resource collection API of DatabaseExtensionsOperations. It manages
     * ImportExportExtensionsOperationResult.
     * 
     * @return Resource collection API of DatabaseExtensionsOperations.
     */
    public DatabaseExtensionsOperations databaseExtensionsOperations() {
        if (this.databaseExtensionsOperations == null) {
            this.databaseExtensionsOperations
                = new DatabaseExtensionsOperationsImpl(clientObject.getDatabaseExtensionsOperations(), this);
        }
        return databaseExtensionsOperations;
    }

    /**
     * Gets the resource collection API of DatabaseOperations.
     * 
     * @return Resource collection API of DatabaseOperations.
     */
    public DatabaseOperations databaseOperations() {
        if (this.databaseOperations == null) {
            this.databaseOperations = new DatabaseOperationsImpl(clientObject.getDatabaseOperations(), this);
        }
        return databaseOperations;
    }

    /**
     * Gets the resource collection API of DatabaseUsages.
     * 
     * @return Resource collection API of DatabaseUsages.
     */
    public DatabaseUsages databaseUsages() {
        if (this.databaseUsages == null) {
            this.databaseUsages = new DatabaseUsagesImpl(clientObject.getDatabaseUsages(), this);
        }
        return databaseUsages;
    }

    /**
     * Gets the resource collection API of LedgerDigestUploadsOperations. It manages LedgerDigestUploads.
     * 
     * @return Resource collection API of LedgerDigestUploadsOperations.
     */
    public LedgerDigestUploadsOperations ledgerDigestUploadsOperations() {
        if (this.ledgerDigestUploadsOperations == null) {
            this.ledgerDigestUploadsOperations
                = new LedgerDigestUploadsOperationsImpl(clientObject.getLedgerDigestUploadsOperations(), this);
        }
        return ledgerDigestUploadsOperations;
    }

    /**
     * Gets the resource collection API of OutboundFirewallRules. It manages OutboundFirewallRule.
     * 
     * @return Resource collection API of OutboundFirewallRules.
     */
    public OutboundFirewallRules outboundFirewallRules() {
        if (this.outboundFirewallRules == null) {
            this.outboundFirewallRules = new OutboundFirewallRulesImpl(clientObject.getOutboundFirewallRules(), this);
        }
        return outboundFirewallRules;
    }

    /**
     * Gets the resource collection API of Usages.
     * 
     * @return Resource collection API of Usages.
     */
    public Usages usages() {
        if (this.usages == null) {
            this.usages = new UsagesImpl(clientObject.getUsages(), this);
        }
        return usages;
    }

    /**
     * Gets the resource collection API of LongTermRetentionManagedInstanceBackups.
     * 
     * @return Resource collection API of LongTermRetentionManagedInstanceBackups.
     */
    public LongTermRetentionManagedInstanceBackups longTermRetentionManagedInstanceBackups() {
        if (this.longTermRetentionManagedInstanceBackups == null) {
            this.longTermRetentionManagedInstanceBackups = new LongTermRetentionManagedInstanceBackupsImpl(
                clientObject.getLongTermRetentionManagedInstanceBackups(), this);
        }
        return longTermRetentionManagedInstanceBackups;
    }

    /**
     * Gets the resource collection API of RestorableDroppedManagedDatabases.
     * 
     * @return Resource collection API of RestorableDroppedManagedDatabases.
     */
    public RestorableDroppedManagedDatabases restorableDroppedManagedDatabases() {
        if (this.restorableDroppedManagedDatabases == null) {
            this.restorableDroppedManagedDatabases
                = new RestorableDroppedManagedDatabasesImpl(clientObject.getRestorableDroppedManagedDatabases(), this);
        }
        return restorableDroppedManagedDatabases;
    }

    /**
     * Gets the resource collection API of ServerConnectionPolicies. It manages ServerConnectionPolicy.
     * 
     * @return Resource collection API of ServerConnectionPolicies.
     */
    public ServerConnectionPolicies serverConnectionPolicies() {
        if (this.serverConnectionPolicies == null) {
            this.serverConnectionPolicies
                = new ServerConnectionPoliciesImpl(clientObject.getServerConnectionPolicies(), this);
        }
        return serverConnectionPolicies;
    }

    /**
     * Gets the resource collection API of DistributedAvailabilityGroups. It manages DistributedAvailabilityGroup.
     * 
     * @return Resource collection API of DistributedAvailabilityGroups.
     */
    public DistributedAvailabilityGroups distributedAvailabilityGroups() {
        if (this.distributedAvailabilityGroups == null) {
            this.distributedAvailabilityGroups
                = new DistributedAvailabilityGroupsImpl(clientObject.getDistributedAvailabilityGroups(), this);
        }
        return distributedAvailabilityGroups;
    }

    /**
     * Gets the resource collection API of ServerTrustCertificates. It manages ServerTrustCertificate.
     * 
     * @return Resource collection API of ServerTrustCertificates.
     */
    public ServerTrustCertificates serverTrustCertificates() {
        if (this.serverTrustCertificates == null) {
            this.serverTrustCertificates
                = new ServerTrustCertificatesImpl(clientObject.getServerTrustCertificates(), this);
        }
        return serverTrustCertificates;
    }

    /**
     * Gets the resource collection API of EndpointCertificates.
     * 
     * @return Resource collection API of EndpointCertificates.
     */
    public EndpointCertificates endpointCertificates() {
        if (this.endpointCertificates == null) {
            this.endpointCertificates = new EndpointCertificatesImpl(clientObject.getEndpointCertificates(), this);
        }
        return endpointCertificates;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseSensitivityLabels. It manages SensitivityLabel.
     * 
     * @return Resource collection API of ManagedDatabaseSensitivityLabels.
     */
    public ManagedDatabaseSensitivityLabels managedDatabaseSensitivityLabels() {
        if (this.managedDatabaseSensitivityLabels == null) {
            this.managedDatabaseSensitivityLabels
                = new ManagedDatabaseSensitivityLabelsImpl(clientObject.getManagedDatabaseSensitivityLabels(), this);
        }
        return managedDatabaseSensitivityLabels;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseRecommendedSensitivityLabels.
     * 
     * @return Resource collection API of ManagedDatabaseRecommendedSensitivityLabels.
     */
    public ManagedDatabaseRecommendedSensitivityLabels managedDatabaseRecommendedSensitivityLabels() {
        if (this.managedDatabaseRecommendedSensitivityLabels == null) {
            this.managedDatabaseRecommendedSensitivityLabels = new ManagedDatabaseRecommendedSensitivityLabelsImpl(
                clientObject.getManagedDatabaseRecommendedSensitivityLabels(), this);
        }
        return managedDatabaseRecommendedSensitivityLabels;
    }

    /**
     * Gets the resource collection API of SensitivityLabels.
     * 
     * @return Resource collection API of SensitivityLabels.
     */
    public SensitivityLabels sensitivityLabels() {
        if (this.sensitivityLabels == null) {
            this.sensitivityLabels = new SensitivityLabelsImpl(clientObject.getSensitivityLabels(), this);
        }
        return sensitivityLabels;
    }

    /**
     * Gets the resource collection API of RecommendedSensitivityLabels.
     * 
     * @return Resource collection API of RecommendedSensitivityLabels.
     */
    public RecommendedSensitivityLabels recommendedSensitivityLabels() {
        if (this.recommendedSensitivityLabels == null) {
            this.recommendedSensitivityLabels
                = new RecommendedSensitivityLabelsImpl(clientObject.getRecommendedSensitivityLabels(), this);
        }
        return recommendedSensitivityLabels;
    }

    /**
     * Gets the resource collection API of ServerBlobAuditingPolicies. It manages ServerBlobAuditingPolicy.
     * 
     * @return Resource collection API of ServerBlobAuditingPolicies.
     */
    public ServerBlobAuditingPolicies serverBlobAuditingPolicies() {
        if (this.serverBlobAuditingPolicies == null) {
            this.serverBlobAuditingPolicies
                = new ServerBlobAuditingPoliciesImpl(clientObject.getServerBlobAuditingPolicies(), this);
        }
        return serverBlobAuditingPolicies;
    }

    /**
     * Gets the resource collection API of DatabaseBlobAuditingPolicies. It manages DatabaseBlobAuditingPolicy.
     * 
     * @return Resource collection API of DatabaseBlobAuditingPolicies.
     */
    public DatabaseBlobAuditingPolicies databaseBlobAuditingPolicies() {
        if (this.databaseBlobAuditingPolicies == null) {
            this.databaseBlobAuditingPolicies
                = new DatabaseBlobAuditingPoliciesImpl(clientObject.getDatabaseBlobAuditingPolicies(), this);
        }
        return databaseBlobAuditingPolicies;
    }

    /**
     * Gets the resource collection API of ExtendedDatabaseBlobAuditingPolicies. It manages
     * ExtendedDatabaseBlobAuditingPolicy.
     * 
     * @return Resource collection API of ExtendedDatabaseBlobAuditingPolicies.
     */
    public ExtendedDatabaseBlobAuditingPolicies extendedDatabaseBlobAuditingPolicies() {
        if (this.extendedDatabaseBlobAuditingPolicies == null) {
            this.extendedDatabaseBlobAuditingPolicies = new ExtendedDatabaseBlobAuditingPoliciesImpl(
                clientObject.getExtendedDatabaseBlobAuditingPolicies(), this);
        }
        return extendedDatabaseBlobAuditingPolicies;
    }

    /**
     * Gets the resource collection API of ExtendedServerBlobAuditingPolicies. It manages
     * ExtendedServerBlobAuditingPolicy.
     * 
     * @return Resource collection API of ExtendedServerBlobAuditingPolicies.
     */
    public ExtendedServerBlobAuditingPolicies extendedServerBlobAuditingPolicies() {
        if (this.extendedServerBlobAuditingPolicies == null) {
            this.extendedServerBlobAuditingPolicies = new ExtendedServerBlobAuditingPoliciesImpl(
                clientObject.getExtendedServerBlobAuditingPolicies(), this);
        }
        return extendedServerBlobAuditingPolicies;
    }

    /**
     * Gets the resource collection API of DatabaseAdvancedThreatProtectionSettings. It manages
     * DatabaseAdvancedThreatProtection.
     * 
     * @return Resource collection API of DatabaseAdvancedThreatProtectionSettings.
     */
    public DatabaseAdvancedThreatProtectionSettings databaseAdvancedThreatProtectionSettings() {
        if (this.databaseAdvancedThreatProtectionSettings == null) {
            this.databaseAdvancedThreatProtectionSettings = new DatabaseAdvancedThreatProtectionSettingsImpl(
                clientObject.getDatabaseAdvancedThreatProtectionSettings(), this);
        }
        return databaseAdvancedThreatProtectionSettings;
    }

    /**
     * Gets the resource collection API of ServerAdvancedThreatProtectionSettings. It manages
     * ServerAdvancedThreatProtection.
     * 
     * @return Resource collection API of ServerAdvancedThreatProtectionSettings.
     */
    public ServerAdvancedThreatProtectionSettings serverAdvancedThreatProtectionSettings() {
        if (this.serverAdvancedThreatProtectionSettings == null) {
            this.serverAdvancedThreatProtectionSettings = new ServerAdvancedThreatProtectionSettingsImpl(
                clientObject.getServerAdvancedThreatProtectionSettings(), this);
        }
        return serverAdvancedThreatProtectionSettings;
    }

    /**
     * Gets the resource collection API of ManagedServerDnsAliases. It manages ManagedServerDnsAlias.
     * 
     * @return Resource collection API of ManagedServerDnsAliases.
     */
    public ManagedServerDnsAliases managedServerDnsAliases() {
        if (this.managedServerDnsAliases == null) {
            this.managedServerDnsAliases
                = new ManagedServerDnsAliasesImpl(clientObject.getManagedServerDnsAliases(), this);
        }
        return managedServerDnsAliases;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseAdvancedThreatProtectionSettings. It manages
     * ManagedDatabaseAdvancedThreatProtection.
     * 
     * @return Resource collection API of ManagedDatabaseAdvancedThreatProtectionSettings.
     */
    public ManagedDatabaseAdvancedThreatProtectionSettings managedDatabaseAdvancedThreatProtectionSettings() {
        if (this.managedDatabaseAdvancedThreatProtectionSettings == null) {
            this.managedDatabaseAdvancedThreatProtectionSettings
                = new ManagedDatabaseAdvancedThreatProtectionSettingsImpl(
                    clientObject.getManagedDatabaseAdvancedThreatProtectionSettings(), this);
        }
        return managedDatabaseAdvancedThreatProtectionSettings;
    }

    /**
     * Gets the resource collection API of ManagedInstanceAdvancedThreatProtectionSettings. It manages
     * ManagedInstanceAdvancedThreatProtection.
     * 
     * @return Resource collection API of ManagedInstanceAdvancedThreatProtectionSettings.
     */
    public ManagedInstanceAdvancedThreatProtectionSettings managedInstanceAdvancedThreatProtectionSettings() {
        if (this.managedInstanceAdvancedThreatProtectionSettings == null) {
            this.managedInstanceAdvancedThreatProtectionSettings
                = new ManagedInstanceAdvancedThreatProtectionSettingsImpl(
                    clientObject.getManagedInstanceAdvancedThreatProtectionSettings(), this);
        }
        return managedInstanceAdvancedThreatProtectionSettings;
    }

    /**
     * Gets the resource collection API of ReplicationLinks.
     * 
     * @return Resource collection API of ReplicationLinks.
     */
    public ReplicationLinks replicationLinks() {
        if (this.replicationLinks == null) {
            this.replicationLinks = new ReplicationLinksImpl(clientObject.getReplicationLinks(), this);
        }
        return replicationLinks;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseMoveOperations.
     * 
     * @return Resource collection API of ManagedDatabaseMoveOperations.
     */
    public ManagedDatabaseMoveOperations managedDatabaseMoveOperations() {
        if (this.managedDatabaseMoveOperations == null) {
            this.managedDatabaseMoveOperations
                = new ManagedDatabaseMoveOperationsImpl(clientObject.getManagedDatabaseMoveOperations(), this);
        }
        return managedDatabaseMoveOperations;
    }

    /**
     * Gets the resource collection API of ManagedInstanceDtcs. It manages ManagedInstanceDtc.
     * 
     * @return Resource collection API of ManagedInstanceDtcs.
     */
    public ManagedInstanceDtcs managedInstanceDtcs() {
        if (this.managedInstanceDtcs == null) {
            this.managedInstanceDtcs = new ManagedInstanceDtcsImpl(clientObject.getManagedInstanceDtcs(), this);
        }
        return managedInstanceDtcs;
    }

    /**
     * Gets the resource collection API of SynapseLinkWorkspaces.
     * 
     * @return Resource collection API of SynapseLinkWorkspaces.
     */
    public SynapseLinkWorkspaces synapseLinkWorkspaces() {
        if (this.synapseLinkWorkspaces == null) {
            this.synapseLinkWorkspaces = new SynapseLinkWorkspacesImpl(clientObject.getSynapseLinkWorkspaces(), this);
        }
        return synapseLinkWorkspaces;
    }

    /**
     * Gets the resource collection API of VirtualClusters.
     * 
     * @return Resource collection API of VirtualClusters.
     */
    public VirtualClusters virtualClusters() {
        if (this.virtualClusters == null) {
            this.virtualClusters = new VirtualClustersImpl(clientObject.getVirtualClusters(), this);
        }
        return virtualClusters;
    }

    /**
     * Gets the resource collection API of InstanceFailoverGroups. It manages InstanceFailoverGroup.
     * 
     * @return Resource collection API of InstanceFailoverGroups.
     */
    public InstanceFailoverGroups instanceFailoverGroups() {
        if (this.instanceFailoverGroups == null) {
            this.instanceFailoverGroups
                = new InstanceFailoverGroupsImpl(clientObject.getInstanceFailoverGroups(), this);
        }
        return instanceFailoverGroups;
    }

    /**
     * Gets the resource collection API of ManagedDatabaseRestoreDetails.
     * 
     * @return Resource collection API of ManagedDatabaseRestoreDetails.
     */
    public ManagedDatabaseRestoreDetails managedDatabaseRestoreDetails() {
        if (this.managedDatabaseRestoreDetails == null) {
            this.managedDatabaseRestoreDetails
                = new ManagedDatabaseRestoreDetailsImpl(clientObject.getManagedDatabaseRestoreDetails(), this);
        }
        return managedDatabaseRestoreDetails;
    }

    /**
     * Gets the resource collection API of DatabaseEncryptionProtectors.
     * 
     * @return Resource collection API of DatabaseEncryptionProtectors.
     */
    public DatabaseEncryptionProtectors databaseEncryptionProtectors() {
        if (this.databaseEncryptionProtectors == null) {
            this.databaseEncryptionProtectors
                = new DatabaseEncryptionProtectorsImpl(clientObject.getDatabaseEncryptionProtectors(), this);
        }
        return databaseEncryptionProtectors;
    }

    /**
     * Gets the resource collection API of ManagedDatabases. It manages ManagedDatabase.
     * 
     * @return Resource collection API of ManagedDatabases.
     */
    public ManagedDatabases managedDatabases() {
        if (this.managedDatabases == null) {
            this.managedDatabases = new ManagedDatabasesImpl(clientObject.getManagedDatabases(), this);
        }
        return managedDatabases;
    }

    /**
     * Gets the resource collection API of ManagedInstances. It manages ManagedInstance.
     * 
     * @return Resource collection API of ManagedInstances.
     */
    public ManagedInstances managedInstances() {
        if (this.managedInstances == null) {
            this.managedInstances = new ManagedInstancesImpl(clientObject.getManagedInstances(), this);
        }
        return managedInstances;
    }

    /**
     * Gets the resource collection API of ManagedLedgerDigestUploadsOperations. It manages ManagedLedgerDigestUploads.
     * 
     * @return Resource collection API of ManagedLedgerDigestUploadsOperations.
     */
    public ManagedLedgerDigestUploadsOperations managedLedgerDigestUploadsOperations() {
        if (this.managedLedgerDigestUploadsOperations == null) {
            this.managedLedgerDigestUploadsOperations = new ManagedLedgerDigestUploadsOperationsImpl(
                clientObject.getManagedLedgerDigestUploadsOperations(), this);
        }
        return managedLedgerDigestUploadsOperations;
    }

    /**
     * Gets the resource collection API of RecoverableDatabases.
     * 
     * @return Resource collection API of RecoverableDatabases.
     */
    public RecoverableDatabases recoverableDatabases() {
        if (this.recoverableDatabases == null) {
            this.recoverableDatabases = new RecoverableDatabasesImpl(clientObject.getRecoverableDatabases(), this);
        }
        return recoverableDatabases;
    }

    /**
     * Gets the resource collection API of RestorableDroppedDatabases.
     * 
     * @return Resource collection API of RestorableDroppedDatabases.
     */
    public RestorableDroppedDatabases restorableDroppedDatabases() {
        if (this.restorableDroppedDatabases == null) {
            this.restorableDroppedDatabases
                = new RestorableDroppedDatabasesImpl(clientObject.getRestorableDroppedDatabases(), this);
        }
        return restorableDroppedDatabases;
    }

    /**
     * Gets the resource collection API of ServerConfigurationOptions. It manages ServerConfigurationOption.
     * 
     * @return Resource collection API of ServerConfigurationOptions.
     */
    public ServerConfigurationOptions serverConfigurationOptions() {
        if (this.serverConfigurationOptions == null) {
            this.serverConfigurationOptions
                = new ServerConfigurationOptionsImpl(clientObject.getServerConfigurationOptions(), this);
        }
        return serverConfigurationOptions;
    }

    /**
     * Gets the resource collection API of StartStopManagedInstanceSchedules. It manages
     * StartStopManagedInstanceSchedule.
     * 
     * @return Resource collection API of StartStopManagedInstanceSchedules.
     */
    public StartStopManagedInstanceSchedules startStopManagedInstanceSchedules() {
        if (this.startStopManagedInstanceSchedules == null) {
            this.startStopManagedInstanceSchedules
                = new StartStopManagedInstanceSchedulesImpl(clientObject.getStartStopManagedInstanceSchedules(), this);
        }
        return startStopManagedInstanceSchedules;
    }

    /**
     * Gets the resource collection API of TransparentDataEncryptions. It manages
     * LogicalDatabaseTransparentDataEncryption.
     * 
     * @return Resource collection API of TransparentDataEncryptions.
     */
    public TransparentDataEncryptions transparentDataEncryptions() {
        if (this.transparentDataEncryptions == null) {
            this.transparentDataEncryptions
                = new TransparentDataEncryptionsImpl(clientObject.getTransparentDataEncryptions(), this);
        }
        return transparentDataEncryptions;
    }

    /**
     * Gets the resource collection API of IPv6FirewallRules. It manages IPv6FirewallRule.
     * 
     * @return Resource collection API of IPv6FirewallRules.
     */
    public IPv6FirewallRules iPv6FirewallRules() {
        if (this.iPv6FirewallRules == null) {
            this.iPv6FirewallRules = new IPv6FirewallRulesImpl(clientObject.getIPv6FirewallRules(), this);
        }
        return iPv6FirewallRules;
    }

    /**
     * Gets the resource collection API of SqlVulnerabilityAssessmentBaselines.
     * 
     * @return Resource collection API of SqlVulnerabilityAssessmentBaselines.
     */
    public SqlVulnerabilityAssessmentBaselines sqlVulnerabilityAssessmentBaselines() {
        if (this.sqlVulnerabilityAssessmentBaselines == null) {
            this.sqlVulnerabilityAssessmentBaselines = new SqlVulnerabilityAssessmentBaselinesImpl(
                clientObject.getSqlVulnerabilityAssessmentBaselines(), this);
        }
        return sqlVulnerabilityAssessmentBaselines;
    }

    /**
     * Gets the resource collection API of SqlVulnerabilityAssessmentBaselinesOperations. It manages
     * DatabaseSqlVulnerabilityAssessmentBaselineSet.
     * 
     * @return Resource collection API of SqlVulnerabilityAssessmentBaselinesOperations.
     */
    public SqlVulnerabilityAssessmentBaselinesOperations sqlVulnerabilityAssessmentBaselinesOperations() {
        if (this.sqlVulnerabilityAssessmentBaselinesOperations == null) {
            this.sqlVulnerabilityAssessmentBaselinesOperations = new SqlVulnerabilityAssessmentBaselinesOperationsImpl(
                clientObject.getSqlVulnerabilityAssessmentBaselinesOperations(), this);
        }
        return sqlVulnerabilityAssessmentBaselinesOperations;
    }

    /**
     * Gets the resource collection API of SqlVulnerabilityAssessmentExecuteScans.
     * 
     * @return Resource collection API of SqlVulnerabilityAssessmentExecuteScans.
     */
    public SqlVulnerabilityAssessmentExecuteScans sqlVulnerabilityAssessmentExecuteScans() {
        if (this.sqlVulnerabilityAssessmentExecuteScans == null) {
            this.sqlVulnerabilityAssessmentExecuteScans = new SqlVulnerabilityAssessmentExecuteScansImpl(
                clientObject.getSqlVulnerabilityAssessmentExecuteScans(), this);
        }
        return sqlVulnerabilityAssessmentExecuteScans;
    }

    /**
     * Gets the resource collection API of SqlVulnerabilityAssessmentRuleBaselines. It manages
     * DatabaseSqlVulnerabilityAssessmentRuleBaseline.
     * 
     * @return Resource collection API of SqlVulnerabilityAssessmentRuleBaselines.
     */
    public SqlVulnerabilityAssessmentRuleBaselines sqlVulnerabilityAssessmentRuleBaselines() {
        if (this.sqlVulnerabilityAssessmentRuleBaselines == null) {
            this.sqlVulnerabilityAssessmentRuleBaselines = new SqlVulnerabilityAssessmentRuleBaselinesImpl(
                clientObject.getSqlVulnerabilityAssessmentRuleBaselines(), this);
        }
        return sqlVulnerabilityAssessmentRuleBaselines;
    }

    /**
     * Gets the resource collection API of SqlVulnerabilityAssessmentRuleBaselinesOperations.
     * 
     * @return Resource collection API of SqlVulnerabilityAssessmentRuleBaselinesOperations.
     */
    public SqlVulnerabilityAssessmentRuleBaselinesOperations sqlVulnerabilityAssessmentRuleBaselinesOperations() {
        if (this.sqlVulnerabilityAssessmentRuleBaselinesOperations == null) {
            this.sqlVulnerabilityAssessmentRuleBaselinesOperations
                = new SqlVulnerabilityAssessmentRuleBaselinesOperationsImpl(
                    clientObject.getSqlVulnerabilityAssessmentRuleBaselinesOperations(), this);
        }
        return sqlVulnerabilityAssessmentRuleBaselinesOperations;
    }

    /**
     * Gets the resource collection API of SqlVulnerabilityAssessmentScanResultOperations.
     * 
     * @return Resource collection API of SqlVulnerabilityAssessmentScanResultOperations.
     */
    public SqlVulnerabilityAssessmentScanResultOperations sqlVulnerabilityAssessmentScanResultOperations() {
        if (this.sqlVulnerabilityAssessmentScanResultOperations == null) {
            this.sqlVulnerabilityAssessmentScanResultOperations
                = new SqlVulnerabilityAssessmentScanResultOperationsImpl(
                    clientObject.getSqlVulnerabilityAssessmentScanResultOperations(), this);
        }
        return sqlVulnerabilityAssessmentScanResultOperations;
    }

    /**
     * Gets the resource collection API of SqlVulnerabilityAssessmentScans.
     * 
     * @return Resource collection API of SqlVulnerabilityAssessmentScans.
     */
    public SqlVulnerabilityAssessmentScans sqlVulnerabilityAssessmentScans() {
        if (this.sqlVulnerabilityAssessmentScans == null) {
            this.sqlVulnerabilityAssessmentScans
                = new SqlVulnerabilityAssessmentScansImpl(clientObject.getSqlVulnerabilityAssessmentScans(), this);
        }
        return sqlVulnerabilityAssessmentScans;
    }

    /**
     * Gets the resource collection API of SqlVulnerabilityAssessmentsSettings. It manages SqlVulnerabilityAssessment.
     * 
     * @return Resource collection API of SqlVulnerabilityAssessmentsSettings.
     */
    public SqlVulnerabilityAssessmentsSettings sqlVulnerabilityAssessmentsSettings() {
        if (this.sqlVulnerabilityAssessmentsSettings == null) {
            this.sqlVulnerabilityAssessmentsSettings = new SqlVulnerabilityAssessmentsSettingsImpl(
                clientObject.getSqlVulnerabilityAssessmentsSettings(), this);
        }
        return sqlVulnerabilityAssessmentsSettings;
    }

    /**
     * Gets the resource collection API of SqlVulnerabilityAssessments.
     * 
     * @return Resource collection API of SqlVulnerabilityAssessments.
     */
    public SqlVulnerabilityAssessments sqlVulnerabilityAssessments() {
        if (this.sqlVulnerabilityAssessments == null) {
            this.sqlVulnerabilityAssessments
                = new SqlVulnerabilityAssessmentsImpl(clientObject.getSqlVulnerabilityAssessments(), this);
        }
        return sqlVulnerabilityAssessments;
    }

    /**
     * Gets the resource collection API of DatabaseSqlVulnerabilityAssessmentBaselines.
     * 
     * @return Resource collection API of DatabaseSqlVulnerabilityAssessmentBaselines.
     */
    public DatabaseSqlVulnerabilityAssessmentBaselines databaseSqlVulnerabilityAssessmentBaselines() {
        if (this.databaseSqlVulnerabilityAssessmentBaselines == null) {
            this.databaseSqlVulnerabilityAssessmentBaselines = new DatabaseSqlVulnerabilityAssessmentBaselinesImpl(
                clientObject.getDatabaseSqlVulnerabilityAssessmentBaselines(), this);
        }
        return databaseSqlVulnerabilityAssessmentBaselines;
    }

    /**
     * Gets the resource collection API of DatabaseSqlVulnerabilityAssessmentExecuteScans.
     * 
     * @return Resource collection API of DatabaseSqlVulnerabilityAssessmentExecuteScans.
     */
    public DatabaseSqlVulnerabilityAssessmentExecuteScans databaseSqlVulnerabilityAssessmentExecuteScans() {
        if (this.databaseSqlVulnerabilityAssessmentExecuteScans == null) {
            this.databaseSqlVulnerabilityAssessmentExecuteScans
                = new DatabaseSqlVulnerabilityAssessmentExecuteScansImpl(
                    clientObject.getDatabaseSqlVulnerabilityAssessmentExecuteScans(), this);
        }
        return databaseSqlVulnerabilityAssessmentExecuteScans;
    }

    /**
     * Gets the resource collection API of DatabaseSqlVulnerabilityAssessmentRuleBaselines.
     * 
     * @return Resource collection API of DatabaseSqlVulnerabilityAssessmentRuleBaselines.
     */
    public DatabaseSqlVulnerabilityAssessmentRuleBaselines databaseSqlVulnerabilityAssessmentRuleBaselines() {
        if (this.databaseSqlVulnerabilityAssessmentRuleBaselines == null) {
            this.databaseSqlVulnerabilityAssessmentRuleBaselines
                = new DatabaseSqlVulnerabilityAssessmentRuleBaselinesImpl(
                    clientObject.getDatabaseSqlVulnerabilityAssessmentRuleBaselines(), this);
        }
        return databaseSqlVulnerabilityAssessmentRuleBaselines;
    }

    /**
     * Gets the resource collection API of DatabaseSqlVulnerabilityAssessmentScanResults.
     * 
     * @return Resource collection API of DatabaseSqlVulnerabilityAssessmentScanResults.
     */
    public DatabaseSqlVulnerabilityAssessmentScanResults databaseSqlVulnerabilityAssessmentScanResults() {
        if (this.databaseSqlVulnerabilityAssessmentScanResults == null) {
            this.databaseSqlVulnerabilityAssessmentScanResults = new DatabaseSqlVulnerabilityAssessmentScanResultsImpl(
                clientObject.getDatabaseSqlVulnerabilityAssessmentScanResults(), this);
        }
        return databaseSqlVulnerabilityAssessmentScanResults;
    }

    /**
     * Gets the resource collection API of DatabaseSqlVulnerabilityAssessmentScans.
     * 
     * @return Resource collection API of DatabaseSqlVulnerabilityAssessmentScans.
     */
    public DatabaseSqlVulnerabilityAssessmentScans databaseSqlVulnerabilityAssessmentScans() {
        if (this.databaseSqlVulnerabilityAssessmentScans == null) {
            this.databaseSqlVulnerabilityAssessmentScans = new DatabaseSqlVulnerabilityAssessmentScansImpl(
                clientObject.getDatabaseSqlVulnerabilityAssessmentScans(), this);
        }
        return databaseSqlVulnerabilityAssessmentScans;
    }

    /**
     * Gets the resource collection API of DatabaseSqlVulnerabilityAssessmentsSettings.
     * 
     * @return Resource collection API of DatabaseSqlVulnerabilityAssessmentsSettings.
     */
    public DatabaseSqlVulnerabilityAssessmentsSettings databaseSqlVulnerabilityAssessmentsSettings() {
        if (this.databaseSqlVulnerabilityAssessmentsSettings == null) {
            this.databaseSqlVulnerabilityAssessmentsSettings = new DatabaseSqlVulnerabilityAssessmentsSettingsImpl(
                clientObject.getDatabaseSqlVulnerabilityAssessmentsSettings(), this);
        }
        return databaseSqlVulnerabilityAssessmentsSettings;
    }

    /**
     * Gets the resource collection API of Servers. It manages Server.
     * 
     * @return Resource collection API of Servers.
     */
    public Servers servers() {
        if (this.servers == null) {
            this.servers = new ServersImpl(clientObject.getServers(), this);
        }
        return servers;
    }

    /**
     * Gets the resource collection API of FailoverGroups. It manages FailoverGroup.
     * 
     * @return Resource collection API of FailoverGroups.
     */
    public FailoverGroups failoverGroups() {
        if (this.failoverGroups == null) {
            this.failoverGroups = new FailoverGroupsImpl(clientObject.getFailoverGroups(), this);
        }
        return failoverGroups;
    }

    /**
     * Gets the resource collection API of InstancePools. It manages InstancePool.
     * 
     * @return Resource collection API of InstancePools.
     */
    public InstancePools instancePools() {
        if (this.instancePools == null) {
            this.instancePools = new InstancePoolsImpl(clientObject.getInstancePools(), this);
        }
        return instancePools;
    }

    /**
     * Gets the resource collection API of LongTermRetentionBackups.
     * 
     * @return Resource collection API of LongTermRetentionBackups.
     */
    public LongTermRetentionBackups longTermRetentionBackups() {
        if (this.longTermRetentionBackups == null) {
            this.longTermRetentionBackups
                = new LongTermRetentionBackupsImpl(clientObject.getLongTermRetentionBackups(), this);
        }
        return longTermRetentionBackups;
    }

    /**
     * Gets the resource collection API of LongTermRetentionPolicies. It manages LongTermRetentionPolicy.
     * 
     * @return Resource collection API of LongTermRetentionPolicies.
     */
    public LongTermRetentionPolicies longTermRetentionPolicies() {
        if (this.longTermRetentionPolicies == null) {
            this.longTermRetentionPolicies
                = new LongTermRetentionPoliciesImpl(clientObject.getLongTermRetentionPolicies(), this);
        }
        return longTermRetentionPolicies;
    }

    /**
     * Gets wrapped service client SqlManagementClient providing direct access to the underlying auto-generated API
     * implementation, based on Azure REST API.
     * 
     * @return Wrapped service client SqlManagementClient.
     */
    public SqlManagementClient serviceClient() {
        return this.clientObject;
    }
}
