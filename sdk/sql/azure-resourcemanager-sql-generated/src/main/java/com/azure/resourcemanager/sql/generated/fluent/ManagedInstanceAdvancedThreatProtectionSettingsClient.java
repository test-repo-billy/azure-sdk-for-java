// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.sql.generated.fluent.models.ManagedInstanceAdvancedThreatProtectionInner;
import com.azure.resourcemanager.sql.generated.models.AdvancedThreatProtectionName;

/**
 * An instance of this class provides access to all the operations defined in
 * ManagedInstanceAdvancedThreatProtectionSettingsClient.
 */
public interface ManagedInstanceAdvancedThreatProtectionSettingsClient {
    /**
     * Get the managed instance's Advanced Threat Protection settings.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the managed instance's Advanced Threat Protection settings as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ManagedInstanceAdvancedThreatProtectionInner> listByInstance(String resourceGroupName,
        String managedInstanceName);

    /**
     * Get the managed instance's Advanced Threat Protection settings.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the managed instance's Advanced Threat Protection settings as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<ManagedInstanceAdvancedThreatProtectionInner> listByInstance(String resourceGroupName,
        String managedInstanceName, Context context);

    /**
     * Get a managed instance's Advanced Threat Protection state.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a managed instance's Advanced Threat Protection state along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ManagedInstanceAdvancedThreatProtectionInner> getWithResponse(String resourceGroupName,
        String managedInstanceName, AdvancedThreatProtectionName advancedThreatProtectionName, Context context);

    /**
     * Get a managed instance's Advanced Threat Protection state.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a managed instance's Advanced Threat Protection state.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ManagedInstanceAdvancedThreatProtectionInner get(String resourceGroupName, String managedInstanceName,
        AdvancedThreatProtectionName advancedThreatProtectionName);

    /**
     * Creates or updates Advanced Threat Protection settings.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @param parameters The managed instance Advanced Threat Protection state.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a managed instance Advanced Threat Protection.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ManagedInstanceAdvancedThreatProtectionInner>, ManagedInstanceAdvancedThreatProtectionInner>
        beginCreateOrUpdate(String resourceGroupName, String managedInstanceName,
            AdvancedThreatProtectionName advancedThreatProtectionName,
            ManagedInstanceAdvancedThreatProtectionInner parameters);

    /**
     * Creates or updates Advanced Threat Protection settings.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @param parameters The managed instance Advanced Threat Protection state.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of a managed instance Advanced Threat Protection.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ManagedInstanceAdvancedThreatProtectionInner>, ManagedInstanceAdvancedThreatProtectionInner>
        beginCreateOrUpdate(String resourceGroupName, String managedInstanceName,
            AdvancedThreatProtectionName advancedThreatProtectionName,
            ManagedInstanceAdvancedThreatProtectionInner parameters, Context context);

    /**
     * Creates or updates Advanced Threat Protection settings.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @param parameters The managed instance Advanced Threat Protection state.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a managed instance Advanced Threat Protection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ManagedInstanceAdvancedThreatProtectionInner createOrUpdate(String resourceGroupName, String managedInstanceName,
        AdvancedThreatProtectionName advancedThreatProtectionName,
        ManagedInstanceAdvancedThreatProtectionInner parameters);

    /**
     * Creates or updates Advanced Threat Protection settings.
     * 
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value
     * from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param advancedThreatProtectionName The name of the Advanced Threat Protection state.
     * @param parameters The managed instance Advanced Threat Protection state.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a managed instance Advanced Threat Protection.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ManagedInstanceAdvancedThreatProtectionInner createOrUpdate(String resourceGroupName, String managedInstanceName,
        AdvancedThreatProtectionName advancedThreatProtectionName,
        ManagedInstanceAdvancedThreatProtectionInner parameters, Context context);
}
