// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.StartStopManagedInstanceScheduleInner;
import com.azure.resourcemanager.sql.generated.models.ScheduleItem;
import com.azure.resourcemanager.sql.generated.models.StartStopManagedInstanceSchedule;
import com.azure.resourcemanager.sql.generated.models.StartStopScheduleName;
import java.util.Collections;
import java.util.List;

public final class StartStopManagedInstanceScheduleImpl implements StartStopManagedInstanceSchedule,
    StartStopManagedInstanceSchedule.Definition, StartStopManagedInstanceSchedule.Update {
    private StartStopManagedInstanceScheduleInner innerObject;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String description() {
        return this.innerModel().description();
    }

    public String timeZoneId() {
        return this.innerModel().timeZoneId();
    }

    public List<ScheduleItem> scheduleList() {
        List<ScheduleItem> inner = this.innerModel().scheduleList();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String nextRunAction() {
        return this.innerModel().nextRunAction();
    }

    public String nextExecutionTime() {
        return this.innerModel().nextExecutionTime();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public StartStopManagedInstanceScheduleInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String managedInstanceName;

    private StartStopScheduleName startStopScheduleName;

    public StartStopManagedInstanceScheduleImpl withExistingManagedInstance(String resourceGroupName,
        String managedInstanceName) {
        this.resourceGroupName = resourceGroupName;
        this.managedInstanceName = managedInstanceName;
        return this;
    }

    public StartStopManagedInstanceSchedule create() {
        this.innerObject = serviceManager.serviceClient().getStartStopManagedInstanceSchedules()
            .createOrUpdateWithResponse(resourceGroupName, managedInstanceName, startStopScheduleName,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public StartStopManagedInstanceSchedule create(Context context) {
        this.innerObject
            = serviceManager.serviceClient().getStartStopManagedInstanceSchedules().createOrUpdateWithResponse(
                resourceGroupName, managedInstanceName, startStopScheduleName, this.innerModel(), context).getValue();
        return this;
    }

    StartStopManagedInstanceScheduleImpl(StartStopScheduleName name,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = new StartStopManagedInstanceScheduleInner();
        this.serviceManager = serviceManager;
        this.startStopScheduleName = name;
    }

    public StartStopManagedInstanceScheduleImpl update() {
        return this;
    }

    public StartStopManagedInstanceSchedule apply() {
        this.innerObject = serviceManager.serviceClient().getStartStopManagedInstanceSchedules()
            .createOrUpdateWithResponse(resourceGroupName, managedInstanceName, startStopScheduleName,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public StartStopManagedInstanceSchedule apply(Context context) {
        this.innerObject
            = serviceManager.serviceClient().getStartStopManagedInstanceSchedules().createOrUpdateWithResponse(
                resourceGroupName, managedInstanceName, startStopScheduleName, this.innerModel(), context).getValue();
        return this;
    }

    StartStopManagedInstanceScheduleImpl(StartStopManagedInstanceScheduleInner innerObject,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.managedInstanceName = Utils.getValueFromIdByName(innerObject.id(), "managedInstances");
        this.startStopScheduleName
            = StartStopScheduleName.fromString(Utils.getValueFromIdByName(innerObject.id(), "startStopSchedules"));
    }

    public StartStopManagedInstanceSchedule refresh() {
        this.innerObject = serviceManager.serviceClient().getStartStopManagedInstanceSchedules()
            .getWithResponse(resourceGroupName, managedInstanceName, startStopScheduleName, Context.NONE).getValue();
        return this;
    }

    public StartStopManagedInstanceSchedule refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getStartStopManagedInstanceSchedules()
            .getWithResponse(resourceGroupName, managedInstanceName, startStopScheduleName, context).getValue();
        return this;
    }

    public StartStopManagedInstanceScheduleImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public StartStopManagedInstanceScheduleImpl withTimeZoneId(String timeZoneId) {
        this.innerModel().withTimeZoneId(timeZoneId);
        return this;
    }

    public StartStopManagedInstanceScheduleImpl withScheduleList(List<ScheduleItem> scheduleList) {
        this.innerModel().withScheduleList(scheduleList);
        return this;
    }
}
