// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.fluent.ManagedDatabaseMoveOperationsClient;
import com.azure.resourcemanager.sql.generated.fluent.models.ManagedDatabaseMoveOperationResultInner;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseMoveOperationResult;
import com.azure.resourcemanager.sql.generated.models.ManagedDatabaseMoveOperations;
import java.util.UUID;

public final class ManagedDatabaseMoveOperationsImpl implements ManagedDatabaseMoveOperations {
    private static final ClientLogger LOGGER = new ClientLogger(ManagedDatabaseMoveOperationsImpl.class);

    private final ManagedDatabaseMoveOperationsClient innerClient;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public ManagedDatabaseMoveOperationsImpl(ManagedDatabaseMoveOperationsClient innerClient,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<ManagedDatabaseMoveOperationResult> listByLocation(String resourceGroupName,
        String locationName) {
        PagedIterable<ManagedDatabaseMoveOperationResultInner> inner
            = this.serviceClient().listByLocation(resourceGroupName, locationName);
        return Utils.mapPage(inner, inner1 -> new ManagedDatabaseMoveOperationResultImpl(inner1, this.manager()));
    }

    public PagedIterable<ManagedDatabaseMoveOperationResult> listByLocation(String resourceGroupName,
        String locationName, Boolean onlyLatestPerDatabase, String filter, Context context) {
        PagedIterable<ManagedDatabaseMoveOperationResultInner> inner = this.serviceClient()
            .listByLocation(resourceGroupName, locationName, onlyLatestPerDatabase, filter, context);
        return Utils.mapPage(inner, inner1 -> new ManagedDatabaseMoveOperationResultImpl(inner1, this.manager()));
    }

    public Response<ManagedDatabaseMoveOperationResult> getWithResponse(String resourceGroupName, String locationName,
        UUID operationId, Context context) {
        Response<ManagedDatabaseMoveOperationResultInner> inner
            = this.serviceClient().getWithResponse(resourceGroupName, locationName, operationId, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ManagedDatabaseMoveOperationResultImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ManagedDatabaseMoveOperationResult get(String resourceGroupName, String locationName, UUID operationId) {
        ManagedDatabaseMoveOperationResultInner inner
            = this.serviceClient().get(resourceGroupName, locationName, operationId);
        if (inner != null) {
            return new ManagedDatabaseMoveOperationResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ManagedDatabaseMoveOperationsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }
}
