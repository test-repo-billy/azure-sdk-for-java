// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.sql.generated.fluent.DatabaseSqlVulnerabilityAssessmentsSettingsClient;
import com.azure.resourcemanager.sql.generated.fluent.models.SqlVulnerabilityAssessmentInner;
import com.azure.resourcemanager.sql.generated.models.DatabaseSqlVulnerabilityAssessmentsSettings;
import com.azure.resourcemanager.sql.generated.models.SqlVulnerabilityAssessment;
import com.azure.resourcemanager.sql.generated.models.SqlVulnerabilityAssessmentName;

public final class DatabaseSqlVulnerabilityAssessmentsSettingsImpl
    implements DatabaseSqlVulnerabilityAssessmentsSettings {
    private static final ClientLogger LOGGER = new ClientLogger(DatabaseSqlVulnerabilityAssessmentsSettingsImpl.class);

    private final DatabaseSqlVulnerabilityAssessmentsSettingsClient innerClient;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public DatabaseSqlVulnerabilityAssessmentsSettingsImpl(
        DatabaseSqlVulnerabilityAssessmentsSettingsClient innerClient,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<SqlVulnerabilityAssessment> listByDatabase(String resourceGroupName, String serverName,
        String databaseName) {
        PagedIterable<SqlVulnerabilityAssessmentInner> inner
            = this.serviceClient().listByDatabase(resourceGroupName, serverName, databaseName);
        return Utils.mapPage(inner, inner1 -> new SqlVulnerabilityAssessmentImpl(inner1, this.manager()));
    }

    public PagedIterable<SqlVulnerabilityAssessment> listByDatabase(String resourceGroupName, String serverName,
        String databaseName, Context context) {
        PagedIterable<SqlVulnerabilityAssessmentInner> inner
            = this.serviceClient().listByDatabase(resourceGroupName, serverName, databaseName, context);
        return Utils.mapPage(inner, inner1 -> new SqlVulnerabilityAssessmentImpl(inner1, this.manager()));
    }

    public Response<SqlVulnerabilityAssessment> getWithResponse(String resourceGroupName, String serverName,
        String databaseName, SqlVulnerabilityAssessmentName vulnerabilityAssessmentName, Context context) {
        Response<SqlVulnerabilityAssessmentInner> inner = this.serviceClient().getWithResponse(resourceGroupName,
            serverName, databaseName, vulnerabilityAssessmentName, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new SqlVulnerabilityAssessmentImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public SqlVulnerabilityAssessment get(String resourceGroupName, String serverName, String databaseName,
        SqlVulnerabilityAssessmentName vulnerabilityAssessmentName) {
        SqlVulnerabilityAssessmentInner inner
            = this.serviceClient().get(resourceGroupName, serverName, databaseName, vulnerabilityAssessmentName);
        if (inner != null) {
            return new SqlVulnerabilityAssessmentImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private DatabaseSqlVulnerabilityAssessmentsSettingsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }
}
