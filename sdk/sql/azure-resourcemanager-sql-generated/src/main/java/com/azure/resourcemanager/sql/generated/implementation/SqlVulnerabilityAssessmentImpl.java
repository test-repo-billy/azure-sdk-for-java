// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.SqlVulnerabilityAssessmentInner;
import com.azure.resourcemanager.sql.generated.models.SqlVulnerabilityAssessment;
import com.azure.resourcemanager.sql.generated.models.SqlVulnerabilityAssessmentState;
import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentName;

public final class SqlVulnerabilityAssessmentImpl
    implements SqlVulnerabilityAssessment, SqlVulnerabilityAssessment.Definition, SqlVulnerabilityAssessment.Update {
    private SqlVulnerabilityAssessmentInner innerObject;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public SqlVulnerabilityAssessmentState state() {
        return this.innerModel().state();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public SqlVulnerabilityAssessmentInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serverName;

    private VulnerabilityAssessmentName vulnerabilityAssessmentName;

    public SqlVulnerabilityAssessmentImpl withExistingServer(String resourceGroupName, String serverName) {
        this.resourceGroupName = resourceGroupName;
        this.serverName = serverName;
        return this;
    }

    public SqlVulnerabilityAssessment create() {
        this.innerObject
            = serviceManager.serviceClient().getSqlVulnerabilityAssessmentsSettings().createOrUpdateWithResponse(
                resourceGroupName, serverName, vulnerabilityAssessmentName, this.innerModel(), Context.NONE).getValue();
        return this;
    }

    public SqlVulnerabilityAssessment create(Context context) {
        this.innerObject
            = serviceManager.serviceClient().getSqlVulnerabilityAssessmentsSettings().createOrUpdateWithResponse(
                resourceGroupName, serverName, vulnerabilityAssessmentName, this.innerModel(), context).getValue();
        return this;
    }

    SqlVulnerabilityAssessmentImpl(VulnerabilityAssessmentName name,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = new SqlVulnerabilityAssessmentInner();
        this.serviceManager = serviceManager;
        this.vulnerabilityAssessmentName = name;
    }

    public SqlVulnerabilityAssessmentImpl update() {
        return this;
    }

    public SqlVulnerabilityAssessment apply() {
        this.innerObject
            = serviceManager.serviceClient().getSqlVulnerabilityAssessmentsSettings().createOrUpdateWithResponse(
                resourceGroupName, serverName, vulnerabilityAssessmentName, this.innerModel(), Context.NONE).getValue();
        return this;
    }

    public SqlVulnerabilityAssessment apply(Context context) {
        this.innerObject
            = serviceManager.serviceClient().getSqlVulnerabilityAssessmentsSettings().createOrUpdateWithResponse(
                resourceGroupName, serverName, vulnerabilityAssessmentName, this.innerModel(), context).getValue();
        return this;
    }

    SqlVulnerabilityAssessmentImpl(SqlVulnerabilityAssessmentInner innerObject,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serverName = Utils.getValueFromIdByName(innerObject.id(), "servers");
        this.vulnerabilityAssessmentName = VulnerabilityAssessmentName
            .fromString(Utils.getValueFromIdByName(innerObject.id(), "sqlVulnerabilityAssessments"));
    }

    public SqlVulnerabilityAssessment refresh() {
        this.innerObject = serviceManager.serviceClient().getSqlVulnerabilityAssessmentsSettings()
            .getWithResponse(resourceGroupName, serverName, vulnerabilityAssessmentName, Context.NONE).getValue();
        return this;
    }

    public SqlVulnerabilityAssessment refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getSqlVulnerabilityAssessmentsSettings()
            .getWithResponse(resourceGroupName, serverName, vulnerabilityAssessmentName, context).getValue();
        return this;
    }

    public SqlVulnerabilityAssessmentImpl withState(SqlVulnerabilityAssessmentState state) {
        this.innerModel().withState(state);
        return this;
    }
}
