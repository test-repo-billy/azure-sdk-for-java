// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseSqlVulnerabilityAssessmentBaselineSetInner;
import com.azure.resourcemanager.sql.generated.models.BaselineName;
import com.azure.resourcemanager.sql.generated.models.DatabaseSqlVulnerabilityAssessmentBaselineSet;
import com.azure.resourcemanager.sql.generated.models.DatabaseSqlVulnerabilityAssessmentRuleBaselineListInput;
import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentName;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class DatabaseSqlVulnerabilityAssessmentBaselineSetImpl
    implements DatabaseSqlVulnerabilityAssessmentBaselineSet, DatabaseSqlVulnerabilityAssessmentBaselineSet.Definition,
    DatabaseSqlVulnerabilityAssessmentBaselineSet.Update {
    private DatabaseSqlVulnerabilityAssessmentBaselineSetInner innerObject;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public Map<String, List<List<String>>> results() {
        Map<String, List<List<String>>> inner = this.innerModel().results();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DatabaseSqlVulnerabilityAssessmentBaselineSetInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serverName;

    private VulnerabilityAssessmentName vulnerabilityAssessmentName;

    private BaselineName baselineName;

    private DatabaseSqlVulnerabilityAssessmentRuleBaselineListInput createParameters;

    private DatabaseSqlVulnerabilityAssessmentRuleBaselineListInput updateParameters;

    public DatabaseSqlVulnerabilityAssessmentBaselineSetImpl withExistingSqlVulnerabilityAssessment(
        String resourceGroupName, String serverName, VulnerabilityAssessmentName vulnerabilityAssessmentName) {
        this.resourceGroupName = resourceGroupName;
        this.serverName = serverName;
        this.vulnerabilityAssessmentName = vulnerabilityAssessmentName;
        return this;
    }

    public DatabaseSqlVulnerabilityAssessmentBaselineSet create() {
        this.innerObject = serviceManager.serviceClient().getSqlVulnerabilityAssessmentBaselinesOperations()
            .createOrUpdateWithResponse(resourceGroupName, serverName, vulnerabilityAssessmentName, baselineName,
                createParameters, Context.NONE)
            .getValue();
        return this;
    }

    public DatabaseSqlVulnerabilityAssessmentBaselineSet create(Context context) {
        this.innerObject = serviceManager.serviceClient().getSqlVulnerabilityAssessmentBaselinesOperations()
            .createOrUpdateWithResponse(resourceGroupName, serverName, vulnerabilityAssessmentName, baselineName,
                createParameters, context)
            .getValue();
        return this;
    }

    DatabaseSqlVulnerabilityAssessmentBaselineSetImpl(BaselineName name,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = new DatabaseSqlVulnerabilityAssessmentBaselineSetInner();
        this.serviceManager = serviceManager;
        this.baselineName = name;
        this.createParameters = new DatabaseSqlVulnerabilityAssessmentRuleBaselineListInput();
    }

    public DatabaseSqlVulnerabilityAssessmentBaselineSetImpl update() {
        this.updateParameters = new DatabaseSqlVulnerabilityAssessmentRuleBaselineListInput();
        return this;
    }

    public DatabaseSqlVulnerabilityAssessmentBaselineSet apply() {
        this.innerObject = serviceManager.serviceClient().getSqlVulnerabilityAssessmentBaselinesOperations()
            .createOrUpdateWithResponse(resourceGroupName, serverName, vulnerabilityAssessmentName, baselineName,
                updateParameters, Context.NONE)
            .getValue();
        return this;
    }

    public DatabaseSqlVulnerabilityAssessmentBaselineSet apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getSqlVulnerabilityAssessmentBaselinesOperations()
            .createOrUpdateWithResponse(resourceGroupName, serverName, vulnerabilityAssessmentName, baselineName,
                updateParameters, context)
            .getValue();
        return this;
    }

    DatabaseSqlVulnerabilityAssessmentBaselineSetImpl(DatabaseSqlVulnerabilityAssessmentBaselineSetInner innerObject,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serverName = Utils.getValueFromIdByName(innerObject.id(), "servers");
        this.vulnerabilityAssessmentName = VulnerabilityAssessmentName
            .fromString(Utils.getValueFromIdByName(innerObject.id(), "sqlVulnerabilityAssessments"));
        this.baselineName = BaselineName.fromString(Utils.getValueFromIdByName(innerObject.id(), "baselines"));
    }

    public DatabaseSqlVulnerabilityAssessmentBaselineSetImpl withLatestScan(boolean latestScan) {
        if (isInCreateMode()) {
            this.createParameters.withLatestScan(latestScan);
            return this;
        } else {
            this.updateParameters.withLatestScan(latestScan);
            return this;
        }
    }

    public DatabaseSqlVulnerabilityAssessmentBaselineSetImpl withResults(Map<String, List<List<String>>> results) {
        if (isInCreateMode()) {
            this.createParameters.withResults(results);
            return this;
        } else {
            this.updateParameters.withResults(results);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
