// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.ServerConfigurationOptionInner;
import com.azure.resourcemanager.sql.generated.models.ProvisioningState;
import com.azure.resourcemanager.sql.generated.models.ServerConfigurationOption;
import com.azure.resourcemanager.sql.generated.models.ServerConfigurationOptionName;

public final class ServerConfigurationOptionImpl
    implements ServerConfigurationOption, ServerConfigurationOption.Definition, ServerConfigurationOption.Update {
    private ServerConfigurationOptionInner innerObject;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public int serverConfigurationOptionValue() {
        return this.innerModel().serverConfigurationOptionValue();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ServerConfigurationOptionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String managedInstanceName;

    private ServerConfigurationOptionName serverConfigurationOptionName;

    public ServerConfigurationOptionImpl withExistingManagedInstance(String resourceGroupName,
        String managedInstanceName) {
        this.resourceGroupName = resourceGroupName;
        this.managedInstanceName = managedInstanceName;
        return this;
    }

    public ServerConfigurationOption create() {
        this.innerObject = serviceManager.serviceClient().getServerConfigurationOptions().createOrUpdate(
            resourceGroupName, managedInstanceName, serverConfigurationOptionName, this.innerModel(), Context.NONE);
        return this;
    }

    public ServerConfigurationOption create(Context context) {
        this.innerObject = serviceManager.serviceClient().getServerConfigurationOptions().createOrUpdate(
            resourceGroupName, managedInstanceName, serverConfigurationOptionName, this.innerModel(), context);
        return this;
    }

    ServerConfigurationOptionImpl(ServerConfigurationOptionName name,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = new ServerConfigurationOptionInner();
        this.serviceManager = serviceManager;
        this.serverConfigurationOptionName = name;
    }

    public ServerConfigurationOptionImpl update() {
        return this;
    }

    public ServerConfigurationOption apply() {
        this.innerObject = serviceManager.serviceClient().getServerConfigurationOptions().createOrUpdate(
            resourceGroupName, managedInstanceName, serverConfigurationOptionName, this.innerModel(), Context.NONE);
        return this;
    }

    public ServerConfigurationOption apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getServerConfigurationOptions().createOrUpdate(
            resourceGroupName, managedInstanceName, serverConfigurationOptionName, this.innerModel(), context);
        return this;
    }

    ServerConfigurationOptionImpl(ServerConfigurationOptionInner innerObject,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.managedInstanceName = Utils.getValueFromIdByName(innerObject.id(), "managedInstances");
        this.serverConfigurationOptionName = ServerConfigurationOptionName
            .fromString(Utils.getValueFromIdByName(innerObject.id(), "serverConfigurationOptions"));
    }

    public ServerConfigurationOption refresh() {
        this.innerObject = serviceManager.serviceClient().getServerConfigurationOptions()
            .getWithResponse(resourceGroupName, managedInstanceName, serverConfigurationOptionName, Context.NONE)
            .getValue();
        return this;
    }

    public ServerConfigurationOption refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getServerConfigurationOptions()
            .getWithResponse(resourceGroupName, managedInstanceName, serverConfigurationOptionName, context).getValue();
        return this;
    }

    public ServerConfigurationOptionImpl withServerConfigurationOptionValue(int serverConfigurationOptionValue) {
        this.innerModel().withServerConfigurationOptionValue(serverConfigurationOptionValue);
        return this;
    }
}
