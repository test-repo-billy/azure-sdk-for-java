// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.sql.generated.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.sql.generated.fluent.models.DatabaseSqlVulnerabilityAssessmentRuleBaselineInner;
import com.azure.resourcemanager.sql.generated.models.BaselineName;
import com.azure.resourcemanager.sql.generated.models.DatabaseSqlVulnerabilityAssessmentRuleBaseline;
import com.azure.resourcemanager.sql.generated.models.DatabaseSqlVulnerabilityAssessmentRuleBaselineInput;
import com.azure.resourcemanager.sql.generated.models.VulnerabilityAssessmentName;
import java.util.Collections;
import java.util.List;

public final class DatabaseSqlVulnerabilityAssessmentRuleBaselineImpl
    implements DatabaseSqlVulnerabilityAssessmentRuleBaseline,
    DatabaseSqlVulnerabilityAssessmentRuleBaseline.Definition, DatabaseSqlVulnerabilityAssessmentRuleBaseline.Update {
    private DatabaseSqlVulnerabilityAssessmentRuleBaselineInner innerObject;

    private final com.azure.resourcemanager.sql.generated.SqlManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public List<List<String>> results() {
        List<List<String>> inner = this.innerModel().results();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DatabaseSqlVulnerabilityAssessmentRuleBaselineInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.sql.generated.SqlManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serverName;

    private VulnerabilityAssessmentName vulnerabilityAssessmentName;

    private BaselineName baselineName;

    private String ruleId;

    private DatabaseSqlVulnerabilityAssessmentRuleBaselineInput createParameters;

    private DatabaseSqlVulnerabilityAssessmentRuleBaselineInput updateParameters;

    public DatabaseSqlVulnerabilityAssessmentRuleBaselineImpl withExistingBaseline(String resourceGroupName,
        String serverName, VulnerabilityAssessmentName vulnerabilityAssessmentName, BaselineName baselineName) {
        this.resourceGroupName = resourceGroupName;
        this.serverName = serverName;
        this.vulnerabilityAssessmentName = vulnerabilityAssessmentName;
        this.baselineName = baselineName;
        return this;
    }

    public DatabaseSqlVulnerabilityAssessmentRuleBaseline create() {
        this.innerObject = serviceManager
            .serviceClient().getSqlVulnerabilityAssessmentRuleBaselines().createOrUpdateWithResponse(resourceGroupName,
                serverName, vulnerabilityAssessmentName, baselineName, ruleId, createParameters, Context.NONE)
            .getValue();
        return this;
    }

    public DatabaseSqlVulnerabilityAssessmentRuleBaseline create(Context context) {
        this.innerObject = serviceManager.serviceClient().getSqlVulnerabilityAssessmentRuleBaselines()
            .createOrUpdateWithResponse(resourceGroupName, serverName, vulnerabilityAssessmentName, baselineName,
                ruleId, createParameters, context)
            .getValue();
        return this;
    }

    DatabaseSqlVulnerabilityAssessmentRuleBaselineImpl(String name,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = new DatabaseSqlVulnerabilityAssessmentRuleBaselineInner();
        this.serviceManager = serviceManager;
        this.ruleId = name;
        this.createParameters = new DatabaseSqlVulnerabilityAssessmentRuleBaselineInput();
    }

    public DatabaseSqlVulnerabilityAssessmentRuleBaselineImpl update() {
        this.updateParameters = new DatabaseSqlVulnerabilityAssessmentRuleBaselineInput();
        return this;
    }

    public DatabaseSqlVulnerabilityAssessmentRuleBaseline apply() {
        this.innerObject = serviceManager
            .serviceClient().getSqlVulnerabilityAssessmentRuleBaselines().createOrUpdateWithResponse(resourceGroupName,
                serverName, vulnerabilityAssessmentName, baselineName, ruleId, updateParameters, Context.NONE)
            .getValue();
        return this;
    }

    public DatabaseSqlVulnerabilityAssessmentRuleBaseline apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getSqlVulnerabilityAssessmentRuleBaselines()
            .createOrUpdateWithResponse(resourceGroupName, serverName, vulnerabilityAssessmentName, baselineName,
                ruleId, updateParameters, context)
            .getValue();
        return this;
    }

    DatabaseSqlVulnerabilityAssessmentRuleBaselineImpl(DatabaseSqlVulnerabilityAssessmentRuleBaselineInner innerObject,
        com.azure.resourcemanager.sql.generated.SqlManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serverName = Utils.getValueFromIdByName(innerObject.id(), "servers");
        this.vulnerabilityAssessmentName = VulnerabilityAssessmentName
            .fromString(Utils.getValueFromIdByName(innerObject.id(), "sqlVulnerabilityAssessments"));
        this.baselineName = BaselineName.fromString(Utils.getValueFromIdByName(innerObject.id(), "baselines"));
        this.ruleId = Utils.getValueFromIdByName(innerObject.id(), "rules");
    }

    public DatabaseSqlVulnerabilityAssessmentRuleBaseline refresh() {
        this.innerObject = serviceManager.serviceClient().getSqlVulnerabilityAssessmentRuleBaselines().getWithResponse(
            resourceGroupName, serverName, vulnerabilityAssessmentName, baselineName, ruleId, Context.NONE).getValue();
        return this;
    }

    public DatabaseSqlVulnerabilityAssessmentRuleBaseline refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getSqlVulnerabilityAssessmentRuleBaselines()
            .getWithResponse(resourceGroupName, serverName, vulnerabilityAssessmentName, baselineName, ruleId, context)
            .getValue();
        return this;
    }

    public DatabaseSqlVulnerabilityAssessmentRuleBaselineImpl withLatestScan(boolean latestScan) {
        if (isInCreateMode()) {
            this.createParameters.withLatestScan(latestScan);
            return this;
        } else {
            this.updateParameters.withLatestScan(latestScan);
            return this;
        }
    }

    public DatabaseSqlVulnerabilityAssessmentRuleBaselineImpl withResults(List<List<String>> results) {
        if (isInCreateMode()) {
            this.createParameters.withResults(results);
            return this;
        } else {
            this.updateParameters.withResults(results);
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
