// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicelinker.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.resourcemanager.servicelinker.models.DryrunOperationPreview;
import com.azure.resourcemanager.servicelinker.models.DryrunParameters;
import com.azure.resourcemanager.servicelinker.models.DryrunPrerequisiteResult;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * The properties of the dryrun job.
 */
@Fluent
public final class DryrunProperties {
    /*
     * The parameters of the dryrun
     */
    @JsonProperty(value = "parameters")
    private DryrunParameters parameters;

    /*
     * the result of the dryrun
     */
    @JsonProperty(value = "prerequisiteResults", access = JsonProperty.Access.WRITE_ONLY)
    private List<DryrunPrerequisiteResult> prerequisiteResults;

    /*
     * the preview of the operations for creation
     */
    @JsonProperty(value = "operationPreviews", access = JsonProperty.Access.WRITE_ONLY)
    private List<DryrunOperationPreview> operationPreviews;

    /*
     * The provisioning state.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private String provisioningState;

    /**
     * Creates an instance of DryrunProperties class.
     */
    public DryrunProperties() {
    }

    /**
     * Get the parameters property: The parameters of the dryrun.
     * 
     * @return the parameters value.
     */
    public DryrunParameters parameters() {
        return this.parameters;
    }

    /**
     * Set the parameters property: The parameters of the dryrun.
     * 
     * @param parameters the parameters value to set.
     * @return the DryrunProperties object itself.
     */
    public DryrunProperties withParameters(DryrunParameters parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Get the prerequisiteResults property: the result of the dryrun.
     * 
     * @return the prerequisiteResults value.
     */
    public List<DryrunPrerequisiteResult> prerequisiteResults() {
        return this.prerequisiteResults;
    }

    /**
     * Get the operationPreviews property: the preview of the operations for creation.
     * 
     * @return the operationPreviews value.
     */
    public List<DryrunOperationPreview> operationPreviews() {
        return this.operationPreviews;
    }

    /**
     * Get the provisioningState property: The provisioning state.
     * 
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (parameters() != null) {
            parameters().validate();
        }
        if (prerequisiteResults() != null) {
            prerequisiteResults().forEach(e -> e.validate());
        }
        if (operationPreviews() != null) {
            operationPreviews().forEach(e -> e.validate());
        }
    }
}
