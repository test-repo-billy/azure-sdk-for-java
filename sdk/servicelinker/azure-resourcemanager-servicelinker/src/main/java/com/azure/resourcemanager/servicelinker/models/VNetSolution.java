// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicelinker.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The VNet solution for linker.
 */
@Fluent
public final class VNetSolution {
    /*
     * Type of VNet solution.
     */
    @JsonProperty(value = "type")
    private VNetSolutionType type;

    /*
     * Indicates whether to clean up previous operation when Linker is updating or deleting
     */
    @JsonProperty(value = "deleteOrUpdateBehavior")
    private DeleteOrUpdateBehavior deleteOrUpdateBehavior;

    /**
     * Creates an instance of VNetSolution class.
     */
    public VNetSolution() {
    }

    /**
     * Get the type property: Type of VNet solution.
     * 
     * @return the type value.
     */
    public VNetSolutionType type() {
        return this.type;
    }

    /**
     * Set the type property: Type of VNet solution.
     * 
     * @param type the type value to set.
     * @return the VNetSolution object itself.
     */
    public VNetSolution withType(VNetSolutionType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the deleteOrUpdateBehavior property: Indicates whether to clean up previous operation when Linker is updating
     * or deleting.
     * 
     * @return the deleteOrUpdateBehavior value.
     */
    public DeleteOrUpdateBehavior deleteOrUpdateBehavior() {
        return this.deleteOrUpdateBehavior;
    }

    /**
     * Set the deleteOrUpdateBehavior property: Indicates whether to clean up previous operation when Linker is updating
     * or deleting.
     * 
     * @param deleteOrUpdateBehavior the deleteOrUpdateBehavior value to set.
     * @return the VNetSolution object itself.
     */
    public VNetSolution withDeleteOrUpdateBehavior(DeleteOrUpdateBehavior deleteOrUpdateBehavior) {
        this.deleteOrUpdateBehavior = deleteOrUpdateBehavior;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
