// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicelinker.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * A configuration item for source resource.
 */
@Fluent
public final class SourceConfiguration {
    /*
     * The name of setting.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * The value of setting
     */
    @JsonProperty(value = "value")
    private String value;

    /*
     * The type of setting
     */
    @JsonProperty(value = "configType", access = JsonProperty.Access.WRITE_ONLY)
    private LinkerConfigurationType configType;

    /*
     * The identity for key vault reference, system or user-assigned managed identity ID
     */
    @JsonProperty(value = "keyVaultReferenceIdentity")
    private String keyVaultReferenceIdentity;

    /*
     * Descriptive information for the configuration
     */
    @JsonProperty(value = "description")
    private String description;

    /**
     * Creates an instance of SourceConfiguration class.
     */
    public SourceConfiguration() {
    }

    /**
     * Get the name property: The name of setting.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of setting.
     * 
     * @param name the name value to set.
     * @return the SourceConfiguration object itself.
     */
    public SourceConfiguration withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the value property: The value of setting.
     * 
     * @return the value value.
     */
    public String value() {
        return this.value;
    }

    /**
     * Set the value property: The value of setting.
     * 
     * @param value the value value to set.
     * @return the SourceConfiguration object itself.
     */
    public SourceConfiguration withValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * Get the configType property: The type of setting.
     * 
     * @return the configType value.
     */
    public LinkerConfigurationType configType() {
        return this.configType;
    }

    /**
     * Get the keyVaultReferenceIdentity property: The identity for key vault reference, system or user-assigned managed
     * identity ID.
     * 
     * @return the keyVaultReferenceIdentity value.
     */
    public String keyVaultReferenceIdentity() {
        return this.keyVaultReferenceIdentity;
    }

    /**
     * Set the keyVaultReferenceIdentity property: The identity for key vault reference, system or user-assigned managed
     * identity ID.
     * 
     * @param keyVaultReferenceIdentity the keyVaultReferenceIdentity value to set.
     * @return the SourceConfiguration object itself.
     */
    public SourceConfiguration withKeyVaultReferenceIdentity(String keyVaultReferenceIdentity) {
        this.keyVaultReferenceIdentity = keyVaultReferenceIdentity;
        return this;
    }

    /**
     * Get the description property: Descriptive information for the configuration.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Descriptive information for the configuration.
     * 
     * @param description the description value to set.
     * @return the SourceConfiguration object itself.
     */
    public SourceConfiguration withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
