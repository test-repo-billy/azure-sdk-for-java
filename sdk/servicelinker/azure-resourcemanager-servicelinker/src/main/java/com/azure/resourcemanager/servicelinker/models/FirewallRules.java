// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicelinker.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Target service's firewall rules. to allow connections from source service.
 */
@Fluent
public final class FirewallRules {
    /*
     * This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed
     * list of client IPs for a given database account.
     */
    @JsonProperty(value = "ipRanges")
    private List<String> ipRanges;

    /*
     * Allow Azure services to access the target service if true.
     */
    @JsonProperty(value = "azureServices")
    private AllowType azureServices;

    /*
     * Allow caller client IP to access the target service if true. the property is used when connecting local
     * application to target service.
     */
    @JsonProperty(value = "callerClientIP")
    private AllowType callerClientIp;

    /**
     * Creates an instance of FirewallRules class.
     */
    public FirewallRules() {
    }

    /**
     * Get the ipRanges property: This value specifies the set of IP addresses or IP address ranges in CIDR form to be
     * included as the allowed list of client IPs for a given database account.
     * 
     * @return the ipRanges value.
     */
    public List<String> ipRanges() {
        return this.ipRanges;
    }

    /**
     * Set the ipRanges property: This value specifies the set of IP addresses or IP address ranges in CIDR form to be
     * included as the allowed list of client IPs for a given database account.
     * 
     * @param ipRanges the ipRanges value to set.
     * @return the FirewallRules object itself.
     */
    public FirewallRules withIpRanges(List<String> ipRanges) {
        this.ipRanges = ipRanges;
        return this;
    }

    /**
     * Get the azureServices property: Allow Azure services to access the target service if true.
     * 
     * @return the azureServices value.
     */
    public AllowType azureServices() {
        return this.azureServices;
    }

    /**
     * Set the azureServices property: Allow Azure services to access the target service if true.
     * 
     * @param azureServices the azureServices value to set.
     * @return the FirewallRules object itself.
     */
    public FirewallRules withAzureServices(AllowType azureServices) {
        this.azureServices = azureServices;
        return this;
    }

    /**
     * Get the callerClientIp property: Allow caller client IP to access the target service if true. the property is
     * used when connecting local application to target service.
     * 
     * @return the callerClientIp value.
     */
    public AllowType callerClientIp() {
        return this.callerClientIp;
    }

    /**
     * Set the callerClientIp property: Allow caller client IP to access the target service if true. the property is
     * used when connecting local application to target service.
     * 
     * @param callerClientIp the callerClientIp value to set.
     * @return the FirewallRules object itself.
     */
    public FirewallRules withCallerClientIp(AllowType callerClientIp) {
        this.callerClientIp = callerClientIp;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
