// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicelinker.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Indicates public network solution, include firewall rules.
 */
@Fluent
public final class PublicNetworkSolution {
    /*
     * Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting
     */
    @JsonProperty(value = "deleteOrUpdateBehavior")
    private DeleteOrUpdateBehavior deleteOrUpdateBehavior;

    /*
     * Optional. Indicates public network solution. If enable, enable public network access of target service with best
     * try. Default is enable. If optOut, opt out public network access configuration.
     */
    @JsonProperty(value = "action")
    private ActionType action;

    /*
     * Describe firewall rules of target service to make sure source application could connect to the target.
     */
    @JsonProperty(value = "firewallRules")
    private FirewallRules firewallRules;

    /**
     * Creates an instance of PublicNetworkSolution class.
     */
    public PublicNetworkSolution() {
    }

    /**
     * Get the deleteOrUpdateBehavior property: Indicates whether to clean up previous operation(such as firewall
     * rules) when Linker is updating or deleting.
     * 
     * @return the deleteOrUpdateBehavior value.
     */
    public DeleteOrUpdateBehavior deleteOrUpdateBehavior() {
        return this.deleteOrUpdateBehavior;
    }

    /**
     * Set the deleteOrUpdateBehavior property: Indicates whether to clean up previous operation(such as firewall
     * rules) when Linker is updating or deleting.
     * 
     * @param deleteOrUpdateBehavior the deleteOrUpdateBehavior value to set.
     * @return the PublicNetworkSolution object itself.
     */
    public PublicNetworkSolution withDeleteOrUpdateBehavior(DeleteOrUpdateBehavior deleteOrUpdateBehavior) {
        this.deleteOrUpdateBehavior = deleteOrUpdateBehavior;
        return this;
    }

    /**
     * Get the action property: Optional. Indicates public network solution. If enable, enable public network access of
     * target service with best try. Default is enable. If optOut, opt out public network access configuration.
     * 
     * @return the action value.
     */
    public ActionType action() {
        return this.action;
    }

    /**
     * Set the action property: Optional. Indicates public network solution. If enable, enable public network access of
     * target service with best try. Default is enable. If optOut, opt out public network access configuration.
     * 
     * @param action the action value to set.
     * @return the PublicNetworkSolution object itself.
     */
    public PublicNetworkSolution withAction(ActionType action) {
        this.action = action;
        return this;
    }

    /**
     * Get the firewallRules property: Describe firewall rules of target service to make sure source application could
     * connect to the target.
     * 
     * @return the firewallRules value.
     */
    public FirewallRules firewallRules() {
        return this.firewallRules;
    }

    /**
     * Set the firewallRules property: Describe firewall rules of target service to make sure source application could
     * connect to the target.
     * 
     * @param firewallRules the firewallRules value to set.
     * @return the PublicNetworkSolution object itself.
     */
    public PublicNetworkSolution withFirewallRules(FirewallRules firewallRules) {
        this.firewallRules = firewallRules;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (firewallRules() != null) {
            firewallRules().validate();
        }
    }
}
