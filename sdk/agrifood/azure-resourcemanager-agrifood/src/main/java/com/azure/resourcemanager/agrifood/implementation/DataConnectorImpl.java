// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.agrifood.fluent.models.DataConnectorInner;
import com.azure.resourcemanager.agrifood.models.DataConnector;
import com.azure.resourcemanager.agrifood.models.DataConnectorProperties;

public final class DataConnectorImpl implements DataConnector, DataConnector.Definition, DataConnector.Update {
    private DataConnectorInner innerObject;

    private final com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public DataConnectorProperties properties() {
        return this.innerModel().properties();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public DataConnectorInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.agrifood.AgriFoodManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String dataManagerForAgricultureResourceName;

    private String dataConnectorName;

    public DataConnectorImpl withExistingFarmBeat(String resourceGroupName,
        String dataManagerForAgricultureResourceName) {
        this.resourceGroupName = resourceGroupName;
        this.dataManagerForAgricultureResourceName = dataManagerForAgricultureResourceName;
        return this;
    }

    public DataConnector create() {
        this.innerObject = serviceManager.serviceClient()
            .getDataConnectors()
            .createOrUpdateWithResponse(resourceGroupName, dataManagerForAgricultureResourceName, dataConnectorName,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public DataConnector create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getDataConnectors()
            .createOrUpdateWithResponse(resourceGroupName, dataManagerForAgricultureResourceName, dataConnectorName,
                this.innerModel(), context)
            .getValue();
        return this;
    }

    DataConnectorImpl(String name, com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager) {
        this.innerObject = new DataConnectorInner();
        this.serviceManager = serviceManager;
        this.dataConnectorName = name;
    }

    public DataConnectorImpl update() {
        return this;
    }

    public DataConnector apply() {
        this.innerObject = serviceManager.serviceClient()
            .getDataConnectors()
            .createOrUpdateWithResponse(resourceGroupName, dataManagerForAgricultureResourceName, dataConnectorName,
                this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public DataConnector apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getDataConnectors()
            .createOrUpdateWithResponse(resourceGroupName, dataManagerForAgricultureResourceName, dataConnectorName,
                this.innerModel(), context)
            .getValue();
        return this;
    }

    DataConnectorImpl(DataConnectorInner innerObject,
        com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.dataManagerForAgricultureResourceName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "farmBeats");
        this.dataConnectorName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "dataConnectors");
    }

    public DataConnector refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getDataConnectors()
            .getWithResponse(resourceGroupName, dataManagerForAgricultureResourceName, dataConnectorName, Context.NONE)
            .getValue();
        return this;
    }

    public DataConnector refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getDataConnectors()
            .getWithResponse(resourceGroupName, dataManagerForAgricultureResourceName, dataConnectorName, context)
            .getValue();
        return this;
    }

    public DataConnectorImpl withProperties(DataConnectorProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
