// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.agrifood.fluent.DataManagerForAgricultureExtensionsClient;
import com.azure.resourcemanager.agrifood.fluent.models.DataManagerForAgricultureExtensionInner;
import com.azure.resourcemanager.agrifood.models.DataManagerForAgricultureExtension;
import com.azure.resourcemanager.agrifood.models.DataManagerForAgricultureExtensions;
import java.util.List;

public final class DataManagerForAgricultureExtensionsImpl implements DataManagerForAgricultureExtensions {
    private static final ClientLogger LOGGER = new ClientLogger(DataManagerForAgricultureExtensionsImpl.class);

    private final DataManagerForAgricultureExtensionsClient innerClient;

    private final com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager;

    public DataManagerForAgricultureExtensionsImpl(DataManagerForAgricultureExtensionsClient innerClient,
        com.azure.resourcemanager.agrifood.AgriFoodManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public PagedIterable<DataManagerForAgricultureExtension> list() {
        PagedIterable<DataManagerForAgricultureExtensionInner> inner = this.serviceClient().list();
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new DataManagerForAgricultureExtensionImpl(inner1, this.manager()));
    }

    public PagedIterable<DataManagerForAgricultureExtension> list(List<String> farmBeatsExtensionIds,
        List<String> farmBeatsExtensionNames, List<String> extensionCategories, List<String> publisherIds,
        Integer maxPageSize, Context context) {
        PagedIterable<DataManagerForAgricultureExtensionInner> inner = this.serviceClient()
            .list(farmBeatsExtensionIds, farmBeatsExtensionNames, extensionCategories, publisherIds, maxPageSize,
                context);
        return ResourceManagerUtils.mapPage(inner,
            inner1 -> new DataManagerForAgricultureExtensionImpl(inner1, this.manager()));
    }

    public Response<DataManagerForAgricultureExtension> getWithResponse(String dataManagerForAgricultureExtensionId,
        Context context) {
        Response<DataManagerForAgricultureExtensionInner> inner
            = this.serviceClient().getWithResponse(dataManagerForAgricultureExtensionId, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new DataManagerForAgricultureExtensionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public DataManagerForAgricultureExtension get(String dataManagerForAgricultureExtensionId) {
        DataManagerForAgricultureExtensionInner inner = this.serviceClient().get(dataManagerForAgricultureExtensionId);
        if (inner != null) {
            return new DataManagerForAgricultureExtensionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private DataManagerForAgricultureExtensionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.agrifood.AgriFoodManager manager() {
        return this.serviceManager;
    }
}
