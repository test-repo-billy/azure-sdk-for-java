// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeId;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * OAuthClientCredentials for clientId clientSecret auth.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "kind", defaultImpl = OAuthClientCredentials.class, visible = true)
@JsonTypeName("OAuthClientCredentials")
@Fluent
public final class OAuthClientCredentials extends AuthCredentials {
    /*
     * Enum for different types of AuthCredentials supported.
     */
    @JsonTypeId
    @JsonProperty(value = "kind", required = true)
    private AuthCredentialsKind kind = AuthCredentialsKind.OAUTH_CLIENT_CREDENTIALS;

    /*
     * ClientId associated with the provider.
     */
    @JsonProperty(value = "clientId", required = true)
    private String clientId;

    /*
     * Properties of the key vault.
     */
    @JsonProperty(value = "clientSecret", required = true)
    private KeyVaultProperties clientSecret;

    /**
     * Creates an instance of OAuthClientCredentials class.
     */
    public OAuthClientCredentials() {
    }

    /**
     * Get the kind property: Enum for different types of AuthCredentials supported.
     * 
     * @return the kind value.
     */
    @Override
    public AuthCredentialsKind kind() {
        return this.kind;
    }

    /**
     * Get the clientId property: ClientId associated with the provider.
     * 
     * @return the clientId value.
     */
    public String clientId() {
        return this.clientId;
    }

    /**
     * Set the clientId property: ClientId associated with the provider.
     * 
     * @param clientId the clientId value to set.
     * @return the OAuthClientCredentials object itself.
     */
    public OAuthClientCredentials withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Get the clientSecret property: Properties of the key vault.
     * 
     * @return the clientSecret value.
     */
    public KeyVaultProperties clientSecret() {
        return this.clientSecret;
    }

    /**
     * Set the clientSecret property: Properties of the key vault.
     * 
     * @param clientSecret the clientSecret value to set.
     * @return the OAuthClientCredentials object itself.
     */
    public OAuthClientCredentials withClientSecret(KeyVaultProperties clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (clientId() == null) {
            throw LOGGER.atError()
                .log(
                    new IllegalArgumentException("Missing required property clientId in model OAuthClientCredentials"));
        }
        if (clientSecret() == null) {
            throw LOGGER.atError()
                .log(new IllegalArgumentException(
                    "Missing required property clientSecret in model OAuthClientCredentials"));
        } else {
            clientSecret().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(OAuthClientCredentials.class);
}
