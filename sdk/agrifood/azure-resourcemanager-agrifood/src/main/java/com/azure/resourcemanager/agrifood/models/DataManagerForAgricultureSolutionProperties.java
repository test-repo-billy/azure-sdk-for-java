// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * DataManagerForAgricultureSolution properties.
 */
@Fluent
public final class DataManagerForAgricultureSolutionProperties {
    /*
     * Solution Partner Id.
     */
    @JsonProperty(value = "partnerId", access = JsonProperty.Access.WRITE_ONLY)
    private String partnerId;

    /*
     * Solution Partner Tenant Id.
     */
    @JsonProperty(value = "partnerTenantId", access = JsonProperty.Access.WRITE_ONLY)
    private String partnerTenantId;

    /*
     * Gets scope of the Data manager For Agriculture data access that's required for processing solution request to partner.
     * Example: For gdd they might need weatherScope and satelliteScope.
     */
    @JsonProperty(value = "dataAccessScopes", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> dataAccessScopes;

    /*
     * The marketplaceOfferDetails property.
     */
    @JsonProperty(value = "marketplaceOfferDetails")
    private MarketplaceOfferDetails marketplaceOfferDetails;

    /*
     * Gets api-version Swagger Document Dictionary to capture all api-versions of swagger exposed by partner to Data Manager For Agriculture.
     */
    @JsonProperty(value = "openApiSpecsDictionary", access = JsonProperty.Access.WRITE_ONLY)
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, Object> openApiSpecsDictionary;

    /*
     * Application id of the multi tenant application to be used by partner to access Data Manager For Agriculture data.
     */
    @JsonProperty(value = "accessFBApplicationId", access = JsonProperty.Access.WRITE_ONLY)
    private UUID accessFBApplicationId;

    /*
     * Application id of the SaaS multi tenant application.
     */
    @JsonProperty(value = "saaSApplicationId", access = JsonProperty.Access.WRITE_ONLY)
    private String saaSApplicationId;

    /*
     * List of ActionIds needed to make the SaaS multi tenant application access relevant fb data.
     */
    @JsonProperty(value = "actionIds", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> actionIds;

    /*
     * Role Id of the SaaS multi tenant application to access relevant fb data.
     */
    @JsonProperty(value = "roleId", access = JsonProperty.Access.WRITE_ONLY)
    private String roleId;

    /*
     * Role Name of the SaaS multi tenant application to access relevant fb data.
     */
    @JsonProperty(value = "roleName", access = JsonProperty.Access.WRITE_ONLY)
    private String roleName;

    /*
     * Application name of the multi tenant application to be used by partner to access Data Manager For Agriculture Data.
     */
    @JsonProperty(value = "accessFBApplicationName", access = JsonProperty.Access.WRITE_ONLY)
    private String accessFBApplicationName;

    /**
     * Creates an instance of DataManagerForAgricultureSolutionProperties class.
     */
    public DataManagerForAgricultureSolutionProperties() {
    }

    /**
     * Get the partnerId property: Solution Partner Id.
     * 
     * @return the partnerId value.
     */
    public String partnerId() {
        return this.partnerId;
    }

    /**
     * Get the partnerTenantId property: Solution Partner Tenant Id.
     * 
     * @return the partnerTenantId value.
     */
    public String partnerTenantId() {
        return this.partnerTenantId;
    }

    /**
     * Get the dataAccessScopes property: Gets scope of the Data manager For Agriculture data access that's required for
     * processing solution request to partner.
     * Example: For gdd they might need weatherScope and satelliteScope.
     * 
     * @return the dataAccessScopes value.
     */
    public List<String> dataAccessScopes() {
        return this.dataAccessScopes;
    }

    /**
     * Get the marketplaceOfferDetails property: The marketplaceOfferDetails property.
     * 
     * @return the marketplaceOfferDetails value.
     */
    public MarketplaceOfferDetails marketplaceOfferDetails() {
        return this.marketplaceOfferDetails;
    }

    /**
     * Set the marketplaceOfferDetails property: The marketplaceOfferDetails property.
     * 
     * @param marketplaceOfferDetails the marketplaceOfferDetails value to set.
     * @return the DataManagerForAgricultureSolutionProperties object itself.
     */
    public DataManagerForAgricultureSolutionProperties
        withMarketplaceOfferDetails(MarketplaceOfferDetails marketplaceOfferDetails) {
        this.marketplaceOfferDetails = marketplaceOfferDetails;
        return this;
    }

    /**
     * Get the openApiSpecsDictionary property: Gets api-version Swagger Document Dictionary to capture all api-versions
     * of swagger exposed by partner to Data Manager For Agriculture.
     * 
     * @return the openApiSpecsDictionary value.
     */
    public Map<String, Object> openApiSpecsDictionary() {
        return this.openApiSpecsDictionary;
    }

    /**
     * Get the accessFBApplicationId property: Application id of the multi tenant application to be used by partner to
     * access Data Manager For Agriculture data.
     * 
     * @return the accessFBApplicationId value.
     */
    public UUID accessFBApplicationId() {
        return this.accessFBApplicationId;
    }

    /**
     * Get the saaSApplicationId property: Application id of the SaaS multi tenant application.
     * 
     * @return the saaSApplicationId value.
     */
    public String saaSApplicationId() {
        return this.saaSApplicationId;
    }

    /**
     * Get the actionIds property: List of ActionIds needed to make the SaaS multi tenant application access relevant fb
     * data.
     * 
     * @return the actionIds value.
     */
    public List<String> actionIds() {
        return this.actionIds;
    }

    /**
     * Get the roleId property: Role Id of the SaaS multi tenant application to access relevant fb data.
     * 
     * @return the roleId value.
     */
    public String roleId() {
        return this.roleId;
    }

    /**
     * Get the roleName property: Role Name of the SaaS multi tenant application to access relevant fb data.
     * 
     * @return the roleName value.
     */
    public String roleName() {
        return this.roleName;
    }

    /**
     * Get the accessFBApplicationName property: Application name of the multi tenant application to be used by partner
     * to access Data Manager For Agriculture Data.
     * 
     * @return the accessFBApplicationName value.
     */
    public String accessFBApplicationName() {
        return this.accessFBApplicationName;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (marketplaceOfferDetails() != null) {
            marketplaceOfferDetails().validate();
        }
    }
}
