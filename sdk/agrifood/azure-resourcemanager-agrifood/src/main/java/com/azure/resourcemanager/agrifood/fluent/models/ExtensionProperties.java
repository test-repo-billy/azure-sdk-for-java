// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.agrifood.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.resourcemanager.agrifood.models.ApiProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * Extension resource properties.
 */
@Immutable
public final class ExtensionProperties {
    /*
     * Extension Id.
     */
    @JsonProperty(value = "extensionId", access = JsonProperty.Access.WRITE_ONLY)
    private String extensionId;

    /*
     * Extension category. e.g. weather/sensor/satellite.
     */
    @JsonProperty(value = "extensionCategory", access = JsonProperty.Access.WRITE_ONLY)
    private String extensionCategory;

    /*
     * Installed extension version.
     */
    @JsonProperty(value = "installedExtensionVersion", access = JsonProperty.Access.WRITE_ONLY)
    private String installedExtensionVersion;

    /*
     * Extension auth link.
     */
    @JsonProperty(value = "extensionAuthLink", access = JsonProperty.Access.WRITE_ONLY)
    private String extensionAuthLink;

    /*
     * Extension api docs link.
     */
    @JsonProperty(value = "extensionApiDocsLink", access = JsonProperty.Access.WRITE_ONLY)
    private String extensionApiDocsLink;

    /*
     * Additional Api Properties.
     */
    @JsonProperty(value = "additionalApiProperties", access = JsonProperty.Access.WRITE_ONLY)
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, ApiProperties> additionalApiProperties;

    /**
     * Creates an instance of ExtensionProperties class.
     */
    public ExtensionProperties() {
    }

    /**
     * Get the extensionId property: Extension Id.
     * 
     * @return the extensionId value.
     */
    public String extensionId() {
        return this.extensionId;
    }

    /**
     * Get the extensionCategory property: Extension category. e.g. weather/sensor/satellite.
     * 
     * @return the extensionCategory value.
     */
    public String extensionCategory() {
        return this.extensionCategory;
    }

    /**
     * Get the installedExtensionVersion property: Installed extension version.
     * 
     * @return the installedExtensionVersion value.
     */
    public String installedExtensionVersion() {
        return this.installedExtensionVersion;
    }

    /**
     * Get the extensionAuthLink property: Extension auth link.
     * 
     * @return the extensionAuthLink value.
     */
    public String extensionAuthLink() {
        return this.extensionAuthLink;
    }

    /**
     * Get the extensionApiDocsLink property: Extension api docs link.
     * 
     * @return the extensionApiDocsLink value.
     */
    public String extensionApiDocsLink() {
        return this.extensionApiDocsLink;
    }

    /**
     * Get the additionalApiProperties property: Additional Api Properties.
     * 
     * @return the additionalApiProperties value.
     */
    public Map<String, ApiProperties> additionalApiProperties() {
        return this.additionalApiProperties;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (additionalApiProperties() != null) {
            additionalApiProperties().values().forEach(e -> {
                if (e != null) {
                    e.validate();
                }
            });
        }
    }
}
