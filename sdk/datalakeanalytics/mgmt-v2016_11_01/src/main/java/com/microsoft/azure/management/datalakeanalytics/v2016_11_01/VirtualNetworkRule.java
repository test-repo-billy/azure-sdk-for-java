/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datalakeanalytics.v2016_11_01;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.SubResource;

/**
 * Data Lake Analytics  VirtualNetwork Rule information.
 */
@JsonFlatten
public class VirtualNetworkRule extends SubResource {
    /**
     * The resource identifier for the subnet.
     */
    @JsonProperty(value = "properties.subnetId", access = JsonProperty.Access.WRITE_ONLY)
    private String subnetId;

    /**
     * The current state of the VirtualNetwork Rule. Possible values include:
     * 'Active', 'NetworkSourceDeleted', 'Failed'.
     */
    @JsonProperty(value = "properties.virtualNetworkRuleState", access = JsonProperty.Access.WRITE_ONLY)
    private VirtualNetworkRuleState virtualNetworkRuleState;

    /**
     * The resource name.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /**
     * The resource type.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /**
     * Get the resource identifier for the subnet.
     *
     * @return the subnetId value
     */
    public String subnetId() {
        return this.subnetId;
    }

    /**
     * Get the current state of the VirtualNetwork Rule. Possible values include: 'Active', 'NetworkSourceDeleted', 'Failed'.
     *
     * @return the virtualNetworkRuleState value
     */
    public VirtualNetworkRuleState virtualNetworkRuleState() {
        return this.virtualNetworkRuleState;
    }

    /**
     * Get the resource name.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the resource type.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

}
