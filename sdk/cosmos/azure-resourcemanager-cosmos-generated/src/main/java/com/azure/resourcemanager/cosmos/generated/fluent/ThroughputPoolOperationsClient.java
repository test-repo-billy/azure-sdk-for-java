// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.cosmos.generated.fluent.models.ThroughputPoolResourceInner;
import com.azure.resourcemanager.cosmos.generated.models.ThroughputPoolUpdate;

/**
 * An instance of this class provides access to all the operations defined in ThroughputPoolOperationsClient.
 */
public interface ThroughputPoolOperationsClient {
    /**
     * Retrieves the properties of an existing Azure Cosmos DB Throughput Pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param throughputPoolName Cosmos DB Throughput Pool name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Cosmos DB Throughputpool along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<ThroughputPoolResourceInner> getByResourceGroupWithResponse(String resourceGroupName,
        String throughputPoolName, Context context);

    /**
     * Retrieves the properties of an existing Azure Cosmos DB Throughput Pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param throughputPoolName Cosmos DB Throughput Pool name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Cosmos DB Throughputpool.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ThroughputPoolResourceInner getByResourceGroup(String resourceGroupName, String throughputPoolName);

    /**
     * Creates or updates an Azure Cosmos DB ThroughputPool account. The "Update" method is preferred when performing
     * updates on an account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param throughputPoolName Cosmos DB Throughput Pool name.
     * @param body The parameters to provide for the current ThroughputPool.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of an Azure Cosmos DB Throughputpool.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ThroughputPoolResourceInner>, ThroughputPoolResourceInner>
        beginCreateOrUpdate(String resourceGroupName, String throughputPoolName, ThroughputPoolResourceInner body);

    /**
     * Creates or updates an Azure Cosmos DB ThroughputPool account. The "Update" method is preferred when performing
     * updates on an account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param throughputPoolName Cosmos DB Throughput Pool name.
     * @param body The parameters to provide for the current ThroughputPool.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of an Azure Cosmos DB Throughputpool.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ThroughputPoolResourceInner>, ThroughputPoolResourceInner> beginCreateOrUpdate(
        String resourceGroupName, String throughputPoolName, ThroughputPoolResourceInner body, Context context);

    /**
     * Creates or updates an Azure Cosmos DB ThroughputPool account. The "Update" method is preferred when performing
     * updates on an account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param throughputPoolName Cosmos DB Throughput Pool name.
     * @param body The parameters to provide for the current ThroughputPool.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Cosmos DB Throughputpool.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ThroughputPoolResourceInner createOrUpdate(String resourceGroupName, String throughputPoolName,
        ThroughputPoolResourceInner body);

    /**
     * Creates or updates an Azure Cosmos DB ThroughputPool account. The "Update" method is preferred when performing
     * updates on an account.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param throughputPoolName Cosmos DB Throughput Pool name.
     * @param body The parameters to provide for the current ThroughputPool.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Cosmos DB Throughputpool.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ThroughputPoolResourceInner createOrUpdate(String resourceGroupName, String throughputPoolName,
        ThroughputPoolResourceInner body, Context context);

    /**
     * Updates the properties of an existing Azure Cosmos DB Throughput Pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param throughputPoolName Cosmos DB Throughput Pool name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of an Azure Cosmos DB Throughputpool.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ThroughputPoolResourceInner>, ThroughputPoolResourceInner>
        beginUpdate(String resourceGroupName, String throughputPoolName);

    /**
     * Updates the properties of an existing Azure Cosmos DB Throughput Pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param throughputPoolName Cosmos DB Throughput Pool name.
     * @param body The parameters to provide for the current Throughput Pool.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of an Azure Cosmos DB Throughputpool.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<ThroughputPoolResourceInner>, ThroughputPoolResourceInner>
        beginUpdate(String resourceGroupName, String throughputPoolName, ThroughputPoolUpdate body, Context context);

    /**
     * Updates the properties of an existing Azure Cosmos DB Throughput Pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param throughputPoolName Cosmos DB Throughput Pool name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Cosmos DB Throughputpool.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ThroughputPoolResourceInner update(String resourceGroupName, String throughputPoolName);

    /**
     * Updates the properties of an existing Azure Cosmos DB Throughput Pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param throughputPoolName Cosmos DB Throughput Pool name.
     * @param body The parameters to provide for the current Throughput Pool.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an Azure Cosmos DB Throughputpool.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    ThroughputPoolResourceInner update(String resourceGroupName, String throughputPoolName, ThroughputPoolUpdate body,
        Context context);

    /**
     * Deletes an existing Azure Cosmos DB Throughput Pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param throughputPoolName Cosmos DB Throughput Pool name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String throughputPoolName);

    /**
     * Deletes an existing Azure Cosmos DB Throughput Pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param throughputPoolName Cosmos DB Throughput Pool name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String throughputPoolName,
        Context context);

    /**
     * Deletes an existing Azure Cosmos DB Throughput Pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param throughputPoolName Cosmos DB Throughput Pool name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String throughputPoolName);

    /**
     * Deletes an existing Azure Cosmos DB Throughput Pool.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param throughputPoolName Cosmos DB Throughput Pool name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String throughputPoolName, Context context);
}
