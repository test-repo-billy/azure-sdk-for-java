// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.cosmos.generated.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cosmos.generated.fluent.models.ThroughputPoolAccountResourceInner;

/**
 * An immutable client-side representation of ThroughputPoolAccountResource.
 */
public interface ThroughputPoolAccountResource {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: A provisioning state of the ThroughputPool Account.
     * 
     * @return the provisioningState value.
     */
    Status provisioningState();

    /**
     * Gets the accountResourceIdentifier property: The resource identifier of global database account in the
     * throughputPool.
     * 
     * @return the accountResourceIdentifier value.
     */
    String accountResourceIdentifier();

    /**
     * Gets the accountLocation property: The location of global database account in the throughputPool.
     * 
     * @return the accountLocation value.
     */
    String accountLocation();

    /**
     * Gets the accountInstanceId property: The instance id of global database account in the throughputPool.
     * 
     * @return the accountInstanceId value.
     */
    String accountInstanceId();

    /**
     * Gets the inner com.azure.resourcemanager.cosmos.generated.fluent.models.ThroughputPoolAccountResourceInner
     * object.
     * 
     * @return the inner object.
     */
    ThroughputPoolAccountResourceInner innerModel();

    /**
     * The entirety of the ThroughputPoolAccountResource definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The ThroughputPoolAccountResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the ThroughputPoolAccountResource definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the ThroughputPoolAccountResource definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, throughputPoolName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param throughputPoolName Cosmos DB Throughput Pool name.
             * @return the next definition stage.
             */
            WithCreate withExistingThroughputPool(String resourceGroupName, String throughputPoolName);
        }

        /**
         * The stage of the ThroughputPoolAccountResource definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithProvisioningState,
            DefinitionStages.WithAccountResourceIdentifier, DefinitionStages.WithAccountLocation {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            ThroughputPoolAccountResource create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ThroughputPoolAccountResource create(Context context);
        }

        /**
         * The stage of the ThroughputPoolAccountResource definition allowing to specify provisioningState.
         */
        interface WithProvisioningState {
            /**
             * Specifies the provisioningState property: A provisioning state of the ThroughputPool Account..
             * 
             * @param provisioningState A provisioning state of the ThroughputPool Account.
             * @return the next definition stage.
             */
            WithCreate withProvisioningState(Status provisioningState);
        }

        /**
         * The stage of the ThroughputPoolAccountResource definition allowing to specify accountResourceIdentifier.
         */
        interface WithAccountResourceIdentifier {
            /**
             * Specifies the accountResourceIdentifier property: The resource identifier of global database account in
             * the throughputPool..
             * 
             * @param accountResourceIdentifier The resource identifier of global database account in the
             * throughputPool.
             * @return the next definition stage.
             */
            WithCreate withAccountResourceIdentifier(String accountResourceIdentifier);
        }

        /**
         * The stage of the ThroughputPoolAccountResource definition allowing to specify accountLocation.
         */
        interface WithAccountLocation {
            /**
             * Specifies the accountLocation property: The location of global database account in the throughputPool..
             * 
             * @param accountLocation The location of global database account in the throughputPool.
             * @return the next definition stage.
             */
            WithCreate withAccountLocation(String accountLocation);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    ThroughputPoolAccountResource refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ThroughputPoolAccountResource refresh(Context context);
}
