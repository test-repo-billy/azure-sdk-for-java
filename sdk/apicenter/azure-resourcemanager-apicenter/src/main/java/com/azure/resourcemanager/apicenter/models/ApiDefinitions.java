// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of ApiDefinitions.
 */
public interface ApiDefinitions {
    /**
     * List API definitions
     * 
     * Returns a collection of API definitions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param apiName The name of the API.
     * @param versionName The name of the API version.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI version collection as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ApiDefinition> list(String resourceGroupName, String serviceName, String workspaceName,
        String apiName, String versionName);

    /**
     * List API definitions
     * 
     * Returns a collection of API definitions.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param apiName The name of the API.
     * @param versionName The name of the API version.
     * @param filter OData filter parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI version collection as paginated response with {@link PagedIterable}.
     */
    PagedIterable<ApiDefinition> list(String resourceGroupName, String serviceName, String workspaceName,
        String apiName, String versionName, String filter, Context context);

    /**
     * Get API definition
     * 
     * Returns details of the API definition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param apiName The name of the API.
     * @param versionName The name of the API version.
     * @param definitionName The name of the API definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI definition.
     */
    Response<ApiDefinition> getWithResponse(String resourceGroupName, String serviceName, String workspaceName,
        String apiName, String versionName, String definitionName, Context context);

    /**
     * Get API definition
     * 
     * Returns details of the API definition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param apiName The name of the API.
     * @param versionName The name of the API version.
     * @param definitionName The name of the API definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI definition.
     */
    ApiDefinition get(String resourceGroupName, String serviceName, String workspaceName, String apiName,
        String versionName, String definitionName);

    /**
     * Delete API definition
     * 
     * Deletes specified API definition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param apiName The name of the API.
     * @param versionName The name of the API version.
     * @param definitionName The name of the API definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(String resourceGroupName, String serviceName, String workspaceName,
        String apiName, String versionName, String definitionName, Context context);

    /**
     * Delete API definition
     * 
     * Deletes specified API definition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param apiName The name of the API.
     * @param versionName The name of the API version.
     * @param definitionName The name of the API definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String serviceName, String workspaceName, String apiName, String versionName,
        String definitionName);

    /**
     * Check if API definition exists
     * 
     * Checks if specified API definition exists.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param apiName The name of the API.
     * @param versionName The name of the API version.
     * @param definitionName The name of the API definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> headWithResponse(String resourceGroupName, String serviceName, String workspaceName, String apiName,
        String versionName, String definitionName, Context context);

    /**
     * Check if API definition exists
     * 
     * Checks if specified API definition exists.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param apiName The name of the API.
     * @param versionName The name of the API version.
     * @param definitionName The name of the API definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void head(String resourceGroupName, String serviceName, String workspaceName, String apiName, String versionName,
        String definitionName);

    /**
     * Import API specification
     * 
     * Imports the API specification.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param apiName The name of the API.
     * @param versionName The name of the API version.
     * @param definitionName The name of the API definition.
     * @param payload The API specification source entity.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> importSpecificationWithResponse(String resourceGroupName, String serviceName, String workspaceName,
        String apiName, String versionName, String definitionName, ApiSpecImportRequest payload, Context context);

    /**
     * Import API specification
     * 
     * Imports the API specification.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param apiName The name of the API.
     * @param versionName The name of the API version.
     * @param definitionName The name of the API definition.
     * @param payload The API specification source entity.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void importSpecification(String resourceGroupName, String serviceName, String workspaceName, String apiName,
        String versionName, String definitionName, ApiSpecImportRequest payload);

    /**
     * Export API specification
     * 
     * Exports the API specification.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param apiName The name of the API.
     * @param versionName The name of the API version.
     * @param definitionName The name of the API definition.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the API specification export result along with {@link Response}.
     */
    Response<ApiSpecExportResult> exportSpecificationWithResponse(String resourceGroupName, String serviceName,
        String workspaceName, String apiName, String versionName, String definitionName, Context context);

    /**
     * Export API specification
     * 
     * Exports the API specification.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param serviceName The name of Azure API Center service.
     * @param workspaceName The name of the workspace.
     * @param apiName The name of the API.
     * @param versionName The name of the API version.
     * @param definitionName The name of the API definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the API specification export result.
     */
    ApiSpecExportResult exportSpecification(String resourceGroupName, String serviceName, String workspaceName,
        String apiName, String versionName, String definitionName);

    /**
     * Get API definition
     * 
     * Returns details of the API definition.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI definition.
     */
    ApiDefinition getById(String id);

    /**
     * Get API definition
     * 
     * Returns details of the API definition.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return aPI definition.
     */
    Response<ApiDefinition> getByIdWithResponse(String id, Context context);

    /**
     * Delete API definition
     * 
     * Deletes specified API definition.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete API definition
     * 
     * Deletes specified API definition.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ApiDefinition resource.
     * 
     * @param name resource name.
     * @return the first stage of the new ApiDefinition definition.
     */
    ApiDefinition.DefinitionStages.Blank define(String name);
}
