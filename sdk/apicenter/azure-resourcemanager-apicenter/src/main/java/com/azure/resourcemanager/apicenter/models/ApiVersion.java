// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.apicenter.fluent.models.ApiVersionInner;

/**
 * An immutable client-side representation of ApiVersion.
 */
public interface ApiVersion {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the title property: API version title.
     * 
     * @return the title value.
     */
    String title();

    /**
     * Gets the lifecycleStage property: Current lifecycle stage of the API.
     * 
     * @return the lifecycleStage value.
     */
    LifecycleStage lifecycleStage();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.apicenter.fluent.models.ApiVersionInner object.
     * 
     * @return the inner object.
     */
    ApiVersionInner innerModel();

    /**
     * The entirety of the ApiVersion definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The ApiVersion definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the ApiVersion definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the ApiVersion definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, serviceName, workspaceName, apiName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param serviceName The name of Azure API Center service.
             * @param workspaceName The name of the workspace.
             * @param apiName The name of the API.
             * @return the next definition stage.
             */
            WithCreate withExistingApi(String resourceGroupName, String serviceName, String workspaceName,
                String apiName);
        }

        /**
         * The stage of the ApiVersion definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTitle, DefinitionStages.WithLifecycleStage {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            ApiVersion create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ApiVersion create(Context context);
        }

        /**
         * The stage of the ApiVersion definition allowing to specify title.
         */
        interface WithTitle {
            /**
             * Specifies the title property: API version title..
             * 
             * @param title API version title.
             * @return the next definition stage.
             */
            WithCreate withTitle(String title);
        }

        /**
         * The stage of the ApiVersion definition allowing to specify lifecycleStage.
         */
        interface WithLifecycleStage {
            /**
             * Specifies the lifecycleStage property: Current lifecycle stage of the API..
             * 
             * @param lifecycleStage Current lifecycle stage of the API.
             * @return the next definition stage.
             */
            WithCreate withLifecycleStage(LifecycleStage lifecycleStage);
        }
    }

    /**
     * Begins update for the ApiVersion resource.
     * 
     * @return the stage of resource update.
     */
    ApiVersion.Update update();

    /**
     * The template for ApiVersion update.
     */
    interface Update extends UpdateStages.WithTitle, UpdateStages.WithLifecycleStage {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        ApiVersion apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ApiVersion apply(Context context);
    }

    /**
     * The ApiVersion update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the ApiVersion update allowing to specify title.
         */
        interface WithTitle {
            /**
             * Specifies the title property: API version title..
             * 
             * @param title API version title.
             * @return the next definition stage.
             */
            Update withTitle(String title);
        }

        /**
         * The stage of the ApiVersion update allowing to specify lifecycleStage.
         */
        interface WithLifecycleStage {
            /**
             * Specifies the lifecycleStage property: Current lifecycle stage of the API..
             * 
             * @param lifecycleStage Current lifecycle stage of the API.
             * @return the next definition stage.
             */
            Update withLifecycleStage(LifecycleStage lifecycleStage);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    ApiVersion refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ApiVersion refresh(Context context);
}
