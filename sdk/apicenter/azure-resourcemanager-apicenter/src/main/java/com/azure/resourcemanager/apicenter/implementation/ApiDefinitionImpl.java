// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.apicenter.fluent.models.ApiDefinitionInner;
import com.azure.resourcemanager.apicenter.models.ApiDefinition;
import com.azure.resourcemanager.apicenter.models.ApiDefinitionPropertiesSpecification;
import com.azure.resourcemanager.apicenter.models.ApiSpecExportResult;
import com.azure.resourcemanager.apicenter.models.ApiSpecImportRequest;

public final class ApiDefinitionImpl implements ApiDefinition, ApiDefinition.Definition, ApiDefinition.Update {
    private ApiDefinitionInner innerObject;

    private final com.azure.resourcemanager.apicenter.ApiCenterManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String title() {
        return this.innerModel().title();
    }

    public String description() {
        return this.innerModel().description();
    }

    public ApiDefinitionPropertiesSpecification specification() {
        return this.innerModel().specification();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public ApiDefinitionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.apicenter.ApiCenterManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String serviceName;

    private String workspaceName;

    private String apiName;

    private String versionName;

    private String definitionName;

    public ApiDefinitionImpl withExistingVersion(String resourceGroupName, String serviceName, String workspaceName,
        String apiName, String versionName) {
        this.resourceGroupName = resourceGroupName;
        this.serviceName = serviceName;
        this.workspaceName = workspaceName;
        this.apiName = apiName;
        this.versionName = versionName;
        return this;
    }

    public ApiDefinition create() {
        this.innerObject = serviceManager.serviceClient().getApiDefinitions()
            .createOrUpdateWithResponse(resourceGroupName, serviceName, workspaceName, apiName, versionName,
                definitionName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public ApiDefinition create(Context context) {
        this.innerObject = serviceManager.serviceClient().getApiDefinitions()
            .createOrUpdateWithResponse(resourceGroupName, serviceName, workspaceName, apiName, versionName,
                definitionName, this.innerModel(), context)
            .getValue();
        return this;
    }

    ApiDefinitionImpl(String name, com.azure.resourcemanager.apicenter.ApiCenterManager serviceManager) {
        this.innerObject = new ApiDefinitionInner();
        this.serviceManager = serviceManager;
        this.definitionName = name;
    }

    public ApiDefinitionImpl update() {
        return this;
    }

    public ApiDefinition apply() {
        this.innerObject = serviceManager.serviceClient().getApiDefinitions()
            .createOrUpdateWithResponse(resourceGroupName, serviceName, workspaceName, apiName, versionName,
                definitionName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public ApiDefinition apply(Context context) {
        this.innerObject = serviceManager.serviceClient().getApiDefinitions()
            .createOrUpdateWithResponse(resourceGroupName, serviceName, workspaceName, apiName, versionName,
                definitionName, this.innerModel(), context)
            .getValue();
        return this;
    }

    ApiDefinitionImpl(ApiDefinitionInner innerObject,
        com.azure.resourcemanager.apicenter.ApiCenterManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.serviceName = Utils.getValueFromIdByName(innerObject.id(), "services");
        this.workspaceName = Utils.getValueFromIdByName(innerObject.id(), "workspaces");
        this.apiName = Utils.getValueFromIdByName(innerObject.id(), "apis");
        this.versionName = Utils.getValueFromIdByName(innerObject.id(), "versions");
        this.definitionName = Utils.getValueFromIdByName(innerObject.id(), "definitions");
    }

    public ApiDefinition refresh() {
        this.innerObject = serviceManager.serviceClient().getApiDefinitions().getWithResponse(resourceGroupName,
            serviceName, workspaceName, apiName, versionName, definitionName, Context.NONE).getValue();
        return this;
    }

    public ApiDefinition refresh(Context context) {
        this.innerObject = serviceManager.serviceClient().getApiDefinitions().getWithResponse(resourceGroupName,
            serviceName, workspaceName, apiName, versionName, definitionName, context).getValue();
        return this;
    }

    public Response<Void> importSpecificationWithResponse(ApiSpecImportRequest payload, Context context) {
        return serviceManager.apiDefinitions().importSpecificationWithResponse(resourceGroupName, serviceName,
            workspaceName, apiName, versionName, definitionName, payload, context);
    }

    public void importSpecification(ApiSpecImportRequest payload) {
        serviceManager.apiDefinitions().importSpecification(resourceGroupName, serviceName, workspaceName, apiName,
            versionName, definitionName, payload);
    }

    public Response<ApiSpecExportResult> exportSpecificationWithResponse(Context context) {
        return serviceManager.apiDefinitions().exportSpecificationWithResponse(resourceGroupName, serviceName,
            workspaceName, apiName, versionName, definitionName, context);
    }

    public ApiSpecExportResult exportSpecification() {
        return serviceManager.apiDefinitions().exportSpecification(resourceGroupName, serviceName, workspaceName,
            apiName, versionName, definitionName);
    }

    public ApiDefinitionImpl withTitle(String title) {
        this.innerModel().withTitle(title);
        return this;
    }

    public ApiDefinitionImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }
}
