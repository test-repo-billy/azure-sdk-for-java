// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.apicenter.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.ProxyResource;
import com.azure.core.management.SystemData;
import com.azure.resourcemanager.apicenter.models.ApiKind;
import com.azure.resourcemanager.apicenter.models.Contact;
import com.azure.resourcemanager.apicenter.models.ExternalDocumentation;
import com.azure.resourcemanager.apicenter.models.License;
import com.azure.resourcemanager.apicenter.models.LifecycleStage;
import com.azure.resourcemanager.apicenter.models.TermsOfService;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * API
 * 
 * API entity.
 */
@Fluent
public final class ApiInner extends ProxyResource {
    /*
     * API properties
     * 
     * API properties.
     */
    @JsonProperty(value = "properties")
    private ApiProperties innerProperties;

    /*
     * Azure Resource Manager metadata containing createdBy and modifiedBy information.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Creates an instance of ApiInner class.
     */
    public ApiInner() {
    }

    /**
     * Get the innerProperties property: API properties
     * 
     * API properties.
     * 
     * @return the innerProperties value.
     */
    private ApiProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Get the title property: API title.
     * 
     * @return the title value.
     */
    public String title() {
        return this.innerProperties() == null ? null : this.innerProperties().title();
    }

    /**
     * Set the title property: API title.
     * 
     * @param title the title value to set.
     * @return the ApiInner object itself.
     */
    public ApiInner withTitle(String title) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiProperties();
        }
        this.innerProperties().withTitle(title);
        return this;
    }

    /**
     * Get the kind property: API kind
     * 
     * Kind of API. For example, REST or GraphQL.
     * 
     * @return the kind value.
     */
    public ApiKind kind() {
        return this.innerProperties() == null ? null : this.innerProperties().kind();
    }

    /**
     * Set the kind property: API kind
     * 
     * Kind of API. For example, REST or GraphQL.
     * 
     * @param kind the kind value to set.
     * @return the ApiInner object itself.
     */
    public ApiInner withKind(ApiKind kind) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiProperties();
        }
        this.innerProperties().withKind(kind);
        return this;
    }

    /**
     * Get the description property: Description
     * 
     * Description of the API.
     * 
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: Description
     * 
     * Description of the API.
     * 
     * @param description the description value to set.
     * @return the ApiInner object itself.
     */
    public ApiInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the summary property: Short description of the API.
     * 
     * @return the summary value.
     */
    public String summary() {
        return this.innerProperties() == null ? null : this.innerProperties().summary();
    }

    /**
     * Set the summary property: Short description of the API.
     * 
     * @param summary the summary value to set.
     * @return the ApiInner object itself.
     */
    public ApiInner withSummary(String summary) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiProperties();
        }
        this.innerProperties().withSummary(summary);
        return this;
    }

    /**
     * Get the lifecycleStage property: Current lifecycle stage of the API.
     * 
     * @return the lifecycleStage value.
     */
    public LifecycleStage lifecycleStage() {
        return this.innerProperties() == null ? null : this.innerProperties().lifecycleStage();
    }

    /**
     * Get the termsOfService property: Terms of service
     * 
     * Terms of service for the API.
     * 
     * @return the termsOfService value.
     */
    public TermsOfService termsOfService() {
        return this.innerProperties() == null ? null : this.innerProperties().termsOfService();
    }

    /**
     * Set the termsOfService property: Terms of service
     * 
     * Terms of service for the API.
     * 
     * @param termsOfService the termsOfService value to set.
     * @return the ApiInner object itself.
     */
    public ApiInner withTermsOfService(TermsOfService termsOfService) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiProperties();
        }
        this.innerProperties().withTermsOfService(termsOfService);
        return this;
    }

    /**
     * Get the externalDocumentation property: The externalDocumentation property.
     * 
     * @return the externalDocumentation value.
     */
    public List<ExternalDocumentation> externalDocumentation() {
        return this.innerProperties() == null ? null : this.innerProperties().externalDocumentation();
    }

    /**
     * Set the externalDocumentation property: The externalDocumentation property.
     * 
     * @param externalDocumentation the externalDocumentation value to set.
     * @return the ApiInner object itself.
     */
    public ApiInner withExternalDocumentation(List<ExternalDocumentation> externalDocumentation) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiProperties();
        }
        this.innerProperties().withExternalDocumentation(externalDocumentation);
        return this;
    }

    /**
     * Get the contacts property: The contacts property.
     * 
     * @return the contacts value.
     */
    public List<Contact> contacts() {
        return this.innerProperties() == null ? null : this.innerProperties().contacts();
    }

    /**
     * Set the contacts property: The contacts property.
     * 
     * @param contacts the contacts value to set.
     * @return the ApiInner object itself.
     */
    public ApiInner withContacts(List<Contact> contacts) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiProperties();
        }
        this.innerProperties().withContacts(contacts);
        return this;
    }

    /**
     * Get the license property: License
     * 
     * The license information for the API.
     * 
     * @return the license value.
     */
    public License license() {
        return this.innerProperties() == null ? null : this.innerProperties().license();
    }

    /**
     * Set the license property: License
     * 
     * The license information for the API.
     * 
     * @param license the license value to set.
     * @return the ApiInner object itself.
     */
    public ApiInner withLicense(License license) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiProperties();
        }
        this.innerProperties().withLicense(license);
        return this;
    }

    /**
     * Get the customProperties property: The custom metadata defined for API catalog entities.
     * 
     * @return the customProperties value.
     */
    public Object customProperties() {
        return this.innerProperties() == null ? null : this.innerProperties().customProperties();
    }

    /**
     * Set the customProperties property: The custom metadata defined for API catalog entities.
     * 
     * @param customProperties the customProperties value to set.
     * @return the ApiInner object itself.
     */
    public ApiInner withCustomProperties(Object customProperties) {
        if (this.innerProperties() == null) {
            this.innerProperties = new ApiProperties();
        }
        this.innerProperties().withCustomProperties(customProperties);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
