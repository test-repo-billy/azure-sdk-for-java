// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.health.insights.radiologyinsights;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.FluxUtil;
import com.azure.health.insights.radiologyinsights.implementation.RadiologyInsightsImpl;
import reactor.core.publisher.Mono;

/**
 * Initializes a new instance of the asynchronous AzureHealthInsightsClient type.
 */
@ServiceClient(builder = AzureHealthInsightsClientBuilder.class, isAsync = true)
public final class AzureHealthInsightsAsyncClient {
    @Generated
    private final RadiologyInsightsImpl serviceClient;

    /**
     * Initializes an instance of AzureHealthInsightsAsyncClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    AzureHealthInsightsAsyncClient(RadiologyInsightsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Get Radiology Insights job details
     * 
     * Gets the status and details of the Radiology Insights job.
     * 
     * @param id A sequence of textual characters.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the status and details of the Radiology Insights job along with {@link Response} on successful completion
     * of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> getJobWithResponse(String id, RequestOptions requestOptions) {
        return this.serviceClient.getJobWithResponseAsync(id, requestOptions);
    }

    /**
     * Get Radiology Insights job details
     * 
     * Gets the status and details of the Radiology Insights job.
     * 
     * @param id A sequence of textual characters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the status and details of the Radiology Insights job on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> getJob(String id) {
        // Generated convenience method for getJobWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return getJobWithResponse(id, requestOptions).flatMap(FluxUtil::toMono);
    }
}
