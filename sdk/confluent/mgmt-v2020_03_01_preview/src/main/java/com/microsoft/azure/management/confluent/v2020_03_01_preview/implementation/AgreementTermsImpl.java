/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.confluent.v2020_03_01_preview.implementation;

import com.microsoft.azure.management.confluent.v2020_03_01_preview.AgreementTerms;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import org.joda.time.DateTime;

class AgreementTermsImpl extends WrapperImpl<AgreementTermsInner> implements AgreementTerms {
    private final ConfluentManager manager;
    AgreementTermsImpl(AgreementTermsInner inner, ConfluentManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public ConfluentManager manager() {
        return this.manager;
    }

    @Override
    public String accepted() {
        return this.inner().accepted();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String licenseTextLink() {
        return this.inner().licenseTextLink();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String plan() {
        return this.inner().plan();
    }

    @Override
    public String privacyPolicyLink() {
        return this.inner().privacyPolicyLink();
    }

    @Override
    public String product() {
        return this.inner().product();
    }

    @Override
    public String publisher() {
        return this.inner().publisher();
    }

    @Override
    public DateTime retrieveDatetime() {
        return this.inner().retrieveDatetime();
    }

    @Override
    public String signature() {
        return this.inner().signature();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
