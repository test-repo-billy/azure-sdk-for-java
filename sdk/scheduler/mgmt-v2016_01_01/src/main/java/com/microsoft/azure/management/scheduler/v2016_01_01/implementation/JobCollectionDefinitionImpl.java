/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.scheduler.v2016_01_01.implementation;

import com.microsoft.azure.arm.resources.models.implementation.GroupableResourceCoreImpl;
import com.microsoft.azure.management.scheduler.v2016_01_01.JobCollectionDefinition;
import rx.Observable;
import com.microsoft.azure.management.scheduler.v2016_01_01.JobCollectionProperties;

class JobCollectionDefinitionImpl extends GroupableResourceCoreImpl<JobCollectionDefinition, JobCollectionDefinitionInner, JobCollectionDefinitionImpl, SchedulerManager> implements JobCollectionDefinition, JobCollectionDefinition.Definition, JobCollectionDefinition.Update {
    JobCollectionDefinitionImpl(String name, JobCollectionDefinitionInner inner, SchedulerManager manager) {
        super(name, inner, manager);
    }

    @Override
    public Observable<JobCollectionDefinition> createResourceAsync() {
        JobCollectionsInner client = this.manager().inner().jobCollections();
        return client.createOrUpdateAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<JobCollectionDefinition> updateResourceAsync() {
        JobCollectionsInner client = this.manager().inner().jobCollections();
        return client.patchAsync(this.resourceGroupName(), this.name(), this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<JobCollectionDefinitionInner> getInnerAsync() {
        JobCollectionsInner client = this.manager().inner().jobCollections();
        return client.getByResourceGroupAsync(this.resourceGroupName(), this.name());
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public JobCollectionProperties properties() {
        return this.inner().properties();
    }

    @Override
    public JobCollectionDefinitionImpl withProperties(JobCollectionProperties properties) {
        this.inner().withProperties(properties);
        return this;
    }

}
