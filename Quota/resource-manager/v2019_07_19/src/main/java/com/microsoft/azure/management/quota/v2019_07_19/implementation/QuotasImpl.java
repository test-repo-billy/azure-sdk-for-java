/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.quota.v2019_07_19.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.quota.v2019_07_19.Quotas;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.quota.v2019_07_19.CurrentQuotaLimit;

class QuotasImpl extends WrapperImpl<QuotasInner> implements Quotas {
    private final CapacityManager manager;

    QuotasImpl(CapacityManager manager) {
        super(manager.inner().quotas());
        this.manager = manager;
    }

    public CapacityManager manager() {
        return this.manager;
    }

    private CurrentQuotaLimitImpl wrapModel(CurrentQuotaLimitInner inner) {
        return  new CurrentQuotaLimitImpl(inner, manager());
    }

    @Override
    public Observable<CurrentQuotaLimit> listStatusAsync(final String providerId, final String location) {
        QuotasInner client = this.inner();
        return client.listStatusAsync(providerId, location)
        .flatMapIterable(new Func1<Page<CurrentQuotaLimitInner>, Iterable<CurrentQuotaLimitInner>>() {
            @Override
            public Iterable<CurrentQuotaLimitInner> call(Page<CurrentQuotaLimitInner> page) {
                return page.items();
            }
        })
        .map(new Func1<CurrentQuotaLimitInner, CurrentQuotaLimit>() {
            @Override
            public CurrentQuotaLimit call(CurrentQuotaLimitInner inner) {
                return wrapModel(inner);
            }
        });
    }

}
