/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.quota.v2019_07_19;

import rx.Observable;
import com.microsoft.azure.management.quota.v2019_07_19.implementation.QuotaRequestsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing QuotaRequests.
 */
public interface QuotaRequests extends HasInner<QuotaRequestsInner> {
    /**
     * For the specified location and resource Provider, gets the current quota requests under the subscription over the time
     period of one year ago from now to one year back.
     * For the specified location and Resource provider gets the current quota requests under the subscription over the time period of one year ago from now to one year back. oData filter can be used to select quota requests.
     *
     * @param providerId Azure resource Provider id.
     * @param location Azure region.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<LocationProviderQuotaRequestDetails> listStatusAsync(final String providerId, final String location);

    /**
     * Submits a Quota Request for a resource provider at the specified location.
     * Submits Quota change request for a resource provider for the specified location. To use, first make a Get request to get quota information. This information consists of a list of resources and information regarding those resources. For all the resources in that list which require an update to their quotas, update their limit fields in the response from the Get request to their new values. Then, submit this updated JSON object to this quota request API. This will update the quotas to the values specified.
     *
     * @param providerId Azure resource Provider id.
     * @param location Azure region.
     * @param createQuotaRequests Quota requests payload.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<Object> createAsync(String providerId, String location, QuotaLimits createQuotaRequests);

}
